[{"title":"Master-1.注重实效的哲学","url":"http://padding.me/blog/2016/04/11/2016-04-04Master-1-注重实效的哲学/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/DailyReading\" target=\"_blank\" rel=\"external\">DailyReading</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/DailyReading/issues/6\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/DailyReading/issues/6</a></p>\n<h1 id=\"第一章-注重实效的哲学\"><a href=\"#第一章-注重实效的哲学\" class=\"headerlink\" title=\"第一章  注重实效的哲学\"></a>第一章  注重实效的哲学</h1><p>——『程序员修炼之道——从小工到专家』</p>\n<p><strong>注重实效的程序员</strong>的特征是： 他们处理问题、寻求解决方案时的态度、风格、哲学。</p>\n<ol>\n<li>他们能够越出直接的问题去思考，总是设法把问题放在更大的语境中，总是设法注意更大的图景。</li>\n<li>他们对他们所在的每件事情负责。</li>\n</ol>\n<p>理解你的工作的语境的好处之一是，了解你的软件必须有多好变得更容易了。有时接近完美是唯一的选择。</p>\n<p>注重实效的程序员对他或者她自己的职业生涯负责，并且不害怕物质或者错误。</p>\n<p>如果你确实同意要为某个结果负责，你就应该切实负起责任。当你犯错误时，或是判断失误时，诚实地承认它，并设法给出各种选择。不要责备别人或别的东西，或是拼凑借口。不要把所有问题都归咎于供应商、编程语言、管理部门、或者是你的同事。或许他们全体或是某几方在其中扮演了某种角色，但你可以选择提供解决方案，而非寻找借口。</p>\n<p><strong>Provide Options, Don’t Make Lame Excuses.<br>提供各种选择，不要找蹩脚的接口。</strong></p>\n<p>如果你发现自己在有好些破窗户的项目里工作，会很容易产生这样的想法：『这些代码的其余部分也是垃圾，我只要照着做就行了。』如果你发现你所在团队和项目的代码十分漂亮——编写整洁、设计良好，并且很优雅——你就很可能会格外注意不去把它弄脏，你不会想成为第一个弄脏东西的人。</p>\n<p><strong>Don’t Live with Broken Windows.<br>不要容忍破窗户。</strong></p>\n<p><strong>Be a Catalyst for Change.<br>做变化的催化剂。</strong></p>\n<p><strong>Remember the Big Pciture.<br>记住大图景。</strong></p>\n<p>在破窗理论中，人们失去与熵战斗的意愿，是因为他们觉察到没有人会在意。而温水煮青蛙，青蛙只是没有注意到变化。</p>\n<p>不要和青蛙一样。留心大图景。要持续不断地观察周围发生的事情，而不只是你自己在做的事情。</p>\n<p><strong>Make Quality  a Requirements Issue.<br>使质量成为需求问题。</strong></p>\n<p>不要因为过度修饰和过于求精而毁损完好的程序。继续前进，让你的代码凭着自己的质量站立一会儿。它也许并不完美，但不用担心：它不可能完美。</p>\n<p>你的知识和经验是你最重要的职业财富。但是它们都是有时效的资产。</p>\n<p>管理你的知识资产和金融资产一样：</p>\n<ol>\n<li>严肃的投资者定期投资——作为习惯；</li>\n<li>多元化是长期成功的关键；</li>\n<li>聪明的投资者在保守的投资和高风险、高回报的投资之间平衡它们的财产；</li>\n<li>投资者设法低买高卖，以获取最大回报；</li>\n<li>应该周期性地重新评估和平衡资产。</li>\n</ol>\n<p><strong>Invest Regularly in Your Knowledge Protfilio.<br>定期为你的知识资产投资。</strong></p>\n<p>关于对目标的建议：</p>\n<ul>\n<li>每年至少学习一种新语言</li>\n<li>没季度阅读一本技术书籍</li>\n<li>也要阅读非技术书籍</li>\n<li>上课</li>\n<li>参加本地用户组织</li>\n<li>试验不同的环境</li>\n<li>跟上潮流</li>\n<li>上网</li>\n</ul>\n<p><strong>Critically Analyze What You Read and Hear.<br>批判地分析你读到的和听到的。</strong></p>\n<p>批判地思考你读到和听到的。你需要确保你的资产中的知识是准确的，并且没有受到供应商或媒体炒作的影响。</p>\n"},{"title":"dataURLtoBlob","url":"http://padding.me/blog/2015/12/30/dataURLtoBlob/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-JavaScript\" target=\"_blank\" rel=\"external\">Learning-JavaScript</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-JavaScript/issues/32\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-JavaScript/issues/32</a></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//data为文件的base64编码</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">dataURLtoBlob</span>(<span class=\"params\">data</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> tmp = data.split(<span class=\"string\">','</span>);</span><br><span class=\"line\">    tmp[<span class=\"number\">1</span>] = tmp[<span class=\"number\">1</span>].replace(<span class=\"comment\">//s/g,'');</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> binary = atob(tmp[<span class=\"number\">1</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> array = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; binary.length; i++) &#123;</span><br><span class=\"line\">        array.push(binary.charCodeAt(i));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Blob([<span class=\"keyword\">new</span> <span class=\"built_in\">Uint8Array</span>(array)], &#123;type: <span class=\"string\">'image/jpeg'</span>&#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"ssh生成公钥","url":"http://padding.me/blog/2015/12/04/ssh生成公钥/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/paddingme.github.io\" target=\"_blank\" rel=\"external\">paddingme.github.io</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/paddingme.github.io/issues/9\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/paddingme.github.io/issues/9</a></p>\n<h2 id=\"1-本地生成公钥和私钥\"><a href=\"#1-本地生成公钥和私钥\" class=\"headerlink\" title=\"1 本地生成公钥和私钥\"></a>1 本地生成公钥和私钥</h2><p>这里命名为 test( 生成之后公钥为 test.pub 私钥 test 位于 ~/.ssh 下)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh-keygen</span><br><span class=\"line\">Generating public/private rsa key pair.</span><br><span class=\"line\">Enter file in which to save the key (/Users/paddingme/.ssh/id_rsa): test</span><br><span class=\"line\">Enter passphrase (empty for no passphrase): </span><br><span class=\"line\">Enter same passphrase again: </span><br><span class=\"line\">Your identification has been saved in test.</span><br><span class=\"line\">Your public key has been saved in test.pub.</span><br><span class=\"line\">The key fingerprint is:</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"2-发送公钥到远程服务器上\"><a href=\"#2-发送公钥到远程服务器上\" class=\"headerlink\" title=\"2 发送公钥到远程服务器上\"></a>2 发送公钥到远程服务器上</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh-copy-id remoteUser@remoteHost</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-测试是否可以免密登录\"><a href=\"#3-测试是否可以免密登录\" class=\"headerlink\" title=\"3 测试是否可以免密登录\"></a>3 测试是否可以免密登录</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ssh remoteUser@remoteHost</span><br></pre></td></tr></table></figure>\n<p> 不行的话</p>\n<p>登录远程服务器<br> vim /etc/ssh/sshd_config 找到 以下三行去行首#号</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">　　RSAAuthentication yes</span><br><span class=\"line\">　　PubkeyAuthentication yes</span><br><span class=\"line\">　　AuthorizedKeysFile .ssh/authorized_keys</span><br></pre></td></tr></table></figure>\n<p>保存退出</p>\n<p>ok！再测试</p>\n"},{"title":"由 SDCC 想到的","url":"http://padding.me/blog/2015/11/20/sdcc/","content":"<p>这是一篇流水账。</p>\n<p>和去年不一样的，今年很少取参加些技术会议。在 SDCC 之前 只去了 CSS CONF2，还是打着去魔都看女友的幌子。  在CSS CONF 看见 Lily 姐也没来得及寒暄。</p>\n<p>想想去年参加的会议可真多，从 HTML5 峰会，杭州 D2， CSS CONF1， W3CTECH 走进小米 甚至 Ruby Conf，中午还和老大说起 Ruby Conf 的海鲜自助。</p>\n<p>好多事情只有经历了才知道。</p>\n<p>参加了这么多得会议，会觉得：</p>\n<ul>\n<li>大多数的分享没有普适性，都是针对自身公司业务规模进行的。</li>\n<li>很多分享者都是来打广告，招聘的而已。</li>\n<li>要么只是来分享内部开源的一个框架/库，然后大家都去github star，然后没人维护了…</li>\n</ul>\n<p>在我收集了足够多的马克杯、T桖以及七牛云的牛仔后，哦，对了，还中了台小米4来着，我对会议不太热衷。</p>\n<p>最重要的是和大牛们的讨论和思考。这次 SDCC 也是收获满满。</p>\n<p>我真是太喜欢看聪明的人在一起聊天了，思维足够敏捷，一点即通，简单粗暴。</p>\n<p>另一方面我觉得沟通力真的是非常非常重要的硬能力。</p>\n<p>我将我得到的一些思考总结如下：</p>\n<ul>\n<li><p>颠覆。闲谈中聊到一做餐饮的年收入10多亿，但是突然决定今年试水O2O,现在应收已达18亿。rank 说 对这些传统行业都需要这些颠覆和突破，更何况我们这些做技术的。</p>\n</li>\n<li><p>问题在那里，到最后你发现用什么方法都可以解决。无关乎语言，框架，设计模式。不管过程怎样，解决了就一切ok。</p>\n</li>\n<li><p>基础选型应该是走在业务前面的。angular 2 对 1 的颠覆,假如  angular 不维护了，react 不维护了，你的技术收敛成本是不是足够低。</p>\n</li>\n<li><p>大公司的思考模式的确比小公司要想得多得多。流程/自动化/成本。更多的关注问题背后的原因，更关注问题的边界，最后都总结成pattern。</p>\n</li>\n<li><p>自我管理。</p>\n</li>\n</ul>\n<p>可能是年底了吧，最近焦虑的很，跟了好几个项目。</p>\n"},{"title":"IE滚动条问题","url":"http://padding.me/blog/2015/09/17/IE滚动条问题/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-HTML-CSS\" target=\"_blank\" rel=\"external\">Learning-HTML-CSS</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-HTML-CSS/issues/43\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-HTML-CSS/issues/43</a></p>\n<p><a href=\"http://stackoverflow.com/questions/477834/div-with-scroll-and-content-with-absolute-positions\" target=\"_blank\" rel=\"external\">http://stackoverflow.com/questions/477834/div-with-scroll-and-content-with-absolute-positions</a></p>\n<p>I don’t know if it is a bug or a “feature” in IE, but I’ve run into the same thing before. Luckily there is an easy fix. Just add “position:relative” to the <div> that has scrollable contents.</div></p>\n"},{"title":"闭包","url":"http://padding.me/blog/2015/08/22/闭包/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-JavaScript\" target=\"_blank\" rel=\"external\">Learning-JavaScript</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-JavaScript/issues/29\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-JavaScript/issues/29</a></p>\n<p>闭包的两个特点：</p>\n<ol>\n<li>闭包作为与函数成对的数据，在函数执行过程中处于激活（即可访问）状态；</li>\n<li>闭包在函数运行结束后，保持运行过程的最终数据状态。</li>\n</ol>\n<p>总的来说，函数闭包决定了：闭包所对应的函数代码如何访问数据，以及闭包内的数据何时销毁。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 没有函数实例产生</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">myFunc</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> f1 = myFunc;</span><br><span class=\"line\"><span class=\"keyword\">var</span> f2 = myFunc;</span><br><span class=\"line\"></span><br><span class=\"line\">alert(f1 === f2)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">MyObject</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">MyObject.prototype.method = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj1 = <span class=\"keyword\">new</span> MyObject();</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj2 = <span class=\"keyword\">new</span> MyObject();</span><br><span class=\"line\"></span><br><span class=\"line\">alert( obj1.method === obj2.method)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 对象的实例只持有原型中的方法的一个引用，因为也不产生（方法）函数的实例。</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">MyObject</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.method = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj1 = <span class=\"keyword\">new</span> MyObject;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj2 = <span class=\"keyword\">new</span> MyObject;</span><br><span class=\"line\">alert( obj1.method === obj2.method)</span><br><span class=\"line\"><span class=\"comment\">//false</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//构造器函数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">MyObject</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> instance_data = <span class=\"number\">100</span>;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.getInstanceData = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> instance_data;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setInstanceData = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">v</span>) </span>&#123;</span><br><span class=\"line\">        instance_data = v;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 使用一个额匿名函数去修改构造器的原型 MyObject.prototype，以访问该匿名函数中的 upvalue</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> class_data = <span class=\"number\">5</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.getClassData = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> class_data;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setClassData = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">v</span>)</span>&#123;</span><br><span class=\"line\">        class_data = v;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;.call(MyObject.prototype);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj1 = <span class=\"keyword\">new</span> MyObject();</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj2 = <span class=\"keyword\">new</span> MyObject();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// obj1 与 obj2 的 getInstance 是不同函数实例，因此访问的是不同闭包的 upvalue</span></span><br><span class=\"line\">obj1.setInstanceData(<span class=\"number\">10</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj2.getInstanceData());</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// obj1 与 obj2 的 getClassData 是同一个函数实例，因此在访问相同 的 upvalue. </span></span><br><span class=\"line\">obj1.setClassData(<span class=\"number\">20</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj2.getClassData());</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">aFunc</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">MyFunc</span>(<span class=\"params\"></span>)</span>&#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> myFunc;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> f1 = <span class=\"keyword\">new</span> aFunc();</span><br><span class=\"line\"><span class=\"keyword\">var</span> f2 = <span class=\"keyword\">new</span> aFunc();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(f1===f2)</span><br><span class=\"line\"><span class=\"comment\">//FALSE</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//foo &amp; bar 产生函数实例</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span>  MyFunc = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> MyFunc;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//返回同一个实例</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> aFun3 = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> foo = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"number\">111</span>)</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> foo;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> f3 = aFun3();</span><br><span class=\"line\"><span class=\"keyword\">var</span> f4 = aFun3();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(f3 === f4)</span><br></pre></td></tr></table></figure>\n<p>调用对象：</p>\n<ol>\n<li>对象属性与变量没有本质属性；</li>\n<li>全局变量其实是“全局对象”的属性；</li>\n<li>局部变量其实是“调用对象”的属性</li>\n</ol>\n<p>“调用对象”的局部变量维护规则</p>\n<ol>\n<li>在函数开始执行时，varDecls 中所有值将被置为 undefined。 因此我们无论如何访问函数，变量初始值总为 undefined。</li>\n<li>函数执行结束并退出时，varDecls 不会被重置，即有了函数能够提供“在函数内保存数据”。</li>\n<li>函数内部数据持续的生存周期，取决于该函数实例是否存在活动引用——如果没有，则调用对象被销毁。</li>\n</ol>\n<p>“全局对象”的变量维护规则</p>\n<ol>\n<li>由于该函数从来不被再次进入，因此不会被重新初始化；</li>\n<li>由于该函数仅有一个个被系统持有的实例，因此他自身和内部数据总不被销毁。</li>\n</ol>\n<p>函数闭包 与 “调用对象”的生存周期</p>\n<p>在运行期改函数实例有一个函数闭包，在执行时，引擎会：</p>\n<ul>\n<li>创建一个函数实例；</li>\n<li>为该函数实例创建一个闭包；</li>\n<li>为改函数实例（及其闭包）的运行环境从 ScriptObject(调用对象) 复制一个调用对象。</li>\n</ul>\n"},{"title":"作用域闭包","url":"http://padding.me/blog/2015/08/22/作用域闭包/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-JavaScript\" target=\"_blank\" rel=\"external\">Learning-JavaScript</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-JavaScript/issues/30\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-JavaScript/issues/30</a></p>\n<ol>\n<li><p>看起来像闭包。</p>\n <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> a = <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(a);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    bar();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">foo();</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>这才是闭包。</p>\n <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> a = <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(a);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> bar;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> baz = foo();</span><br><span class=\"line\">baz();</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>把内部函数 baz 传递给 bar, 当调用这个内部函数时（现在叫做 fn），它涵盖的 foo()<br>内部作用域的闭包就可以观察到了。因此它能够访问 a。</p>\n <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> a = <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">baz</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(a);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    bar(baz);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span>(<span class=\"params\">fn</span>) </span>&#123;</span><br><span class=\"line\">    fn();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>把 baz 分配给全局变量</p>\n <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> fn;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> a = <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">baz</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(a);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    fn = baz;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    fn();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">foo();</span><br><span class=\"line\">bar();</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>无论通过何种手段将内部函数传递到所在的词法作用域以外，<br>它都会持有对原始定义作用有的引用，<br>无论在何处执行这个函数都会使用闭包。</p>\n <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">wait</span>(<span class=\"params\">message</span>) </span>&#123;</span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">timer</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(message);</span><br><span class=\"line\">    &#125;,<span class=\"number\">1000</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">wait(<span class=\"string\">\"Hello,Closure!\"</span>)</span><br></pre></td></tr></table></figure>\n<p> /<em><br> jquery\n </em>/</p>\n <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setupBot</span>(<span class=\"params\">name,selector</span>)</span>&#123;</span><br><span class=\"line\">    $(selector).click(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">activator</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">\"Activating: \"</span> + name);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">setupBot(<span class=\"string\">\"console BOT1\"</span>,<span class=\"string\">\"#bot_1\"</span>);</span><br><span class=\"line\">setupBot(<span class=\"string\">\"console BOT2\"</span>,<span class=\"string\">\"#bot_2\"</span>);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>IIFE</p>\n <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">2</span>;</span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">IIFE</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(a);</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>循环和闭包</p>\n <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">timer</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(i)</span><br><span class=\"line\">    &#125;,i*<span class=\"number\">1000</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i&lt;=<span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">    (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">j</span>)</span>&#123;</span><br><span class=\"line\">        setInterval(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(j);</span><br><span class=\"line\">        &#125;,<span class=\"number\">1000</span>);</span><br><span class=\"line\">    &#125;)(i);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 每隔一秒钟打印1，2,3,4,5</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span>(<span class=\"params\">arr</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        setInterval(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(arr[i++]);</span><br><span class=\"line\">        &#125;,<span class=\"number\">1000</span>);</span><br><span class=\"line\">    &#125;()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">arr</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> i=<span class=\"number\">0</span>,length=arr.length;</span><br><span class=\"line\">    (<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">a</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        setTimeout(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(arr[i++]);</span><br><span class=\"line\">            i&lt;length&amp;&amp;a();</span><br><span class=\"line\">        &#125;,<span class=\"number\">1000</span>)</span><br><span class=\"line\">    &#125;())</span><br><span class=\"line\">&#125;([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]))</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>模块</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">coolModule</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">var</span> sth = <span class=\"string\">\"cool\"</span>;</span><br><span class=\"line\">     <span class=\"keyword\">var</span> another = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>];</span><br><span class=\"line\">     <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doSth</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(sth);</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doAnother</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(another.join(<span class=\"string\">\"!\"</span>));</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        doSth:  doSth,</span><br><span class=\"line\">        doAnother : doAnother</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"keyword\">new</span> coolModule();</span><br><span class=\"line\">foo.doSth();</span><br><span class=\"line\">foo.doAnother();</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>模块模式需要两个必要条件：</p>\n<ol>\n<li>必须有外部的封闭函数，该函数必须至少<br>被调用一次（每次调用都会创建一个新的模块实例）</li>\n<li>封闭函数必须至少返回至少一个内部函数，<br>这样内部函数才能在私有作用域中形成闭包，<br>并且可以访问或者修改私有的状态。</li>\n</ol>\n</li>\n</ol>\n<ol>\n<li><p>模块模式另一个简单强大的变化用法是，命名将要作为公共API 返回的对象。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> foo = (<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">coolModule</span>(<span class=\"params\">id</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">change</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        publicAPI.identify = identify2;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">identify1</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(id);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">identify2</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(id.toUpperCase());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> publicAPI = &#123;</span><br><span class=\"line\">        change:change,</span><br><span class=\"line\">        identify: identify1</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> publicAPI;</span><br><span class=\"line\">&#125;)(<span class=\"string\">\"foo module\"</span>);</span><br><span class=\"line\">foo.identify();</span><br><span class=\"line\">foo.change();</span><br><span class=\"line\">foo.identify();</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>现代的模块管理</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> MyModules = (<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Manger</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> modules = &#123;&#125;;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">define</span>(<span class=\"params\">name, deps, impl</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; deps.length; i++) &#123;</span><br><span class=\"line\">            deps[i] = modules[deps[i]];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        modules[name] = impl.apply(impl, deps);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get</span>(<span class=\"params\">name</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> modules[name];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        define: define,</span><br><span class=\"line\">        get: get</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)();</span><br><span class=\"line\"></span><br><span class=\"line\">MyModules.define(<span class=\"string\">\"bar\"</span>, [], <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">hello</span>(<span class=\"params\">who</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"Let me introduce: \"</span> + who;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        hello: hello</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">MyModules.define(<span class=\"string\">\"foo\"</span>, [<span class=\"string\">\"bar\"</span>], <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">bar</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> hungry = <span class=\"string\">\"hippo\"</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">awesome</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(bar.hello(hungry).toUpperCase());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        awesome: awesome</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar = MyModules.get(<span class=\"string\">\"bar\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> foo = MyModules.get(<span class=\"string\">\"foo\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(bar.hello(<span class=\"string\">\"hippo\"</span>));</span><br><span class=\"line\">foo.awesome();</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>当函数可以记住并访问所在的词法作用域，即使函数时在当前词法作用域之外执行，这时就产生了闭包。</p>\n<p>模块有两个主要特征： </p>\n<ol>\n<li>为创建内部作用域而调用了一个包装函数；</li>\n<li>包装函数的返回值必须至少包含一个队内部函数的引用，这样就会创建涵盖整个包装函数内部作用域的闭包。</li>\n</ol>\n"},{"title":"CSS框架","url":"http://padding.me/blog/2015/08/10/CSS框架/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-HTML-CSS\" target=\"_blank\" rel=\"external\">Learning-HTML-CSS</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-HTML-CSS/issues/42\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-HTML-CSS/issues/42</a></p>\n<blockquote>\n<p>如下为草稿。</p>\n</blockquote>\n<p>公司需要根据建立新规范，建立新的公共库，供各产品线使用，以期统一视觉规范，以及更好的维护公共库和框架。</p>\n<p>最近看了下 twitter 的 bootstrap 以及  支付宝的  Alice, 有很多借鉴学习的地方，记录在这里，供后续参考、实践。</p>\n<h2 id=\"我们的需求\"><a href=\"#我们的需求\" class=\"headerlink\" title=\"我们的需求\"></a>我们的需求</h2><ol>\n<li><p>文档可视化</p>\n<p>提高文档可读性。代码、DEMO、API 于同一页面可见，说清楚代码库依赖以及如何使用。</p>\n</li>\n<li><p>CSS 易于维护。</p>\n<p>只建立基本的 CSS 基础框架。首先易于公共开发组易于维护，其次易于其他项目组根据自身需求扩展。 这一点 Alice 值得借鉴。后面会详细说明。</p>\n</li>\n<li><p>易于其他团队提出需求和改进。</p>\n</li>\n</ol>\n<p>建立 commet 及时了解各团队需求，以改进 API。(有没有不需要数据库的评论系统，最好还支持 markdown 语法)</p>\n<h2 id=\"Alice-的优缺点\"><a href=\"#Alice-的优缺点\" class=\"headerlink\" title=\"Alice 的优缺点\"></a>Alice 的优缺点</h2><h3 id=\"缺点\"><a href=\"#缺点\" class=\"headerlink\" title=\"缺点\"></a>缺点</h3><p>基于 spmjs 生态圈，不适合我们团队。可以由公共开发组基于 spmjs 单方面维护。</p>\n<h3 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h3><p>Alice 框架的思想值得学习，不会管的太宽，不基于 reset css 基础上 各 模块就可以使用，也可以All in one。</p>\n"},{"title":"indent的问题","url":"http://padding.me/blog/2015/08/04/indent的问题/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-HTML-CSS\" target=\"_blank\" rel=\"external\">Learning-HTML-CSS</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-HTML-CSS/issues/41\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-HTML-CSS/issues/41</a></p>\n<p>subliem  settings-user 中的     <code>&quot;tab_size&quot;: 2</code> 和 .editorconfig <code>indent_size = 2</code> 问题</p>\n<p>===》 统一改为 一个 tab 为 4个 空格 </p>\n"},{"title":"《写给大家看的设计书》读书笔记","url":"http://padding.me/blog/2015/08/02/《写给大家看的设计书》读书笔记/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-HTML-CSS\" target=\"_blank\" rel=\"external\">Learning-HTML-CSS</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-HTML-CSS/issues/40\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-HTML-CSS/issues/40</a></p>\n<h1 id=\"第一部分-设计原则\"><a href=\"#第一部分-设计原则\" class=\"headerlink\" title=\"第一部分 设计原则\"></a>第一部分 设计原则</h1><h2 id=\"约书亚树\"><a href=\"#约书亚树\" class=\"headerlink\" title=\"约书亚树\"></a>约书亚树</h2><blockquote>\n<p>一旦你能够说出什么东西的名字，就会很容易注意到它。你就会掌握它，拥有它，使它在你的控制中。</p>\n</blockquote>\n<p>优秀的设计就这么简单：</p>\n<ol>\n<li>学习 4 大基本原则。</li>\n<li>认识到自己没有运用这些原则。</li>\n<li>应用基本原则。</li>\n</ol>\n<p>4 大基本原则:</p>\n<ul>\n<li>对比（Contrast）<br> 对比的基本思想是，要避免页面上的元素太过相似。如果元素（字体、颜色、大小、线宽、形状、空间等）不相同，那就干脆让它们<strong>截然不同</strong>。</li>\n<li>重复（Repetition）<br>让设计中的视觉要去在整个作品中重复出现。可以重复颜色、形状、材质 、空间关系、线宽、字体、大小和图片，等等。 增加条理性，加强统一性。</li>\n<li>对其  (Alignment)<br>任何东西都不能在页面上随意安放。 每个元素都应当与页面上的另一个元素有某种视觉联系。建立一种清晰、精巧而且清爽的外观。</li>\n<li>亲密性 (Proximity)<br>彼此相关的项应当靠近，归组在一起。如果多个项相互之间存在很近的亲密性，它们就会成为一个视觉单元，而不是多个孤立的元素。这有助于组织信息，减少混乱，为读者提供清晰的结构。</li>\n</ul>\n<h2 id=\"亲密性-Proximity\"><a href=\"#亲密性-Proximity\" class=\"headerlink\" title=\"亲密性 (Proximity)\"></a>亲密性 (Proximity)</h2><p>亲密性原则是指： <strong>将相关的项组织在一起</strong>，移动这些项，使它们的物理位置相互靠近，这样一来，相关的项将被看做凝聚为一体的一个组，将不再是彼此无关的片段。<strong>物理位置的接近就意味存在着关联</strong>。亲密性的根本目的是实现<strong>组织性</strong>。</p>\n<p>要有意识地注意你是怎样阅读的，你的视线怎样移动： 从哪里开始；沿着怎样的路径；到哪里结束；读完之后，接下来看哪里？整个过程应当是一个合理的过程，有确定的开始，而且要有确定的结束。</p>\n<ul>\n<li><p>如何实现</p>\n<p>微微眯起眼睛，统计你的眼睛停顿的次数来数一数页面上有多少个元素。如果页面上的项超过 3~5 个（当然这取决于具体情况），就要看看哪些孤立的元素可以归在一组建立更近的亲密性，使之成为一个视觉单元。</p>\n</li>\n<li><p>要避免的问题</p>\n<ul>\n<li>不要仅仅因为有空白就把元素放在角落或者中央；</li>\n<li>避免一个页面上有太多鼓励的元素；</li>\n<li>不要在元素之间留出同样大小的空白，除非各组同属于一个子集。</li>\n<li>标题、子标题、图标标题、图片能否归入其相关材料？在这个问题上一定要非常清楚（哪怕有一点含糊都要尽量避免）。在有很近亲密性的元素之间建立关系。</li>\n<li>不同属一组的元素之间不要建立关系！如果元素彼此无关，要把它们分开。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"对齐（Contrast）\"><a href=\"#对齐（Contrast）\" class=\"headerlink\" title=\"对齐（Contrast）\"></a>对齐（Contrast）</h2><p>对齐原则是指：<strong>任何元素都不能在页面上随意安放。每一项都应当与页面上的某个内容存在某种视觉联系</strong>。</p>\n<p>居中对其会创建一种更正式、更稳重的外观。这种外观显得更为中规中矩，但通常也很乏味。大多数看起来精巧的设计都没有采用居中对齐。</p>\n<p>页面上只使用一种文本对齐，所有文本都左对齐，或右对齐，或者全部居中。</p>\n<p>有时，你可能喜欢在同一个页面上同时使用右对齐或者左对齐文本，不过一定要确保让这些文本以某种方式对齐！</p>\n<p><strong>找到一条明确的对齐线，并坚持以它为基准。 </strong></p>\n<p>如果设计中的对齐很明确，那么可以有意识地打破对齐，而且一定要表现出这是有意的，技巧就在于，打破常规对齐时不要怯弱，一定要干脆一些。要么全部采用一种方式，要么全部不采用这种方式。千万不要保守。<strong>在打破规则之前必须清楚规则是什么</strong>。</p>\n<p>对齐的根本目的设计使页面<strong>统一且有条理</strong>。</p>\n<h2 id=\"重复-Repetition\"><a href=\"#重复-Repetition\" class=\"headerlink\" title=\"重复 (Repetition)\"></a>重复 (Repetition)</h2><p>重复原则：设计的某些方面需要在整个作品中重复。读者能看到的任何方面都可以作为重复元素。</p>\n<p>新手要把重复的概念更进一步，把无意的重复变为有意，利用重复将一系列出版物从视觉上系为一体。</p>\n<p>重复不知识自然的一致，这是一种统一设计各个部分的有意识的行为。</p>\n<p>设计中视觉原速度额重复可以将作品中的各部分连在一起，从而统一并增强整个作品,否则这些部分知识彼此孤立的单元。重复不仅对只有一页的作品很有用，对于多页文档的设计更显重要（一致性）。</p>\n<p>重复的目的就是统一，并增强视觉效果。</p>\n<p>如何做呢，需要把现有的一致性更向前推进一步。</p>\n<p>要避免太多地重复一个元素，重复太多会让人讨厌。要注意对比的价值。</p>\n<h2 id=\"对比-Alignment\"><a href=\"#对比-Alignment\" class=\"headerlink\" title=\"对比 (Alignment)\"></a>对比 (Alignment)</h2><p>要想实现有效的对比，对比就必须强烈，千万不要畏畏缩缩。</p>\n<p><strong>如果两个项不完全相同，就应当使之不同，而且应当是截然不同。</strong></p>\n<p>对比的根本目的一是增强页面的效果，另一个有助于信息的组织。不要犹豫，如果你想形成对比，就加大力度。不要将一种粗线与一种更粗的线进行对比。不要讲棕色文本与黑色标题建立对比。要避免使用两种或多种类似的字体。如果各个项不完全一样，<strong>干脆让它截然相反！</strong></p>\n<h2 id=\"复习\"><a href=\"#复习\" class=\"headerlink\" title=\"复习\"></a>复习</h2><p>有关设计（同时也是有关生活）的一个更一般的指导原则是<strong>不要畏畏缩缩</strong>。</p>\n<ul>\n<li>不要害怕在设计（或生活）留有空白，这能让你的眼睛（以及心灵）稍作休息。</li>\n<li>不要害怕设计是不对称的，使用非居中的格式，不居中往往能使效果更强烈。尽管不建议使用居中，不过有意这么做也无不可。</li>\n<li>不要害怕把单词设置得非常大或者非常小，不用担心说话声太大或者太小，在合适的场合这些都是可以的。</li>\n<li>只要最后的结果能支持或者强调你的设计或观点，不要害怕让图片太大或者太小。</li>\n</ul>\n<p><strong>提高视觉敏感度</strong></p>\n<h2 id=\"颜色运用\"><a href=\"#颜色运用\" class=\"headerlink\" title=\"颜色运用\"></a>颜色运用</h2><h2 id=\"更多提示和技巧\"><a href=\"#更多提示和技巧\" class=\"headerlink\" title=\"更多提示和技巧\"></a>更多提示和技巧</h2><h1 id=\"第二部分-字体设计\"><a href=\"#第二部分-字体设计\" class=\"headerlink\" title=\"第二部分 字体设计\"></a>第二部分 字体设计</h1><h2 id=\"字体\"><a href=\"#字体\" class=\"headerlink\" title=\"字体\"></a>字体</h2><h2 id=\"字体类别\"><a href=\"#字体类别\" class=\"headerlink\" title=\"字体类别\"></a>字体类别</h2><h2 id=\"字体对比\"><a href=\"#字体对比\" class=\"headerlink\" title=\"字体对比\"></a>字体对比</h2><h1 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h1>"},{"title":"SublimeText 3 插件备忘","url":"http://padding.me/blog/2015/08/01/SublimeText 3 插件备忘/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-HTML-CSS\" target=\"_blank\" rel=\"external\">Learning-HTML-CSS</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-HTML-CSS/issues/39\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-HTML-CSS/issues/39</a></p>\n<p>记录下 我的 Sublime Text 3 使用的插件以及安装，以备后用。</p>\n<p>我安装的 Sublime Text 版本是 <a href=\"http://www.sublimetext.com/3\" target=\"_blank\" rel=\"external\">Sublime Text Build 3083 x64</a>,插件的安装与版本无关，<br>请自行选择自己使用的版本。</p>\n<ol>\n<li><p>安装 Package Control</p>\n<p><a href=\"https://packagecontrol.io/installation\" target=\"_blank\" rel=\"external\">https://packagecontrol.io/installation</a></p>\n<p>安装好 sublime 之后打开 按 <code>ctrl</code>+<code>点</code> 调出 Sublime Text 控制台(或者<code>View &gt;Show Console</code>)。 将以下代码粘贴到控制台里，然后敲击回车：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> urllib.request,os,hashlib; h = <span class=\"string\">'eb2297e1a458f27d836c04bb0cbaf282'</span> + <span class=\"string\">'d0e7a3098092775ccb37ca9d6b2e4b7d'</span>; pf = <span class=\"string\">'Package Control.sublime-package'</span>; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( <span class=\"string\">'http://packagecontrol.io/'</span> + pf.replace(<span class=\"string\">' '</span>, <span class=\"string\">'%20'</span>)).read(); dh = hashlib.sha256(by).hexdigest(); print(<span class=\"string\">'Error validating download (got %s instead of %s), please try manual install'</span> % (dh, h)) <span class=\"keyword\">if</span> dh != h <span class=\"keyword\">else</span> open(os.path.join( ipp, pf), <span class=\"string\">'wb'</span> ).write(by)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装各种插件</p>\n<p>按 <code>ctrl</code> + <code>shift</code> + <code>p</code> 出现的文本框中输入 <code>Install Package</code>(或直接输入<code>ip</code>) 选中 Install Package 并回车</p>\n<ol>\n<li><p>Emmet</p>\n<p>输入 <code>emmet</code> 安装。 <a href=\"https://github.com/paddingme/Learning-HTML-CSS/issues/17\" target=\"_blank\" rel=\"external\">Emmet 语法速查表</a>。</p>\n</li>\n<li><p>emmet-plus</p>\n<p><a href=\"https://github.com/yisibl/emmet-plus\" target=\"_blank\" rel=\"external\">emmet-plus</a></p>\n</li>\n<li><p>JsFormat</p>\n<p>即可在JS文件中通过鼠标右键-&gt;JsFormat或键盘快捷键Ctrl+Alt+F对JS进行格式化</p>\n</li>\n<li><p>SideBarEnhancements</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  [</span><br><span class=\"line\">    &#123; <span class=\"string\">\"keys\"</span>: [<span class=\"string\">\"ctrl+shift+c\"</span>], <span class=\"string\">\"command\"</span>: <span class=\"string\">\"copy_path\"</span> &#125;,</span><br><span class=\"line\">    <span class=\"comment\">//firefox</span></span><br><span class=\"line\">    &#123; <span class=\"string\">\"keys\"</span>: [<span class=\"string\">\"f3\"</span>], <span class=\"string\">\"command\"</span>: <span class=\"string\">\"side_bar_files_open_with\"</span>,</span><br><span class=\"line\">             <span class=\"string\">\"args\"</span>: &#123;</span><br><span class=\"line\">                <span class=\"string\">\"paths\"</span>: [],</span><br><span class=\"line\">                <span class=\"string\">\"application\"</span>: <span class=\"string\">\"D:\\\\x64\\\\firefox.exe\"</span>,</span><br><span class=\"line\">                <span class=\"string\">\"extensions\"</span>:<span class=\"string\">\".*\"</span> <span class=\"comment\">//匹配任何文件类型</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">//chrome</span></span><br><span class=\"line\">    &#123; <span class=\"string\">\"keys\"</span>: [<span class=\"string\">\"f1\"</span>], <span class=\"string\">\"command\"</span>: <span class=\"string\">\"side_bar_files_open_with\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"args\"</span>: &#123;</span><br><span class=\"line\">                <span class=\"string\">\"paths\"</span>: [],</span><br><span class=\"line\">                <span class=\"string\">\"application\"</span>: <span class=\"string\">\"C:\\\\Program Files (x86)\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe\"</span>,</span><br><span class=\"line\">                <span class=\"string\">\"extensions\"</span>:<span class=\"string\">\".*\"</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">     &#125;,</span><br><span class=\"line\">    <span class=\"comment\">//ie</span></span><br><span class=\"line\">    &#123; <span class=\"string\">\"keys\"</span>: [<span class=\"string\">\"f3\"</span>], <span class=\"string\">\"command\"</span>: <span class=\"string\">\"side_bar_files_open_with\"</span>,</span><br><span class=\"line\">             <span class=\"string\">\"args\"</span>: &#123;</span><br><span class=\"line\">                <span class=\"string\">\"paths\"</span>: [],</span><br><span class=\"line\">                <span class=\"string\">\"application\"</span>: <span class=\"string\">\"C:\\\\Program Files\\\\Internet Explorer\\\\iexplore.exe\"</span>,</span><br><span class=\"line\">                <span class=\"string\">\"extensions\"</span>:<span class=\"string\">\".*\"</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>CssComb 是为CSS属性进行排序和格式化插件</p>\n<p>使用Package Control安装CssComb插件后，你可能发现它并不能运行,<br>使用方法：菜单Tools-&gt;Run CSScomb或在CSS文件中按快捷键Ctrl+Alt+C (已经修改)</p>\n</li>\n<li><p>Autoprefixer 插件</p>\n<p>这是一款CSS3私有前缀自动补全插件，该插件使用CanIUse资料库，能精准判断哪些属性需要什么前缀。<br>与CssComb插件一样，该插件也需要系统已安装Node.js环境。<br>使用方法：在输入CSS3属性后（冒号前）按Tab键。</p>\n</li>\n<li><p>TrailingSpaces插件</p>\n<p>有时候，在代码结尾打多了几个空格或 Tab，并没有任何显示效果，TrailingSpaces 这款插件能高亮显示多余的空格和 Tab。</p>\n</li>\n<li><p>SublimeCodeIntel插件</p>\n<p>主要是用来自动完成 JavaScript 代码。</p>\n<p>Jump to definition = Alt+Click<br>Jump to definition = Control+Windows+Alt+Up<br>Go back = Control+Windows+Alt+Left<br>Manual Code Intelligence = Control+Shift+space</p>\n</li>\n</ol>\n</li>\n</ol>\n<ol>\n<li><p>中文版本不跟随 ：IMESupport</p>\n</li>\n<li><p>一些设置</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 设置Sans-serif（无衬线）等宽字体，以便阅读</span></span><br><span class=\"line\"><span class=\"string\">\"font_face\"</span>: <span class=\"string\">\"YaHei Consolas Hybrid\"</span>,</span><br><span class=\"line\"><span class=\"string\">\"font_size\"</span>: <span class=\"number\">12</span>,</span><br><span class=\"line\"><span class=\"comment\">// 使光标闪动更加柔和</span></span><br><span class=\"line\"><span class=\"string\">\"caret_style\"</span>: <span class=\"string\">\"phase\"</span>,</span><br><span class=\"line\"><span class=\"comment\">// 高亮当前行</span></span><br><span class=\"line\"><span class=\"string\">\"highlight_line\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\"><span class=\"comment\">// 高亮有修改的标签</span></span><br><span class=\"line\"><span class=\"string\">\"highlight_modified_tabs\"</span>: <span class=\"literal\">true</span>,</span><br></pre></td></tr></table></figure>\n<p>主题：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"theme\"</span>: <span class=\"string\">\"Nexus.sublime-theme\"</span>,</span><br><span class=\"line\"><span class=\"string\">\"color_scheme\"</span>: <span class=\"string\">\"Packages/Theme - Flatland/Flatland Dark.tmTheme\"</span>,</span><br></pre></td></tr></table></figure>\n<p>编码风格设置：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 设置tab的大小为2</span></span><br><span class=\"line\"><span class=\"string\">\"tab_size\"</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\"><span class=\"comment\">// 使用空格代替tab</span></span><br><span class=\"line\"><span class=\"string\">\"translate_tabs_to_spaces\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\"><span class=\"comment\">// 添加行宽标尺</span></span><br><span class=\"line\"><span class=\"string\">\"rulers\"</span>: [<span class=\"number\">80</span>, <span class=\"number\">100</span>],</span><br><span class=\"line\"><span class=\"comment\">// 显示空白字符</span></span><br><span class=\"line\"><span class=\"string\">\"draw_white_space\"</span>: <span class=\"string\">\"all\"</span>,</span><br><span class=\"line\"><span class=\"comment\">// 保存时自动去除行末空白</span></span><br><span class=\"line\"><span class=\"string\">\"trim_trailing_white_space_on_save\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\"><span class=\"comment\">// 保存时自动增加文件末尾换行</span></span><br><span class=\"line\"><span class=\"string\">\"ensure_newline_at_eof_on_save\"</span>: <span class=\"literal\">true</span>,</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>BracketHighlighter</code>高亮显示配对括号以及当前光标所在区域</p>\n</li>\n<li><p>Alignment 等号对齐</p>\n<p>按Ctrl+Alt+A，可以将凌乱的代码以等号为准左右对其，适合有代码洁癖的朋友。C</p>\n</li>\n<li><p>better completion 主要自动完成jquery 代码的</p>\n<p><a href=\"https://github.com/Pleasurazy/Sublime-Better-Completion\" target=\"_blank\" rel=\"external\">https://github.com/Pleasurazy/Sublime-Better-Completion</a></p>\n</li>\n</ol>\n<ol>\n<li><p><a href=\"https://github.com/angular-ui/AngularJS-sublime-package\" target=\"_blank\" rel=\"external\">https://github.com/angular-ui/AngularJS-sublime-package</a></p>\n</li>\n<li><p><a href=\"https://github.com/jonschlinkert/sublime-markdown-extended#markdown-enhancements\" target=\"_blank\" rel=\"external\">https://github.com/jonschlinkert/sublime-markdown-extended#markdown-enhancements</a></p>\n</li>\n<li><p><a href=\"https://github.com/SublimeText-Markdown/MarkdownEditing\" target=\"_blank\" rel=\"external\">https://github.com/SublimeText-Markdown/MarkdownEditing</a></p>\n</li>\n<li><p><a href=\"https://github.com/victorporof/Sublime-HTMLPrettify\" target=\"_blank\" rel=\"external\">HTML+CSS+JAVASCRIPT+JSON快速格式化</a><br>   <code>ctrl+shift+h</code></p>\n</li>\n</ol>\n<p>参考：</p>\n<ul>\n<li><a href=\"http://www.cnblogs.com/hykun/p/sublimeText3.html\" target=\"_blank\" rel=\"external\">Sublime Text 3前端开发常用优秀插件介绍</a></li>\n<li><a href=\"zh.lucida.me/blog/sublime-text-complete-guide/\">Sublime Text 全程指南</a></li>\n</ul>\n<p>所有安装插件和设置见：</p>\n<p>百度云： <a href=\"http://pan.baidu.com/s/1eQ8QpJc\" target=\"_blank\" rel=\"external\">http://pan.baidu.com/s/1eQ8QpJc</a></p>\n"},{"title":"语义化 HTML 笔记","url":"http://padding.me/blog/2015/07/27/semantic-html-note/","content":"<p>本篇为主要学习 <a href=\"https://github.com/Justineo\" target=\"_blank\" rel=\"external\">Justineo</a> 的 slideshow: <a href=\"http://justineo.github.io/slideshows/semantic-html/\" target=\"_blank\" rel=\"external\">Semantic HTML</a><br>所做的学习笔记。<br><!-- http://padding.me/slide/slicer/#/ --></p>\n<ol>\n<li><code>&lt;abbr&gt;</code> </li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">abbr</span> <span class=\"attr\">title</span>=<span class=\"string\">\"World Wide Web\"</span>&gt;</span>WWW<span class=\"tag\">&lt;/<span class=\"name\">abbr</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">abbr</span><span class=\"selector-attr\">[title]</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">borde-bottom</span>: <span class=\"number\">1px</span> dotted <span class=\"built_in\">rgba</span>(255,255,255,0.3);</span><br><span class=\"line\">    <span class=\"attribute\">cursor</span>: help;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol>\n<li><code>q</code></li>\n</ol>\n<p>3.</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">blockquote</span> <span class=\"attr\">cite</span>=<span class=\"string\">“http://www.w3.org/TR/html4/intro/intro.html#h-2.2”</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en-US\"</span>&gt;</span></span><br><span class=\"line\">To publish information for global distribution, one needs</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mark</span>&gt;</span>a universally understood language<span class=\"tag\">&lt;/<span class=\"name\">mark</span>&gt;</span>,</span><br><span class=\"line\">a kind of publishing mother tongue that all computers may potentially understand.</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">blockquote</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ol>\n<li>mark</li>\n</ol>\n<ol>\n<li><code>figcaption</code></li>\n</ol>\n<ol>\n<li><p><code>id</code> 属性标识符（用于引用）,不应依赖其语义处理相应元素<br><code>class</code> 属性: authors are encouraged to use values that describe the nature of the content</p>\n</li>\n<li><p><code>title</code> 属性：</p>\n<ul>\n<li>链接：描述目标信息</li>\n<li>图片： 版权/描述</li>\n<li>引用： 来源信息</li>\n<li>交互元素：操作指南</li>\n<li>….</li>\n</ul>\n</li>\n</ol>\n<ol>\n<li><code>link</code> 元素，元数据，用来描述文档本身与其他资源的关系；必须包含 <code>rel</code> 以及 <code>href</code> 属性。</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"author license\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/about\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>link + rel + author, link + rel + license 都有预定义的语义</p>\n<p>a 元素</p>\n<p>存在 href 属性时为超链接<br>缺少 href 属性时为链接占位符</p>\n<nav><br>  <ul><br>    <li><a href=\"/\">Home</a></li><br>    <li><a href=\"/news\">News</a></li><br>    <li><a>Examples</a></li><br>  </ul><br></nav>\n\n\n<!-- a + rel\n\nrel=\"prev\", rel=\"next\"\n\n链接到文档的前一篇 / 后一篇 / 前一页 / 后一页 (超链接) -->\n"},{"title":"2015年07月11日","url":"http://padding.me/blog/2015/07/11/2015年07月11日/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/fex-dream\" target=\"_blank\" rel=\"external\">fex-dream</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/fex-dream/fex-dream/issues/113\" target=\"_blank\" rel=\"external\">https://github.com/fex-dream/fex-dream/issues/113</a></p>\n<h2 id=\"上班\"><a href=\"#上班\" class=\"headerlink\" title=\"上班\"></a>上班</h2><p>正式上班一周，在离开的一个多月里，公司走了很多人，迎来很多不熟悉的新面孔。</p>\n<p>7月1日回公司，大家的热情让我有点不知所措。</p>\n<p>总有同事问我，你回来了，怎么总沉默，话少了，不怎么开心的样子。</p>\n<p>很多问题我都回答不上——不苟言笑，默默无闻，或没心没肺。</p>\n<p>我也不知道，机会对我来说特别重要。 </p>\n<p>我想狠狠抓住，对得起大家的信任和公司给我的薪资。</p>\n<p>once again, 感觉自己像个逃兵。</p>\n<p>不过我知道我能做好，虽然要学的东西好多好多，要做的事情也接二连三，不过我都有信心。</p>\n<p>在渐渐平静的生活中，蜗牛一般前行，还好，我知道，我今天比昨天好了一点点。</p>\n<h2 id=\"毕业\"><a href=\"#毕业\" class=\"headerlink\" title=\"毕业\"></a>毕业</h2><p>我是个仪式感特别强的人。</p>\n<p>没能参加毕业典礼，恐怕要遗憾终生了。</p>\n<p>我也不知道，自己为什么傻逼了。觉得大学教育傻逼，学院傻逼，写论文傻逼，抄论文更傻逼。</p>\n<p>有意思吗，这样？</p>\n<p>不知道。</p>\n<p>昨天朋友圈、QQ 空间被毕业典礼刷屏，</p>\n<p>小王博士早上发微博说，早上，大家都走了。</p>\n<p>该走的总会走。</p>\n<p>你总是一个人，你应该是一个人。</p>\n<p>我有点孤冷了。</p>\n<p>相反，其实我很好——家庭幸福，婚姻美满，事业顺利，工作开心。</p>\n<p>我的好朋友们分手了，丢掉工作了，毕业了，又一个人了。</p>\n<p>我像看破了红尘一般，我知道，我理解，我感动身受。</p>\n<p>我们都得学会成长，直面变数。</p>\n<p>我也不知道。</p>\n<p>我现在的状态是平实，情绪稳定，乐天知命。</p>\n<p>我要抓住在面前的每一根稻草，不撒手。</p>\n<p>我爱这个世界，也爱我的好朋友们。</p>\n<p>希望你们都好。</p>\n<p>怎样的生活都是生活，望你有勇气、不畏惧。</p>\n<p>——我什么都没忘记，我知道我要去哪里。</p>\n"},{"title":"2015年05月01日","url":"http://padding.me/blog/2015/05/01/2015年05月01日/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/fex-dream\" target=\"_blank\" rel=\"external\">fex-dream</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/fex-dream/fex-dream/issues/112\" target=\"_blank\" rel=\"external\">https://github.com/fex-dream/fex-dream/issues/112</a></p>\n<p>春节过后，状态一直萎靡，生病、面试、论文答辩，糟心的事一件接着一件。</p>\n<p>公司人员变动也很大，另一个前端也走了，只剩下我一个。开始硬着头皮做一些事。</p>\n<p>记录下最近的一些想法吧。</p>\n<hr>\n<p>曾经一个 Leader 告诉过我，<strong>技术只是时间问题</strong>。</p>\n<p>学习前端差不多一年了，一年前的迷茫不知所措，在技术会议上听着从未听过的名词，现在也都开始接触。</p>\n<p>最近老大让我面试，面了三个人。没有一个人能说对 position 有几种定位，有的是甚至是两三年的工作经验，当然简历可能有作假的成分。还有才毕业的同学，我在他身上仿佛看见了去年的自己，满腔热血，满眼满心都是渴望和热情，可是连盒子模型都不没听过。正如曾经谁说得一样，热情只决定你从事一个职业能走多久走多深，而在你什么都不会的基础上不会给你任何加分。</p>\n<p>李笑来说：『这个时代，学习的成本几近于零，于是“意愿”竟然成了最昂贵的东西。』</p>\n<p>和同学聊这些的时候，我说。一个工作两三年的前端，不能再是像才学习前端时遇到bug，首先想到的是搜索引擎，搜索不到只能各种各种尝试，而是应该从原理层面一针见血的查到bug产生原因所在，从而解决。虽然说这些有点打脸，但这也是对自己的一个要求吧。</p>\n<p>另一个感受，熟练度的问题。因为招不到前端，开始给同事们做些基础的培训分享。再回过头来看，没有那么难，很多事情只是熟练度的问题，做多了自然而然就会了，就会有新的思考、总结，对自己的学习能力也会自信很多。还有就是所有的事情都是从小做起，不断的重复，做好每一个部分，组成一个系统。由点及面，所以，别着急，慢慢来。</p>\n<p>准备 PPT 的时候，又会发现自己还是水得很，因为很多知识点我还是停留在使用的阶段，你要多问我几个为什么，我就不能自圆其说了。CSS 是简单，如果要做一个专业的重构，像张鑫旭，doyboe 一样的，还是需要投入非常非常多的精力和时间的。所以不要再在简历里写精通 HTML ，精通 CSS，精通 ……</p>\n<p>还是很喜欢《寿司之神里》二郎说的：</p>\n<blockquote>\n<p> 一旦你决定好职业，你必须全心投入工作之中，你必须爱自己的工作，千万不要有怨言，你必须穷尽一生磨练技能，这就是成功的秘诀，也是你让人敬重的关键。</p>\n</blockquote>\n<p>lily 姐 曾告诉过我当你工作一年之后，你会遇到瓶颈，觉得自己什么都会。有些时候会产生这样的错觉。而现在，又是一种感觉，原来我还是什么的不会。</p>\n<p>这种感觉很有意思。从不会到会再到不会。可是我不会再像去年一样迷茫，无头苍蝇一样乱撞了。我已经不是一个新人了，我知道该怎么学习了，而且开始有信心能学好所需要的技能，甚至努力去胜任自己的工作。</p>\n<p>这个世界太残酷了，每个人都在争夺资源，leader 们争夺优秀的员工，争夺最好的项目。整个世界像是一个温和的战场，而杀机四伏。不过，我喜欢成王败寇。</p>\n<blockquote>\n<p> 我狂妄，我自负，我信奉见城彻先生的那句话：偏执、冒险、狂妄的人终是英雄。我不是英雄，但我会努力成为英雄。</p>\n</blockquote>\n<p>事情发生了一些微妙的变化，我能感觉得到。</p>\n<p>当我一无所有的时候，我渴望得到面包，得到牛奶。</p>\n<p>当你把眼前的事儿做好，机会就会来敲门，请你一定要努力去抓住他。</p>\n<p>当你足够优秀时，有人会给你送面包，有人会给你送牛奶。</p>\n<p>你会觉得一切失去与经历，都是理所当然，都是值得。</p>\n<p>我想，每个人都是愿意帮助别人的。</p>\n<p>你需要别人帮助时，首先要让别人觉得你值得帮助。</p>\n<p>不要被眼前的困境吓到，把事情做好，一点点积累，你会被看到，你会被尊重，你会得到你应得的。</p>\n<p>前路漫漫，愿与君同行。</p>\n<p>嗯，这又是一篇鸡汤文。</p>\n"},{"title":"CSS通配符","url":"http://padding.me/blog/2015/04/17/CSS通配符/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-HTML-CSS\" target=\"_blank\" rel=\"external\">Learning-HTML-CSS</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-HTML-CSS/issues/37\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-HTML-CSS/issues/37</a></p>\n<ul>\n<li>会影响 css 属性继承。</li>\n</ul>\n<p>例如 </p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>xx<span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>oo<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">14px</span>;</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">p</span> &#123; <span class=\"attribute\">font-size</span>: <span class=\"number\">16px</span>&#125;</span><br><span class=\"line\">`</span><br></pre></td></tr></table></figure>\n<p>span 不会继承 16，而会默认接受 通配符字体大小。</p>\n<p>可以使用：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>:inhreit;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>修改</p>\n<p>使用 通配符对 网页渲染曾在性能问题，因为需要不断继承，改写通配符的样式。</p>\n<p>另如上所述不便于维护，debug。</p>\n<p>所以 CSS 文件中写通配符的没小 JJ。</p>\n"},{"title":"JavaScript 中 call、apply、bind、caller、callee 详解","url":"http://padding.me/blog/2015/03/15/call-apply-bind-caller-callee-in-javascript/","content":"<h2 id=\"call-方法-和-apply-方法\"><a href=\"#call-方法-和-apply-方法\" class=\"headerlink\" title=\"call() 方法 和 apply() 方法\"></a>call() 方法 和 apply() 方法</h2><p>我们可以将 call() 和 apply() 看作是某个对象的方法，通过调用方法的形式来间接调用函数。<br>call() 和 apply() 的第一个实参是要调用函数的母对象，它是调用上下文，在函数体内通过 this 来获得对它的引用。在 ECMAScript 5 严格模式中， call() 和 apply() 的第一个实参都会变为 this 的值，哪怕<br>传入的实参是原始值甚至是 null 或 undefined 。在 ECMAScript 3 和非严格模式中，传入的 null 和 underfined 都会被全局对象代替。而其他原始值则会被相应的包装对象（wrapper object）所代替。</p>\n<p>对于 call() 来说，第一个调用上下文实参之后的所有实参就是要传入待调用函数的值。<br>apply() 的实参都放入一个数组中。注意，传入 apply() 的参数数组可以是类数组对象也可以是真实数组。实际上，可以将当前函数的 arguments 数组直接传入（另一个函数的）apply() 来调用另一个函数。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">trace</span>(<span class=\"params\">o,m</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> original = o[m];</span><br><span class=\"line\">    o[m] = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(),<span class=\"string\">\"Entering:\"</span>,m);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> result = original.apply(<span class=\"keyword\">this</span>,<span class=\"built_in\">arguments</span>);</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(),<span class=\"string\">\"Exitng:\"</span>,m);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"bind-方法\"><a href=\"#bind-方法\" class=\"headerlink\" title=\"bind() 方法\"></a>bind() 方法</h2><p>bind() 为 ECMAScript 5 新增方法。此方法主要作用为将函数绑定至某个对象。当在函数 f() 上调用 bind() 方法并传入一个对象 o 作为参数，此方法将返回一个新的函数。（以函数调用的方式）调用新的函数将会把原始的函数 f() 当作 o 的方法来调用。传入新函数的任何实参都将传入原始函数。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f</span>(<span class=\"params\">y</span>) </span>&#123; <span class=\"keyword\">return</span>  <span class=\"keyword\">this</span>.x+y;&#125; <span class=\"comment\">//这个是待绑定的函数</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> o = &#123; x：<span class=\"number\">1</span>&#125;; <span class=\"comment\">//将要绑定的对象</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> g = f.bind(o); <span class=\"comment\">//通过调用 g(x) 来调用 o.f(x)</span></span><br><span class=\"line\">g(<span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 返回一个函数，通过调用它来调用 o 中的方法 f(),传递它所有的实参</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bind</span>(<span class=\"params\">f,o</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(b.bind) <span class=\"keyword\">return</span> f.bind(o); <span class=\"comment\">// 如果 bind() 方法参在</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> f.apply(o,<span class=\"built_in\">arguments</span>);</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>ECMAScript 5 的 bind() 不仅仅是将函数绑定一个对象，而且除了第一个实参之外，传入 bind() 的实参也会绑定至 this，即 柯里化（currying）。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> sum = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">x,y</span>) </span>&#123;<span class=\"keyword\">return</span> x+y;&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> succ = sum.bind(<span class=\"literal\">null</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">succ(<span class=\"number\">2</span>);<span class=\"comment\">//3</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f</span>(<span class=\"params\">y,z</span>) </span>&#123;<span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.x+y+z&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> g = f.bind(&#123;x:<span class=\"number\">1</span>&#125;,<span class=\"number\">2</span>);</span><br><span class=\"line\">g(<span class=\"number\">3</span>);<span class=\"comment\">//6</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// ECMAScirpt 3 模拟 bind()</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(!<span class=\"built_in\">Function</span>.prototype.bind) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">Function</span>.prototype.bind = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">o <span class=\"comment\">/*,args*/</span></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> self= <span class=\"keyword\">this</span>, boundArgs = <span class=\"built_in\">arguments</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> args = [], i;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>;i&lt;boundArgs.length;i++) args.push(boundArgs[i]);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;<span class=\"built_in\">arguments</span>.length;i++) args.push(<span class=\"built_in\">arguments</span>[i]);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> self.apply(o,args);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>ECMAScirpt 5 中的 bind() 方法有一些特性是上述无法模拟的。</p>\n<ul>\n<li>真正的 bind() 方法返回一个函数对象，这个函数对象的 length 属性是绑定函数的形参个数减去实参的个数。</li>\n<li><p>bind() 可顺带用作构造函数。将忽略传入 bind() 中的 this，原始函数就会以构造函数的形式调用，其实参也将绑定。<strong>在运行时将 bind() 所返回的函数用作构造函数时，所传入实参会原封不动的传入原始函数。</strong></p>\n<p>由于 bind() 方法所返回的函数并不包含 prototype 属性（普通函数的 prototype 属性是不能被删除的），并且将这些绑定的函数用作构造函数时所创建的对象从原始的未绑定的构造函数中继承 prototype。</p>\n</li>\n</ul>\n"},{"title":"0302-0308","url":"http://padding.me/blog/2015/03/07/0302-0308/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/fex-dream\" target=\"_blank\" rel=\"external\">fex-dream</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/fex-dream/fex-dream/issues/106\" target=\"_blank\" rel=\"external\">https://github.com/fex-dream/fex-dream/issues/106</a></p>\n<p>第二周，衰神依旧附体，冥顽不灵还是我。</p>\n<p>继第一周各种混乱、犯错、无厘头后，第二周症状有增无减。</p>\n<p>继续感冒，吃错药，鼻炎，病来如山倒。</p>\n<p>收不到全世界的邮件和回复。</p>\n<p>还好，这会儿我都收到了，:smile:</p>\n<blockquote>\n<p>机会是挺好，我也不能说我无能为力，没心没肺，混吃等死。</p>\n</blockquote>\n<hr>\n<p>差不多有一个月没有正经做点什么，看点什么了。</p>\n<p>心不静，有所累。</p>\n<p>因为聒噪、浮夸，因为交浅言深。</p>\n<p>原来一直不是想象的样子。</p>\n<p>心有所执，也没什么不对。</p>\n<p>可能用一大堆道理去诳骗，让每个人恶心憎恶。</p>\n<p>每个人都企图对别人说教，按照自己的方式来。</p>\n<p>『我觉得』、『我认为』、『我想』。</p>\n<p>完全主观的臆断，完全站不住脚的悖论，完全没有理由的强词夺理。</p>\n<p>是什么让我们理直气壮？</p>\n<p>这毫无幽默感可言，更谈不上有趣。</p>\n<hr>\n<p>开始接触移动端，一个人，一个月，一个 Webapp。</p>\n<p>得到了一个绝佳的好机会，但是我感觉我抓不住。我有点怂。</p>\n<p>近期 get 了些新技能。</p>\n<p>好多东西其实也没那么难，你跋山涉水，咬咬牙，苦思冥想，总有解决的办法。可能不是最好的解决方法，但首先应该是解决它。</p>\n<p>做事，看书，沉默，思考。比什么都重要。</p>\n<p><strong>了无牵挂，便无牵无挂。</strong></p>\n<hr>\n<blockquote>\n<p>机会是挺好，我也不能说我无能为力，没心没肺，混吃等死。</p>\n</blockquote>\n"},{"title":"前端资料推荐","url":"http://padding.me/blog/2015/01/25/前端资料推荐/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/fex-dream\" target=\"_blank\" rel=\"external\">fex-dream</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/fex-dream/fex-dream/issues/90\" target=\"_blank\" rel=\"external\">https://github.com/fex-dream/fex-dream/issues/90</a></p>\n<p>同事让推荐一些前端方面的东西，随便写了个：</p>\n<p><a href=\"https://www.zybuluo.com/paddingme/note/41682\" target=\"_blank\" rel=\"external\">https://www.zybuluo.com/paddingme/note/41682</a></p>\n"},{"title":"0119-0126","url":"http://padding.me/blog/2015/01/25/0119-0126/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/fex-dream\" target=\"_blank\" rel=\"external\">fex-dream</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/fex-dream/fex-dream/issues/91\" target=\"_blank\" rel=\"external\">https://github.com/fex-dream/fex-dream/issues/91</a></p>\n<p>这一周收获特别多，思考的东西特别多，相信这是一个特别好的转变。</p>\n<p>查看了下 doit.im，这一周除了工作我主要做了以下事：</p>\n<ul>\n<li>每天刷技术论坛(7/7)：github 较多， v2ex，html-js，sg.ff 较少。</li>\n<li>每天背单词(7/7)</li>\n<li>每天阅读技术优质技术文章（3/7）：由于忙着做年终总结，有几篇只是粗略看了下，有些还忘记记录了，不知道是我忘记记了，还是没看：<a href=\"https://github.com/paddingme/DailyReading\" target=\"_blank\" rel=\"external\">DailyReading</a> 只有一篇(TNT)</li>\n<li>发了一篇文章(1/1)：<a href=\"http://segmentfault.com/blog/paddingme/1190000002496676\" target=\"_blank\" rel=\"external\">[JavaScript 学习笔记] 2. 继承</a></li>\n<li>花了差不多三天的时间做了<a href=\"http://padding.me/slide/annual-summary/\">年终总结 PPT</a>,做了人生中第一场成功的演讲。</li>\n<li>MDN 翻译:<ul>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/CSS/white-space\" target=\"_blank\" rel=\"external\">white-space</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/CSS/word-wrap\" target=\"_blank\" rel=\"external\">word-wrap</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/CSS/word-wrap\" target=\"_blank\" rel=\"external\">word-wrap</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/CSS/list-style\" target=\"_blank\" rel=\"external\">list-style</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/CSS/display\" target=\"_blank\" rel=\"external\">display</a>: 还有部分没翻译完，明天继续。</li>\n</ul>\n</li>\n<li>打羽毛（2h）</li>\n<li><a href=\"https://github.com/paddingme/paddingme.github.io/issues/5\" target=\"_blank\" rel=\"external\">paddingme 重新设计</a>: 做了一些，还有待改进，要酷炫,，要简洁！</li>\n</ul>\n<p>这周思考了很多很多东西，做了很多很多的白日梦。整理一下。</p>\n<h2 id=\"follow-your-heart-then-make-sth-different。\"><a href=\"#follow-your-heart-then-make-sth-different。\" class=\"headerlink\" title=\"follow your heart,then make sth different。\"></a>follow your heart,then make sth different。</h2><p>如上所述，我花了差不多三天的时间再做这个<a href=\"http://padding.me/slide/annual-summary/\">年终总结 PPT</a>， 同事都是使用公司的 PPT 模板随便写个两三页记录下一年所作的项目就完了，而我连上班的时间都在改 PPT 以至于我周六还去加班把没完成的任务完成。</p>\n<p>怎么说呢，出发点就是想和别人不一样，别人不认真对待的事，你认真去做了，就会有不一样的效果。其次 BOSS 们都在，对我来说是个非常好的表现机会，可以让他们看到我。再次公司加我总共只有两个前端，我想我必须给大 BOSS 们 安利下前端和用户体验方面的东西。再再次我一直在组里属于默默无闻可被忽视的人（我是没觉得和他们没什么好说，他们比较喜欢做螺丝钉，上班只是为了挣钱），而且在组里一直做网站，虽然做得很多，加很多班，但是做网站这种事组里大部分后端同学都可以来，所以会有被轻视的感觉，属于可有可无，没有自己的不可被替代性。恩，我想让他们对我刮目想看，我可不是一个菜B。 以前我总不愿和别人说我是工大的，我说工大感觉是为了自己脸上贴金，想想我的同学，我觉得我配不上工大，所以我很少说。工大是我用了整整两年的时间曲曲折折才实现的一个梦（虽然最后没进计院进了软院也算部分实现吧）。我不想给工大丢脸、抹黑。可能同事会觉得工大的研究生有点水。所以这次是个很好的机会表现，其实我不是那么菜。希望我有一天可以理直气壮的和别人说，对我是哈工大的学生。</p>\n<blockquote>\n<p>我一向骄傲且自负，绝不允许别人来践踏我的骄傲。</p>\n</blockquote>\n<p>虽然在 PPT里 有一部分是抄袭了 lilyxue 姐以及小米繁子哥的。但是我真是太喜欢了，在做演讲前，我看了不下百遍，反复修改。然后我做了年终总结，公司两位大 BOSS 都在。 效果异常得好，大 BOSS 还在 <a href=\"“公司的一款聊天 APP”\">四叶草</a> 发了我的照片，说攻城狮很幽默。虽然我还是和以前一样，没敢和任何人有目光接触。 但是台下除了组里同事，只有两个 BOSS 不熟，再者 PPT 做得感觉秒杀公司任何同学，而且对 PPT 的内容，前端领域非常熟悉，所以慢慢的说着说着越说越顺，还偶尔适宜的插科打诨，把我平时的逗比精神也发挥了出来。后来我把 PPT 发给我想给看的每一个前辈、同学和朋友。就像和同学吹牛说的。除了在前端界，在其他界只能用四个字来说，好评如潮（：逃。</p>\n<p>完了在办公区遇到 大 BOSS 再次被夸。下班前组里开会，老大也突然提起我以前提议的给公司网站制定标准和流程。</p>\n<p>艾玛，我真是太喜欢这感觉了，我太需要被别人肯定了，被支持做一些我想做的事了。</p>\n<p>想想我内心其实也是一个自卑懦弱的人啊。</p>\n<p>我把 PPT 发给 lily 姐，我说主要 lily 姐原来的 PPT 部分做的好，我直接抄袭的。 lily 姐说这不重要，重要的是我有思考。lily 姐 还问 ppt 里的 gif 图从哪儿来的。我说这些 gif，图片，段子都是我平时觉得特别有意思收集在手机里。 lily 姐说这是个非常好的习惯。</p>\n<p>我曾经看过很多文章说，对一个男人来说自信是最重要的。 而我一直没有什么自信。就像和 h 说的我也急需要做成一件事来证明自己，树立自信。现在我好像有了一点点自信。</p>\n<p>在年终演讲之前 h 夜里给我说她顺利拿到 offer，真是皆大欢喜，总算都有点起色。</p>\n<p>写上述不是为了吹嘘，而是想说我想我现在比以前更好了。</p>\n<p>非常赞同一句话，你在失败里永远学不到东西，能让你成长的只有成功。</p>\n<h4 id=\"记录的习惯\"><a href=\"#记录的习惯\" class=\"headerlink\" title=\"记录的习惯\"></a>记录的习惯</h4><p>好多东西别人不说我真不知道，我只是凭着自己的直觉和兴趣在做一些事。例如说收集素材，喜欢记录，我只是觉得有意思，以后翻出来会非常有意思。很多人和我说看以前写的东西会觉得非常傻，索性不写不记了。我的想法却不一样我也会觉得以前的自己非常傻，但是我看到更多的是自我成长，然后是幸运自己有所改变或者没有忘记初心。</p>\n<h4 id=\"学习演讲\"><a href=\"#学习演讲\" class=\"headerlink\" title=\"学习演讲\"></a>学习演讲</h4><p>2014年我参加了特别多的前端分享（D2（从北京特地去了杭州，很多人大概以为我疯了）, IWeb，W3CTECH 小米，CSSCONF）甚至我还去了 RubyChina（gitcafe 给的一张价值300元的票，听了一上午，蹭了一顿海鲜自助，哈哈哈），有时候也会想这些大牛们说的很多东西我都没有接触，听不太懂，我为什么还要去，不是浪费时间，不是很虚无吗，我应该把这些时间拿来看书打好基础。</p>\n<p>但是现在看来我有三个特别大的收获：</p>\n<ol>\n<li>认识了非常多的大牛和牛逼的小伙伴，尤其是 lily 姐，人超 nice， 第一次在 iweb, 我鼓起勇气上去搭讪，lily 姐便和我说了很多很多职场、职业选择的东西，让我受益匪浅，这次做 PPT 想到lily 姐 在 CSSCONF 上的分享时，便特不好意思的去找 lil y姐，lily 姐第二天立马就发给我了。</li>\n<li>看了这么多的分享，给我留下印象深刻的总是那些 PPT 做得酷炫，演讲风趣幽默，而且还有很多干货的分享。 我开始知道什么是好的分享，观众想听什么，自己有了这个意识，所以这次的演讲效果也不错。当然听多了太多老罗相声了，罗老师对此亦有贡献。<br> 以前在学校时，听 leeon、marchtea 演讲觉得他们脑袋上有光，每次课程做 PPT 演讲都是我特别受刺激的时候，我也想做到这样，但是我不行，很多东西我不太懂就没有勇气去做，更没有想把它做好的想法。现在我想我离他们又近了一点了。</li>\n<li>也许是自命不凡把，在家、在本科、在现在的公司，我都会有强烈的感觉——我不属于这里，我想和更多牛逼的人在一起，即使我是那堆牛逼的人最烂的一个，我也愿意。某种程度上，我也渐渐和更多的陌生人交流，沟通能力也越来越好，以前总是写得比说的好，在熟悉的人面前吹牛能吹得自己是谁都忘记了，可是一遇到陌生人就歇菜。和大牛们交流多了，沟通能力有提高，参加分享多了，见识也多很多，视野也拓展了很多。</li>\n</ol>\n<h3 id=\"搜索能力\"><a href=\"#搜索能力\" class=\"headerlink\" title=\"搜索能力\"></a>搜索能力</h3><p>这个能力我知道自己一直有，我想找到的东西总是能通过各种手段去找到。</p>\n<p>例如分享一个找图片的技巧：</p>\n<p>用 google 搜索 关键词 浏览图片，没有的话国内去搜花瓣国外搜 dribbble。 上面都有非常多非常好的图片。</p>\n<p>有水印怎么办，不清晰怎么办？</p>\n<p>PS 修图什么的我不会，通常我都是通过google 以图搜图 找到更符合尺寸、清晰度、没有水印的图片的。</p>\n<p>还有很多技巧，有时候如果你找不到一个教程还可以去 taobao 上搜关键词，例如说 什么 xx 刷价教程，万能的淘宝，都是良心教程。</p>\n<p>等等，一时半会想不起来。</p>\n<h3 id=\"环境的作用\"><a href=\"#环境的作用\" class=\"headerlink\" title=\"环境的作用\"></a>环境的作用</h3><p>环境对一个人的成长起非常大的作用。<br>很多人到现在骨子里还有小农思想，和他们的成长环境息息相关。<br>虽然你可能改变不了环境，但是好在在互联网时代，你可以连接到世界的任何角落，和任何人交流。 我常常觉得这真是一个特别好的时代，机会多如牛毛，只要你肯努力，坚持，总有一天你可以被机会敲门，然后请牢牢抓住别放手。</p>\n<p>就像有人说过你微博上关注的世界就是你的世界。</p>\n<p>觉得太有道理了！</p>\n<p>除了前端我看得比较多的是老罗、许岑的微博。而在他们身上我学到特别多特别优秀的品质，认真、努力、乐观、幽默。这些对我都特别受益。</p>\n<h3 id=\"自我教育\"><a href=\"#自我教育\" class=\"headerlink\" title=\"自我教育\"></a>自我教育</h3><p>我相信人性本恶，每个人都在自我救赎。没有人可以帮你。<br>你需要看很多的书，见更多的人，去更多的地方，看看别人是怎么活的，怎么想的。你才会有更多对自己反思。</p>\n<h3 id=\"翻译\"><a href=\"#翻译\" class=\"headerlink\" title=\"翻译\"></a>翻译</h3><p>发现翻译很有意思，要坚持下去，坚持把每次遇到的 css, js 属性都上 mdn 上 如果没有的自己就给翻译了，如果有的话可以review 下别人的翻译，还能学到特别到的翻译技巧。</p>\n<h3 id=\"自信的力量\"><a href=\"#自信的力量\" class=\"headerlink\" title=\"自信的力量\"></a>自信的力量</h3><p>自从做了年终总结分享之后，发现组里同事看我有不一样的感觉。</p>\n<p>然后自己的想法就是做了很多白日梦，觉得自己什么都想做，都可以尝试。还会去想春节后一切顺利的话去做两个月的产品，一定非常有意思，可以学到很多东西。真是脑洞大开了我。</p>\n<p>然后更有意义的变化是，年终总结之后做事情越来越顺。有更多更多的思考。</p>\n<p>例如说今天去打羽毛球，打得特别 high，感觉到技术增长非常多。而且群主突然陪我打长短球，教我练习步伐，真是太棒了。相信再坚持一段时间，我会有更大进步，到时候就可以和中等水平的球友一起打了。哈哈哈，开心。（其实我打羽毛球不是为了锻炼身体，我是觉得打羽毛球有意思，好玩。）</p>\n<p>再例如说不知道是不是因为我的提议，公司突然也开始搞技术分享。然后老大让我给组里同事做分享，主题、时间都随我。哈哈哈！ Awesome!</p>\n<p>期待我 2 月 4 日给同事分享的《The ABC of Front-end Web Development》</p>\n<p>千万别掉链子（我总掉链子的赶脚），这是次非常好的机会，可以让自己梳理知识，锻炼演讲能力。</p>\n<h3 id=\"隐忍\"><a href=\"#隐忍\" class=\"headerlink\" title=\"隐忍\"></a>隐忍</h3><p>如果生活没有波澜，如果你总是独来独往，一个人熬夜，孤独陪伴。<br>没关系，请继续坚持，坚持你认为对的事和想法。<br>即使到头来撞了南墙，但至少自己努力坚持过，才会有以后更成熟更理性更强大的自己。</p>\n<h3 id=\"不要抱怨\"><a href=\"#不要抱怨\" class=\"headerlink\" title=\"不要抱怨\"></a>不要抱怨</h3><p>和我一起的同事，加班总是抱怨，总是嚷嚷跳槽，却没有看他下班之后看书。在组里我加班最多，实习生干着比正式员工还多的活。 经常加班到公司只剩我一个人。我觉得没什么可抱怨的，就当作是一场历练吧。另外没人觉得一个人在公司呆着特别过瘾吗。可以不用带耳机放音乐，一个人享受整个公司的带宽，就算不做工作任务，也可以自己学习。人总是需要隐忍很长段时间，做自己不想做的事，得到远远少于付出的回报。 没关系，我还年轻，让我来。哈哈哈。<br>&lt;!– ### 人和人的不一样</p>\n<p>前段时间给公司提过一些建议，主要针对 公司流程、制度不合理的问题。 HR 专门找我谈了话，夸我热心，解开了我一直以来的疑惑。</p>\n<p>我才会认识到有些人真的是只愿意做一颗螺丝钉，不愿意改变，不愿意尝试。 –&gt;</p>\n<h3 id=\"成功才是成功之母\"><a href=\"#成功才是成功之母\" class=\"headerlink\" title=\"成功才是成功之母\"></a>成功才是成功之母</h3><p>最近特别多的感悟，强烈的这样一种感觉——哦，我这样做原来是对的。 和《暗时间》说的真是一样一样了。例如说，只有做自己喜欢的事才会保持长久的专注，例如做 PPT 可以做到凌晨三点，以及一些记忆、思维的知识。</p>\n<p>我想只要做成了一些事，才会有这些特别难得的感悟，对自己以后会有更清晰的认识。</p>\n<p>还是要继续多看书 《暗时间》等等 以及多看微博上值得关注的大牛们分享的不但是技术和生活的一些东西，在潜意识里可以影响到我，做一个更好的我。</p>\n<p>还有实习入职没多久，公司开展了一门 IBM 的 MOT(moment of time)培训课程。</p>\n<p>我才会去想，啊。我抓住了年终总结的关键时刻。</p>\n<h4 id=\"技术！技术！\"><a href=\"#技术！技术！\" class=\"headerlink\" title=\"技术！技术！\"></a>技术！技术！</h4><p>发现自己总是有很多想法，但是技术渣，所以一时半会没有办法实现，这让我非常沮丧！</p>\n<p>必须要更加脚踏实地的学好技术，打好基础。这样会争夺到更多的话语权，至少别人说什么我能听的懂。我真是太讨厌我别人说的我听不懂，或者自己想做的因为自己能力不够没法做。</p>\n<h4 id=\"还有很多\"><a href=\"#还有很多\" class=\"headerlink\" title=\"还有很多\"></a>还有很多</h4><p>还有很多这些天的思考，一时半会忘了。例如有趣非常重要等等等。留点可以春节回家写下这一年来的收获和失去。</p>\n<p>下周要做的事：</p>\n<ol>\n<li><code>The ABC of Front-end Web Development</code></li>\n<li>《JavaScript 高级程序设计》 再不看我特么春节后又得丢人了。</li>\n</ol>\n<p>最后分享一张 我的博客原型图（Version 0.0.0.0.1） 哈哈哈！<br><img src=\"https://cloud.githubusercontent.com/assets/5771087/5892738/a042f8b2-a504-11e4-94a0-24628e49cfd1.png\" alt=\"mockup\"></p>\n"},{"title":"SVN工作流","url":"http://padding.me/blog/2015/01/23/SVN工作流/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/fex-dream\" target=\"_blank\" rel=\"external\">fex-dream</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/fex-dream/fex-dream/issues/87\" target=\"_blank\" rel=\"external\">https://github.com/fex-dream/fex-dream/issues/87</a></p>\n<p>为了内网文件和外网文件同步，</p>\n<p>首先本地pull（覆盖） 下 svn 上 最新信息，然后 把外网文件（如果有svn信息 全部删除）覆盖内网文件。</p>\n<p>然后再push 到svn 上。</p>\n<p>这样内网和外网就同步了。</p>\n<h2 id=\"为什么会出现本地和-SVN-不一样？\"><a href=\"#为什么会出现本地和-SVN-不一样？\" class=\"headerlink\" title=\"为什么会出现本地和 SVN 不一样？\"></a>为什么会出现本地和 SVN 不一样？</h2><ol>\n<li><p>开发懒，无意识，通常一个网站都是一个人来维护，所以不会去push 代码；</p>\n</li>\n<li><p>由 1 开发也很少会 pull 别人的代码，除非要维护被人的代码。</p>\n</li>\n</ol>\n<h2 id=\"为什么内网和外网又不一样？\"><a href=\"#为什么内网和外网又不一样？\" class=\"headerlink\" title=\"为什么内网和外网又不一样？\"></a>为什么内网和外网又不一样？</h2><ol>\n<li>遇到着急的改动或者 bug, 开发直接就在外网后台改了。之后又忘记在本地更新；</li>\n<li>开发懒，因为外网改进或者debug 流程是： 开发-&gt;提测-&gt;内网部署-&gt;测试验证-&gt;出库-&gt;实施打补丁。<br>这之间不可控的因素太多，例如有新 bug 产生， 例如需要和测试去沟通改了什么 等等。。</li>\n</ol>\n<p>而且在外网直接改，很可能就是灭顶之灾，已经有好几个同事因为在外网直接操作，导致产生bug 或者 网站瘫痪，但是还是会有同事在外网改。</p>\n<h2 id=\"为什么外网会有-svn-信息？\"><a href=\"#为什么外网会有-svn-信息？\" class=\"headerlink\" title=\"为什么外网会有 svn 信息？\"></a>为什么外网会有 svn 信息？</h2><p>开发人员 出补丁大意，将 svn 信息也出了，测试人员 出库也直接出了。</p>\n<p>综上 制度和流程问题。</p>\n<p>应该权衡下找到一个相对折中的方法，在每一种情况下 应该怎么做。建立制度，强制执行。 </p>\n<p><strong>不能靠人自觉，应该靠工具来强制。</strong></p>\n<p>最后 自动化工具， fis, bower, gulp , 还活在古代的感觉….</p>\n"},{"title":"inline-block前世今生","url":"http://padding.me/blog/2015/01/19/inline-block前世今生/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/DailyReading\" target=\"_blank\" rel=\"external\">DailyReading</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/DailyReading/issues/5\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/DailyReading/issues/5</a></p>\n<h2 id=\"inline-block-前世今生\"><a href=\"#inline-block-前世今生\" class=\"headerlink\" title=\"inline-block 前世今生\"></a><a href=\"http://ued.taobao.org/blog/2012/08/inline-block/\" target=\"_blank\" rel=\"external\">inline-block 前世今生</a></h2><ol>\n<li><p>IE6、7 真的不支持 <code>display:inline-block</code> 吗？</p>\n<p>IE 从 5.5 开始就已经支持<code>display:inline-block</code>了，只是支持的并不是那么完善。</p>\n<p>IE6 中 block 元素即使触发了 hasLayout 也不具有 inline-block 元素不换行的特性。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">display</span><span class=\"selector-pseudo\">:inline-block</span>; <span class=\"comment\">/* 现代浏览器 +IE6、7 inline 元素 */</span></span><br><span class=\"line\">*<span class=\"selector-tag\">display</span><span class=\"selector-pseudo\">:inline</span>; <span class=\"comment\">/* IE6、7 block 元素 */</span></span><br><span class=\"line\">*<span class=\"selector-tag\">zoom</span><span class=\"selector-pseudo\">:1</span>; <span class=\"comment\">/* 触发haslayout*/</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>到底什么是 inline-block</p>\n<p>inline-block 后的元素创建了一个行级的块容器，该元素内部（内容）被格式化成一个块元素，同时元素本身则被格式化成一个行内元素。</p>\n<p>即：inline-block 的元素既具有 block 元素可以设置宽高的特性，同时又具有 inline 元素默认不换行的特性。当然不仅仅是这些特性，比如 inline-block 元素也可以设置 vertical-align 属性。简而言之：</p>\n<p><strong>inline-block 后的元素就是一个格式化为行内元素的块容器( Block container )。</strong></p>\n<p>总结：</p>\n<ul>\n<li>IE5.5 后开始支持 inline-block， 但是它所支持的 inline-block 不能等同于 CSS2.1 中的 inline-block，因为 IE5.5 比 CSS2.1 更早提出 inline-block 的概念并作为所谓的「私有属性值」使用，所以二者表现出来的效果是不完全一致。</li>\n<li>IE 5.5、6、7 、8（Q）中 block 元素对 inline-block 支持不完整，如果要达到类似的效果，需要先设置为 display:inline，然后使用 zoom:1 等触发 hasLayout。</li>\n<li>IE 5.5、6、7 、8（Q）中 inline 元素欲达到 inline-block 的效果只需直接设置此属性值或使用 zoom:1 等均可。</li>\n</ul>\n</li>\n<li><p>去除 inline-block 空隙终极解决方案。</p>\n <figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.dib-wrap &#123;</span><br><span class=\"line\">    font-size:0;/* 所有浏览器 */</span><br><span class=\"line\">    *word-spacing:-1px;/* IE6、7 */</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.dib-wrap .dib &#123;</span><br><span class=\"line\">    font-size: 12px;</span><br><span class=\"line\">    letter-spacing: normal;</span><br><span class=\"line\">    word-spacing: normal;</span><br><span class=\"line\">    vertical-align:top;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@media screen and (-webkit-min-device-pixel-ratio:0)&#123;</span><br><span class=\"line\">/* firefox 中 letter-spacing 会导致脱离普通流的元素水平位移 */</span><br><span class=\"line\">    .dib-wrap&#123;</span><br><span class=\"line\">        letter-spacing:-5px;/* Safari 等不支持字体大小为 0 的浏览器, N 根据父级字体调节*/</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.dib &#123;</span><br><span class=\"line\">    display: inline-block;</span><br><span class=\"line\">    *display:inline;</span><br><span class=\"line\">    *zoom:1;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p> 总结：</p>\n<ul>\n<li>IE5.5 后开始支持 inline-block， 比 CSS2.1 更早提出 inline-block 的概念并作为所谓的「私有属性值」使用。但是它所支持的 inline-block 不能等同于 CSS2.1 中的 inline-block，IE 5.5、6、7 、8（Q）中 block 元素对 inline-block 支持不完整，因此二者表现出来的效果是不完全一致。</li>\n<li>产生 inline-block 空隙的根本性原因是：HTML 中的换行符、空格符、制表符等合并为空白符，字体大小不为 0 的情况下，空白符自然占据一定的宽度，因此产生了元素间的空隙。</li>\n<li>慎用 -webkit-text-size-adjust:none，它将会导致页面无法通过缩放来改变字体大小。</li>\n</ul>\n</li>\n<li><p>W3C 9.1 White space 中规定以下元素属于空白符（white space）：</p>\n<ul>\n<li>ASCII 空格 ( )</li>\n<li>ASCII 制表符 ( )</li>\n<li>ASCII 换页符 (\\&#x000C;)</li>\n<li>零宽度空格 (​)「这个在闭合浮动中也有运用到」</li>\n</ul>\n</li>\n</ol>\n"},{"title":"0110-0117","url":"http://padding.me/blog/2015/01/18/0110-0117/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/fex-dream\" target=\"_blank\" rel=\"external\">fex-dream</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/fex-dream/fex-dream/issues/80\" target=\"_blank\" rel=\"external\">https://github.com/fex-dream/fex-dream/issues/80</a></p>\n<p>这周渐渐进入状态，不像以前参加慕女神 90 天计划的那段时间特别累，每天对着 fex-dream 上的日程也很累，每天刷 GitHub contribution 。因为总有在做给别人看的感觉，每天上班很累很累，晚上也要回来匆忙的结束一天的学习。敷衍别人很重要，对自己呢？所以后来放弃了。<strong>到底内心的平实才是最重要的</strong>。</p>\n<p>自从用了 <a href=\"http://doit.im\" target=\"_blank\" rel=\"external\">doit.im</a> 之后 效率上升了很多，一种时间握在自己手中的充实。虽然每天也睡的很晚，但是不那么累了，希望这种状态可以一直保持下去。</p>\n<p>建了个新 repo—— <a href=\"https://github.com/paddingme/DailyReading\" target=\"_blank\" rel=\"external\">DailyReading</a>，每天看篇文章，记点笔记什么的。 可不是每天哦，累了就休息下，只希望自己能保持下去，每天都能学到点什么。</p>\n<p>写一篇博客花的时间很多，但是要坚持一周一篇。</p>\n<p>每天有坚持背单词，还在 <a href=\"https://developer.mozilla.org/\" target=\"_blank\" rel=\"external\">MDN</a>  翻译文档，虽然翻译得很烂。:smile: 在这半年里英语可以能好一点。</p>\n<p> JavaScript 一直在看，但动手敲代码不多，准备和 @XfLoops (Nice to meet you too!)  一样去 codeacademy  上做题。</p>\n<p>博客重新设计不能再等呢，我都快看不下去了！</p>\n<p>母亲生病了，但好在没什么大事。</p>\n<p>坚持了差不多2个多月，周末一直打羽毛球。身体始终是自己的。在球场上奔跑，是我每周为数不多最放松和开心的时候。</p>\n<p>远离社交网络，但是还会浏览微博，只是没什么可说的。</p>\n<p>想做的事情很多很多，要做的事情也很多很多，但是不着急，慢慢来。</p>\n<p>跟随自己的内心，得到的、失去的，不管是梦想还是生活，只有自己体味最深。</p>\n<blockquote>\n<p>关于坚持这件事，我和你一样，如果一件事没有乐趣，是坚持不了多久的。人要坚持成全自己，就得先学会与自己尽量愉快地相处。—— 二逼瓦西里</p>\n</blockquote>\n"},{"title":"css 换行的那些事儿","url":"http://padding.me/blog/2015/01/17/those-things-of-break-lines-in-css/","content":"<h2 id=\"一个导航栏引发的血案\"><a href=\"#一个导航栏引发的血案\" class=\"headerlink\" title=\"一个导航栏引发的血案\"></a>一个导航栏引发的血案</h2><p>周五做一个二级导航栏，需要的效果如图所示，</p>\n<p>写的代码是：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"zh-cmn-Hans\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Navbar<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span><br><span class=\"line\">        ul &#123;</span><br><span class=\"line\">            list-style: none;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        a &#123;</span><br><span class=\"line\">            text-decoration: none;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        .nav li a:hover &#123;</span><br><span class=\"line\">            background: lightsteelblue;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        .nav li &#123;</span><br><span class=\"line\">            display: inline-block;</span><br><span class=\"line\">            *display: inline;</span><br><span class=\"line\">            *zoom: 1;</span><br><span class=\"line\">            position: relative;</span><br><span class=\"line\">            padding-bottom: 20px;</span><br><span class=\"line\">            border: 1px solid red;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        .nav li a &#123;</span><br><span class=\"line\">            padding: 10px;</span><br><span class=\"line\">            background: aliceblue ;</span><br><span class=\"line\">            margin-right: -8px;</span><br><span class=\"line\">            border-right: 1px solid #fff;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        .nav li:hover .second-column &#123;</span><br><span class=\"line\">            visibility: visible;</span><br><span class=\"line\">            border: 1px solid blue;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        .second-column &#123;</span><br><span class=\"line\">            visibility: hidden;</span><br><span class=\"line\">            position: absolute;</span><br><span class=\"line\">            top: 37px;</span><br><span class=\"line\">            left: 0;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        .nav .second-column a &#123;</span><br><span class=\"line\">            padding: 0;</span><br><span class=\"line\">            margin: 0;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"nav\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>一级栏目<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>一级栏目<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"second-column\"</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>二级栏目<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>二级栏目<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>二级栏目<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>二级栏目<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>一级栏目<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"second-column\"</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>二级栏目二级栏目二级栏目<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>二级栏目<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>二级栏目二级栏目二级栏目<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>二级栏目<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span>&gt;</span>一级栏目<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>得到的效果是：</p>\n<p>在线 DEMO: <a href=\"http://codepen.io/paddingme/pen/QwvLBO\" target=\"_blank\" rel=\"external\">http://codepen.io/paddingme/pen/QwvLBO</a></p>\n<p>发现二级导航栏所在的区域和一级导航栏 <code>li</code> 区域宽度一样，无法全部水平拜访。</p>\n<p>折腾了半天，研究了半天，差点于屏幕前吐血身亡。最后发现加了句 <code>white-space: nowrap;</code> 就轻松搞定了。</p>\n<p>在线 DEMO: <a href=\"http://codepen.io/paddingme/pen/RNVbBr\" target=\"_blank\" rel=\"external\">http://codepen.io/paddingme/pen/RNVbBr</a></p>\n<p>猜测是 绝对定位的元素根据其定位的父元素进行定位，默认情况下不限制宽度的情况下，绝对定位元素会自动折行，不超过其定位的父元素的宽度区域。</p>\n<p>这里我们使用 <code>white-space: nowrap</code> 强制不换行得到所需要效果。</p>\n<h2 id=\"white-space\"><a href=\"#white-space\" class=\"headerlink\" title=\"white-space\"></a>white-space</h2><p>实现强制不换行</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">div &#123;</span><br><span class=\"line\">    white-space：nowrap;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>语法： <code>white-space</code>：normal | pre | nowrap | pre-wrap | pre-line</p>\n<p>查看了 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/white-space\" target=\"_blank\" rel=\"external\">MDN</a>（还翻译了下，感觉翻译得好差，见笑=.=）和 <a href=\"http://css.doyoe.com/\" target=\"_blank\" rel=\"external\">CSS参考手册</a>。<br>总结下各个取值的用法是：</p>\n<ul>\n<li><code>normal</code> : 浏览器默认情况下 <code>white-space</code> 即为 <code>normal</code>, 表现为连续的空白符会被合并为一个空格，制表符、换行符都是空白符。当遇到盒子边界或者 <code>&lt;br&gt;</code> 就会换行。</li>\n<li><code>pre</code>: 连续的空白符不会被合并。</li>\n<li><code>nowrap</code>: 强制文本不换行，除非遇到<code>&lt;br&gt;</code>。</li>\n<li><code>pre-wrap</code>: 连续的空白符不会被合并, 遇到盒子边界或者 <code>&lt;br&gt;</code> 就会换行。</li>\n<li><code>pre-line</code>: 连续的空白符不会被合并,保持文本的换行,遇到盒子边界或者 <code>&lt;br&gt;</code> 就会换行。</li>\n</ul>\n<p><img src=\"http://paddingme.qiniudn.com/whitespace.png\" alt=\"\"></p>\n<p>注：IE7及更早浏览器不支持 CSS2.1 新增的 pre-wrap | pre-line。</p>\n<h2 id=\"word-wrap-amp-word-break\"><a href=\"#word-wrap-amp-word-break\" class=\"headerlink\" title=\"word-wrap &amp; word-break\"></a>word-wrap &amp; word-break</h2><p>CSS 自动换行</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">div</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">word-wrap</span>: break-word;</span><br><span class=\"line\">    <span class=\"attribute\">word-break</span>: normal;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>word-wrap：normal | break-word</p>\n<ul>\n<li>normal： 允许内容顶开或溢出指定的容器边界。</li>\n<li>break-word： 内容将在边界内换行。如果需要，单词内部允许断行。</li>\n</ul>\n<p>设置或检索当内容超过指定容器的边界时是否断行。<br>作为 IE 的私有属性之一，IE5.5 率先实现了 <code>word-wrap</code> ，后期被 w3c 采纳成标准属性；<br>CSS3 中将 <code>word-wrap</code> 改名为 <code>overflow-wrap</code>；<br>对应的脚本特性为 <code>wordWrap</code>。</p>\n<p><code>word-break</code> 是用来在单词内断行。</p>\n<p>word-break：normal | keep-all | break-all</p>\n<ul>\n<li>normal： 依照亚洲语言和非亚洲语言的文本规则，允许在字内换行。</li>\n<li>keep-all： 与所有非亚洲语言的 normal 相同。对于中文，韩文，日文，不允许字断开。适合包含少量亚洲文本的非亚洲文本。</li>\n<li>break-all： 该行为与亚洲语言的 normal 相同。也允许非亚洲语言文本行的任意字内断开。该值适合包含一些非亚洲文本的亚洲文本，比如使连续的英文字母间断行。</li>\n</ul>\n<p>设置或检索对象内文本的字内换行行为。注意 FireFox 早起版本不识别 word-break，需要 hack。<br>对于解决防止页面中出现连续无意义的长字符打破布局，应该使用 <code>break-all</code>；<br>作为 IE 的私有属性之一，IE5.5 率先实现了 <code>word-break</code> ，后期被w3c采纳成标准属性；<br>对应的脚本特性为 <code>wordBreak</code>。</p>\n<p>参考：</p>\n<ul>\n<li><a href=\"http://www.hicss.net/solve-change-line-in-css/\" target=\"_blank\" rel=\"external\">http://www.hicss.net/solve-change-line-in-css/</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/white-space\" target=\"_blank\" rel=\"external\">https://developer.mozilla.org/zh-CN/docs/Web/CSS/white-space</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/word-break\" target=\"_blank\" rel=\"external\">https://developer.mozilla.org/zh-CN/docs/Web/CSS/word-break</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/word-wrap\" target=\"_blank\" rel=\"external\">https://developer.mozilla.org/zh-CN/docs/Web/CSS/word-wrap</a></li>\n<li><a href=\"http://css.doyoe.com/\" target=\"_blank\" rel=\"external\">http://css.doyoe.com/</a></li>\n</ul>\n<h2 id=\"css-实现省略号\"><a href=\"#css-实现省略号\" class=\"headerlink\" title=\"css 实现省略号\"></a>css 实现省略号</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">div</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">27em</span>;</span><br><span class=\"line\">    <span class=\"attribute\">white-space</span>: nowrap;</span><br><span class=\"line\">    <span class=\"attribute\">text-overflow</span>:ellipsis;</span><br><span class=\"line\">    <span class=\"attribute\">overflow</span>:hidden;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>注意 <code>text-overflow: ellipsis</code> 在 Firefox 下无效，可以用其他方法 hack，例如</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* FF 下的样式 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;<span class=\"attribute\">clear</span>:both;&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">p</span> <span class=\"selector-tag\">span</span> &#123;</span><br><span class=\"line\"><span class=\"attribute\">float</span>:left;</span><br><span class=\"line\">    <span class=\"attribute\">max-width</span>:<span class=\"number\">175px</span>;   <span class=\"comment\">/*IE不能解释该属性，而FF可以*/</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">p</span><span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>:<span class=\"string\">\"...\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>参考：</p>\n<ul>\n<li><a href=\"http://www.zhangxinxu.com/wordpress/2009/09/%E5%85%B3%E4%BA%8E%E6%96%87%E5%AD%97%E5%86%85%E5%AE%B9%E6%BA%A2%E5%87%BA%E7%94%A8%E7%82%B9%E7%82%B9%E7%82%B9-%E7%9C%81%E7%95%A5%E5%8F%B7%E8%A1%A8%E7%A4%BA/\" target=\"_blank\" rel=\"external\">关于文字内容溢出用点点点(…)省略号表示</a></li>\n<li><a href=\"http://www.cnblogs.com/hlz789456123/archive/2009/02/18/1392972.html\" target=\"_blank\" rel=\"external\">CSS 单行溢出文本显示省略号…的方法（兼容IE FF）\n</a></li>\n</ul>\n"},{"title":"《暗时间》1","url":"http://padding.me/blog/2015/01/15/《暗时间》1/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/fex-dream\" target=\"_blank\" rel=\"external\">fex-dream</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/fex-dream/fex-dream/issues/76\" target=\"_blank\" rel=\"external\">https://github.com/fex-dream/fex-dream/issues/76</a></p>\n<p>昨@猪小排 突然想起前几天是我生日，作为我仅存的唯一关系铁的女性朋友，我表达了失望和无所谓 。 :smirk: </p>\n<p>为了表达不安, 土豪竟然在京东上怒买了两本书作为礼物送我。</p>\n<p>一本是刘未鹏的 《暗时间》 和周国平的 《文化品格》（我以为这本是她自己买的 ），今天下午便收到了。</p>\n<p>感动ing，请广大土豪们都来和我做朋友。</p>\n<p>这里记录下《暗时间》比较受益的地方，权当读书笔记了。</p>\n<h2 id=\"序言：为什么人人都该学点心理学\"><a href=\"#序言：为什么人人都该学点心理学\" class=\"headerlink\" title=\"序言：为什么人人都该学点心理学\"></a>序言：为什么人人都该学点心理学</h2><p>豆瓣豆列：<a href=\"http://www.douban.com/doulist/127649/\" target=\"_blank\" rel=\"external\"> “学会思考”</a></p>\n<h2 id=\"暗时间\"><a href=\"#暗时间\" class=\"headerlink\" title=\"暗时间\"></a>暗时间</h2><p>善于利用思维时间的人则能够在重要的事情上时时主动提醒自己，将临时的记忆变成硬编码的行为习惯。</p>\n<p>『投入时间』 这个说法本身就是荒唐的，<strong>实际投入的是时间和效率的乘积</strong>。</p>\n<p>看书并记住书中的东西只是记忆，并没有涉及推理，只有靠推理才能呢个深入理解一个事物，看到别人看不到的地方。</p>\n<p>要充分利用暗时间，不仅要能够迅速进入状态，另一个更重要的习惯就是能够保持状态多久（思维体力）。</p>\n<p><strong>能够迅速进入专注状态，以及能够长期保持专注状态，是高效学习的两个最重要的习惯</strong>。</p>\n<p>具有超强的抗干扰能力，才能有效地利用暗时间。</p>\n<p>经常利用各种碎片时间阅读和思考，对迅速集中注意力和保持注意力都非常有帮助。</p>\n"},{"title":"回味background","url":"http://padding.me/blog/2015/01/14/回味background/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/DailyReading\" target=\"_blank\" rel=\"external\">DailyReading</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/DailyReading/issues/2\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/DailyReading/issues/2</a></p>\n<h1 id=\"回味background\"><a href=\"#回味background\" class=\"headerlink\" title=\"回味background\"></a><a href=\"http://segmentfault.com/blog/linxz/1190000002481921\" target=\"_blank\" rel=\"external\">回味background</a></h1><p>笔记目录：</p>\n<ul>\n<li><a href=\"#background\">background</a></li>\n<li><a href=\"#background-color\">background-color</a></li>\n<li><a href=\"#background-image\">background-image</a></li>\n<li><a href=\"#background-position\">background-position</a></li>\n<li><a href=\"#background-origin\">background-origin(CSS3)</a></li>\n<li><a href=\"#background-clip\">background-clip(CSS3)</a></li>\n<li><a href=\"#background-attachment\">background-attachment)</a></li>\n<li><a href=\"#background-repeat\">background-repeat</a></li>\n<li><a href=\"#background-size\">background-size(CSS3)</a></li>\n<li><a href=\"#mult-background-imgaes\">多背景图片</a></li>\n<li><a href=\"#simply-mode\">background 简写模式</a></li>\n</ul>\n<h2 id=\"background\">background</h2>\n\n<p>background 简写属性在一个声明中设置所有的背景属性。<br>可以设置如下属性：</p>\n<ul>\n<li>background-color(CSS1)</li>\n<li>background-position(CSS1)</li>\n<li>background-repeat(CSS1)</li>\n<li>background-attachment(CSS1)</li>\n<li>background-image(CSS1)</li>\n<li>background-clip(CSS3)</li>\n<li>background-size(CSS3)</li>\n<li>background-origin(CSS3)</li>\n</ul>\n<p>如果不设置其中的某个值，也不会出问题，比如 <code>background:#ff0000 url(&#39;smiley.gif&#39;);</code> 也是允许的。</p>\n<p>通常建议使用这个属性，而不是分别使用单个属性，因为 <strong>这个属性在较老的浏览器中能够得到更好的支持，而且需要键入的字母也更少</strong>。</p>\n<h2 id=\"background-color\">background-color</h2>\n\n<p><code>background-color</code> 的显示区域和 <code>background-clip</code> 有关。</p>\n<p>demo: <a href=\"http://jsbin.com/fiyazayuho/2/\" target=\"_blank\" rel=\"external\">http://jsbin.com/fiyazayuho/2/</a></p>\n<p><img src=\"http://sfault-image.b0.upaiyun.com/343/503/3435038285-54b3e96100924_articlex\" alt=\"\"></p>\n<h2 id=\"background-image\">background-image</h2>\n\n<p><code>background-image:url()</code> 这个括号里的地址建议不要用中文/全角字符，如果有空格的话，那么就建议个路径加上引号。</p>\n<p>默认地，背景图像位于元素的左上角。<br>提示：请设置一种可用的背景颜色，这样的话，假如背景图像不可用，页面也可获得良好的视觉效果。<code>background-image</code> 会盖在 <code>background-color</code> 上面，然后如果在 <code>url()</code> 后面写半角英文逗号的话，就可以玩多背景图了，比如：<code>background-image: url(name1.jpg), url(name2.png), url(name3.gif);</code>。</p>\n<h2 id=\"background-position\">background-position</h2>\n\n<p><code>background-position</code> 的位置是跟 <code>background-origin</code> 相关。</p>\n<p>可能的值:</p>\n<table>\n<thead>\n<tr>\n<th>值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>top left,top center,top right,center left, center center, center right, bottom left, bottom center,bottom right</td>\n<td>如果仅规定了一个关键词，那么第二个值将是”center”。默认值：0% 0%。</td>\n</tr>\n<tr>\n<td>x% y%</td>\n<td>第一个值是水平位置，第二个值是垂直位置。左上角是 0% 0%。右下角是 100% 100%。如果仅规定了一个值，另一个值将是 50%。</td>\n</tr>\n<tr>\n<td>xpos ypos</td>\n<td>第一个值是水平位置，第二个值是垂直位置。左上角是 0 0。单位是像素 (0px 0px) 或任何其他的 CSS 单位。如果仅规定了一个值，另一个值将是50%。</td>\n</tr>\n</tbody>\n</table>\n<p>可以混合使用 % 和 position 值。|</p>\n<h2 id=\"background-origin\">background-origin(CSS3)</h2>\n\n<p><code>background-origin</code> 规定了指定背景图片 <code>background-image</code> 属性的原点位置的背景相对区域。<code>background-image</code> 有三个属性值：</p>\n<ul>\n<li>border-box<br>背景将会延伸到延伸到外边界的边框，但是是在边框在上，背景在下，这个用border-style 为dashed可以直接看得出来。</li>\n<li>padding-box<br>背景描绘在padding盒子，边框里不会有背景出现。同样，背景将会延伸到最外边界的padding.</li>\n<li>content-box<br>背景描绘在内容区范围.</li>\n</ul>\n<p>注意：当使用 background-attachment 为fixed时，该属性将被忽略不起作用。</p>\n<h2 id=\"background-clip\">background-clip(CSS3)</h2>\n\n<p><code>background-clip</code> 设置元素的背景（背景图片或颜色）是否延伸到边框下面。如果没有背景图片，那么只有在边框设置为透明或半透明时才能看到视觉效果。其也拥有三个属性值：</p>\n<ul>\n<li>border-box<br>背景延伸到边框外沿（背景被裁剪到边框盒）。</li>\n<li>padding-box<br>背景延伸到内边距外沿（背景被裁剪到内边距框）。</li>\n<li>content-box<br>背景裁剪到内容区外沿（背景被裁剪到内容框）。</li>\n</ul>\n<h2 id=\"background-attachment\">background-attachment</h2>\n\n<p>如果指定了 <code>background-image</code> ，那么 <code>background-attachment</code> 决定背景图像是在视角中固定的还是随滚动条滚动的，默认值为 <code>scroll</code></p>\n<ul>\n<li>scroll<br>如果设为 <code>scroll</code>，背景图片会随着包含它的区块一起滚动。</li>\n<li>fixed<br>如果设为 <code>fixed</code>，背景图片不会随着包含它的元素一直滚动，而是一直固定固定在屏幕的一个位置。</li>\n<li><p>local（CSS3）<br><a href=\"http://jsbin.com/cenipe/1/\" target=\"_blank\" rel=\"external\">http://jsbin.com/cenipe/1/</a></p>\n<p><img src=\"http://sfault-image.b0.upaiyun.com/350/295/3502950769-54b3ea06a1a97_articlex\" alt=\"\"></p>\n</li>\n</ul>\n<h2 id=\"background-repeat\">background-repeat</h2>\n\n<p><code>background-origin</code> 属性会影响 <code>background-repeat</code>。</p>\n<ul>\n<li>repeat<br>背景图像将在垂直方向和水平方向重复。</li>\n<li>no-repeat<br>背景图像将仅显示一次。</li>\n<li>repeat-x<br>背景图像将在水平方向重复。</li>\n<li>repeat-y<br>背景图像将在垂直方向重复。</li>\n<li>space（CSS3）<br>根据背景图片的大小，然后通过计算容器的大小来平铺背景，多余的部分用空白来填充，这样的平铺方式是不会出现图片被截成一半的情况。</li>\n</ul>\n<p><img src=\"http://sfault-image.b0.upaiyun.com/174/948/1749480153-54b3ea294b617\" alt=\"\"></p>\n<ul>\n<li>round（CSS3）<br>根据背景图片的大小，然后通过计算容器的大小，压缩图片来填充容器，这样的平铺方式也是不会出现图片截成一半的情况，不过跟background-repeat: space;不同的是这种填充方式不会出现空白的区域，而是会去压缩图片的大小来适应容器，如图：</li>\n</ul>\n<p><img src=\"http://sfault-image.b0.upaiyun.com/329/872/329872279-54b3ea360c3f7\" alt=\"\"></p>\n<h2 id=\"background-size\">background-size(CSS3)</h2>\n\n<p><code>background-size</code> 设置背景图片大小。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 关键字 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">background-size</span>: <span class=\"selector-tag\">cover</span></span><br><span class=\"line\"><span class=\"selector-tag\">background-size</span>: <span class=\"selector-tag\">contain</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 一个值: 这个值指定图片的宽度，图片的高度隐式的为auto */</span></span><br><span class=\"line\"><span class=\"selector-tag\">background-size</span>: 50%</span><br><span class=\"line\"><span class=\"selector-tag\">background-size</span>: 3<span class=\"selector-tag\">em</span></span><br><span class=\"line\"><span class=\"selector-tag\">background-size</span>: 12<span class=\"selector-tag\">px</span></span><br><span class=\"line\"><span class=\"selector-tag\">background-size</span>: <span class=\"selector-tag\">auto</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 两个值: 第一个值指定图片的宽度，第二个值指定图片的高度 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">background-size</span>: 50% <span class=\"selector-tag\">auto</span></span><br><span class=\"line\"><span class=\"selector-tag\">background-size</span>: 3<span class=\"selector-tag\">em</span> 25%</span><br><span class=\"line\"><span class=\"selector-tag\">background-size</span>: <span class=\"selector-tag\">auto</span> 6<span class=\"selector-tag\">px</span></span><br><span class=\"line\"><span class=\"selector-tag\">background-size</span>: <span class=\"selector-tag\">auto</span> <span class=\"selector-tag\">auto</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 逗号分隔的多个值：设置多重背景 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">background-size</span>: <span class=\"selector-tag\">auto</span>, <span class=\"selector-tag\">auto</span>     <span class=\"comment\">/* 不同于background-size: auto auto */</span></span><br><span class=\"line\"><span class=\"selector-tag\">background-size</span>: 50%, 25%, 25%</span><br><span class=\"line\"><span class=\"selector-tag\">background-size</span>: 6<span class=\"selector-tag\">px</span>, <span class=\"selector-tag\">auto</span>, <span class=\"selector-tag\">contain</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">background-size</span>: <span class=\"selector-tag\">inherit</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><length><br><length> 值，指定背景图片大小，不能为负值。</length></length></li>\n<li><percentage><br><percentage> 值，指定背景图片相对背景区（background positioning area）的百分比。背景区由background-origin设置，默认为盒模型的内容区与内边距，也可设置为只有内容区，或者还包括边框。如果attachment 为fixed，背景区为浏览器可视区（即视口），不包括滚动条。不能为负值。</percentage></percentage></li>\n<li>auto<br>以背景图片的比例缩放背景图片。</li>\n<li>cover<br>缩放背景图片以完全覆盖背景区，可能背景图片部分看不见。</li>\n<li>contain<br>缩放背景图片以完全装入背景区，可能背景区部分空白。</li>\n</ul>\n<p>背景图片大小计算：</p>\n<ul>\n<li>如果指定了 background-size 的两个值并且不是auto：<br>背景图片按指定大小渲染。</li>\n<li>contain 或 cover:<br>保留固有比例，最大的包含或覆盖背景区。如果图像没有固有比例，则按背景区大小。</li>\n<li>auto 或 auto auto:<br>图像如果有两个长度，则按这个尺寸。如果没有固有尺寸与固有比例，则按背景区的大小。如果没有固有尺寸但是有固有比例， 效果同 contain。如果有一个长度与比例，则由此长度与比例计算大小。如果有一个长度但是没有比例，则使用此长度与背景区相应的长度。</li>\n<li>一个为 auto 另一个不是auto:<br>如果图像有固有比例，则指定的长度使用指定值，未指定的长度由指定值与固有比例计算。如果图像没有固有比例，则指定的长度使用指定值，未指定的长度使用图像相应的固有长度，若没有固有长度，则使用背景区相应的长度。</li>\n</ul>\n<p>注意，对于没有固有尺寸或固有比例的矢量图不是所有的浏览器都支持。特别注意测试Firefox 7- 与Firefox 8+，以确定不同之处能否接受。</p>\n<h2 id=\"mult-background-imgaes\">多背景图片</h2>\n\n<p>用英文半角逗号隔开，如果要用简写模式的话，那么就先写完一个 background 简写属性后，再用,半角逗号隔开，继续写，如：</p>\n<pre><code>background: url(a.png) top left no-repeat,\n            url(b.png) center / 100% 100% no-repeat,\n            url(c.png) white;\n</code></pre><h2 id=\"simply-mode\">background 简写模式</h2>\n\n<p>以前没有那么多新增属性的时候，简写就是：</p>\n<pre><code>background: url(a.png) top left no-repeat fixed #000;\n</code></pre><p>现在有了之后，就稍微改变了一下，不过也相差不多：</p>\n<pre><code>background: url(a.png) top left / cover no-repeat fixed content-box content-box #000\n</code></pre><p>格式就是：</p>\n<pre><code>&lt;bg-image&gt; || &lt;position&gt; [ / &lt;bg-size&gt; ]? || &lt;repeat-style&gt; || &lt;attachment&gt; || &lt;box&gt; || &lt;box&gt; || &lt;&apos;background-color&apos;&gt;\n</code></pre><h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"http://segmentfault.com/blog/linxz/1190000002481921\" target=\"_blank\" rel=\"external\">http://segmentfault.com/blog/linxz/1190000002481921</a></li>\n<li><a href=\"https://developer.mozilla.org/\" target=\"_blank\" rel=\"external\">https://developer.mozilla.org/</a></li>\n<li><a href=\"http://www.w3school.com.cn/\" target=\"_blank\" rel=\"external\">http://www.w3school.com.cn/</a></li>\n</ul>\n"},{"title":"Markdown 语法笔记","url":"http://padding.me/blog/2015/01/14/my-markdown-syntax-notes/","content":"<p>不久前狗大V —— <a href=\"http://weibo.com/corndog\" target=\"_blank\" rel=\"external\">性感玉米</a> 在 <a href=\"http://weibo.com/1676582524/BDTSIktAJ\" target=\"_blank\" rel=\"external\">微博</a> 中说：</p>\n<blockquote>\n<p>必须要歌颂一下 Markdown 了，自称是语法很容易 Shock 到普通 User，其实要学的，一对手就数得过来。对能熟练背诵江户四十八手的玩家来说不是问题。简易培训之后（比斯大林格勒保卫战中的肉盾培训时间略长）炸裂到完全可以实现在双手不离开键盘的情况下进行简单的格式处理（绝对够用），伟大！相见恨晚！</p>\n</blockquote>\n<p>哈哈哈，狗大 V 都已经在学 <a href=\"http://zh.wikipedia.org/zh-cn/Markdown\" target=\"_blank\" rel=\"external\">Markdown</a> 了，简直炸裂！ 不记得是去年还是前年学习了 Markdown，相见恨晚，已经到了写文章、文档无 Markdown 不欢、寝食不安、无法下指敲键盘的地步了。一个网站如果不支持 Markdown 在我心中更会大打折扣。学习 Markdown 已经很长时间了，Markdown 语法简单易记，但是有时候遇到嵌套或者别的总是会有点晕。这里记载下 Markdown 语法，以供日后查阅。</p>\n<p>本文主要分为以下几部分：</p>\n<ul>\n<li><a href=\"#syntax\">Markdown 基本语法</a><ul>\n<li><a href=\"#html\">兼容 HTML</a></li>\n<li><a href=\"#p\">段落和换行</a></li>\n<li><a href=\"#blockquote\">区块引用 Blockquotes</a></li>\n<li><a href=\"#list\">列表</a></li>\n<li><a href=\"#pre\">代码区块</a></li>\n<li><a href=\"#hr\">分隔线</a></li>\n<li><a href=\"#link\">链接</a></li>\n<li><a href=\"#em\">强调</a></li>\n<li><a href=\"#code\">代码</a></li>\n<li><a href=\"#img\">图片</a></li>\n<li><a href=\"#autolink\">自动链接</a></li>\n</ul>\n</li>\n<li><a href=\"#gfm\">GitHub 风格的 Markdown 语法</a><ul>\n<li><a href=\"#autolink-gfm\">链接自动识别</a></li>\n<li><a href=\"#fenced\">围栏式代码块</a></li>\n<li><a href=\"#task-lists\">任务清单</a></li>\n<li><a href=\"#task-lists\">任务清单</a></li>\n<li><a href=\"#at\">@</a></li>\n<li><a href=\"#emoji\">Emoji</a></li>\n<li><a href=\"#table\">table</a></li>\n<li><a href=\"#del\">强调</a></li>\n</ul>\n</li>\n<li><a href=\"#layout\">一些和排版有关的资源</a></li>\n<li><a href=\"#acknowledgement\">参考文章</a></li>\n</ul>\n<h2 id=\"syntax\">Markdown 语法</h2>\n\n<p>想要从头到尾一步步学习 Markdown 语法，请点击 <a href=\"http://wowubuntu.com/markdown/\" target=\"_blank\" rel=\"external\">http://wowubuntu.com/markdown/</a> 阅读, 这里只记录下对我来说比较容易弄混的语法。</p>\n<h3 id=\"html\">兼容 HTML</h3>\n\n<p>一些 HTML 区块元素――比如 <code>&lt;div&gt;</code>、<code>&lt;table&gt;</code>、<code>&lt;pre&gt;</code>、<code>&lt;p&gt;</code> 等标签，必须在前后加上空行与其它内容区隔开，还要求它们的开始标签与结尾标签不能用制表符或空格来缩进。在 HTML 区块标签间的 Markdown 格式语法将不会被处理。比如，你在 HTML 区块内使用 Markdown 样式的 * 强调 * 会没有效果。</p>\n<pre><code>这是一个普通段落。\n\n&lt;table&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Foo&lt;/td&gt;\n    &lt;/tr&gt;\n&lt;/table&gt;\n\n这是另一个普通段落。\n</code></pre><p>效果：</p>\n<p>这是一个普通段落。</p>\n<pre><code>&lt;table&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Foo&lt;/td&gt;\n    &lt;/tr&gt;\n&lt;/table&gt;\n</code></pre><p>这是另一个普通段落。</p>\n<h3 id=\"p\">段落和换行</h3>\n\n<p>一个 Markdown 段落是由一个或多个连续的文本行组成，它的前后要有一个以上的空行（空行的定义是显示上看起来像是空的，便会被视为空行。比方说，若某一行只包含空格和制表符，则该行也会被视为空行）。普通段落不该用空格或制表符来缩进。</p>\n<p>如果你确实想要依赖 Markdown 来插入 <code>&lt;br /&gt;</code> 标签的话，在插入处先按入两个以上的空格然后回车。</p>\n<h3 id=\"blockquotes\">区块引用</h3>\n\n<pre><code>&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\n&gt; consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\n&gt; Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitrisus.\n&gt;\n&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\n&gt; id sem consectetuer libero luctus adipiscing.\n</code></pre><p>效果：</p>\n<blockquote>\n<p>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,<br>consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.<br>Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</p>\n<p>Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse<br>id sem consectetuer libero luctus adipiscing.</p>\n</blockquote>\n<p>或者只在整个段落的第一行最前面加上 <code>&gt;</code> ：</p>\n<pre><code>&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\n  consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\n  Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\n\n&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\n  id sem consectetuer libero luctus adipiscing.\n</code></pre><p>效果：</p>\n<blockquote>\n<p>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,<br>  consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.<br>  Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</p>\n<p>Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse<br>  id sem consectetuer libero luctus adipiscing.</p>\n</blockquote>\n<p>区块引用可以嵌套（例如：引用内的引用），只要根据层次加上不同数量的 &gt; ：</p>\n<pre><code>&gt; This is the first level of quoting.\n&gt;\n&gt; &gt; This is nested blockquote.\n&gt;\n&gt; Back to the first level.\n</code></pre><p>效果：</p>\n<blockquote>\n<p>This is the first level of quoting.</p>\n<blockquote>\n<p>This is nested blockquote.</p>\n</blockquote>\n<p>Back to the first level.</p>\n</blockquote>\n<p>引用的区块内也可以使用其他的 Markdown 语法，包括标题、列表、代码区块等：</p>\n<pre><code>&gt; ## 这是一个标题。\n&gt;\n&gt; 1.   这是第一行列表项。\n&gt; 2.   这是第二行列表项。\n&gt;\n&gt; 给出一些例子代码：\n&gt;\n&gt;     return shell_exec(&quot;echo $input | $markdown_script&quot;);\n</code></pre><p>效果：</p>\n<blockquote>\n<h2 id=\"这是一个标题。\"><a href=\"#这是一个标题。\" class=\"headerlink\" title=\"这是一个标题。\"></a>这是一个标题。</h2><ol>\n<li>这是第一行列表项。</li>\n<li>这是第二行列表项。</li>\n</ol>\n<p>给出一些例子代码：</p>\n<pre><code>return shell_exec(&quot;echo $input | $markdown_script&quot;);\n</code></pre></blockquote>\n<h3 id=\"list\">列表</h3>\n\n<p>列表项目标记通常是放在最左边，但是其实也可以缩进，最多 3 个空格，项目标记后面则一定要接着至少一个空格或制表符。</p>\n<p>如果列表项目间用空行分开，在输出 HTML 时 Markdown 就会将项目内容用 <code>&lt;p&gt;</code> 标签包起来，举例来说：</p>\n<pre><code>* Bird\n* Magic\n</code></pre><p>会被转换为：</p>\n<pre><code>&lt;ul&gt;\n&lt;li&gt;Bird&lt;/li&gt;\n&lt;li&gt;Magic&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre><p>但是这个：</p>\n<pre><code>* Bird\n\n* Magic\n</code></pre><p>会被转换为：</p>\n<pre><code>&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Bird&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Magic&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre><p>列表项目可以包含多个段落，每个项目下的段落都必须缩进 4 个空格或是 1 个制表符：</p>\n<pre><code>1.  This is a list item with two paragraphs. Lorem ipsum dolor\n    sit amet, consectetuer adipiscing elit. Aliquam hendrerit\n    mi posuere lectus.\n\n    Vestibulum enim wisi, viverra nec, fringilla in, laoreet\n    vitae, risus. Donec sit amet nisl. Aliquam semper ipsum\n    sit amet velit.\n\n2.  Suspendisse id sem consectetuer libero luctus adipiscing.\n</code></pre><p>效果：</p>\n<ol>\n<li><p>This is a list item with two paragraphs. Lorem ipsum dolor<br>sit amet, consectetuer adipiscing elit. Aliquam hendrerit<br>mi posuere lectus.</p>\n<p>Vestibulum enim wisi, viverra nec, fringilla in, laoreet<br>vitae, risus. Donec sit amet nisl. Aliquam semper ipsum<br>sit amet velit.</p>\n</li>\n<li><p>Suspendisse id sem consectetuer libero luctus adipiscing.</p>\n</li>\n</ol>\n<p>如果要在列表项目内放进引用，那 <code>&gt;</code> 就需要缩进：</p>\n<pre><code>*   A list item with a blockquote:\n\n    &gt; This is a blockquote\n    &gt; inside a list item.\n</code></pre><p>效果：</p>\n<ul>\n<li><p>A list item with a blockquote:</p>\n<blockquote>\n<p>This is a blockquote<br>inside a list item.</p>\n</blockquote>\n</li>\n</ul>\n<p><strong>如果要放代码区块的话，该区块就需要缩进<em>两次</em>，也就是 8 个空格或是 2 个制表符</strong>：</p>\n<pre><code>*   一列表项包含一个列表区块：\n\n            &lt;代码写在这&gt;\n</code></pre><p>效果：</p>\n<ul>\n<li><p>一列表项包含一个列表区块：</p>\n<pre><code>&lt;代码写在这&gt;\n</code></pre></li>\n</ul>\n<p>当然，项目列表很可能会不小心产生，像是下面这样的写法：</p>\n<pre><code>1986. What a great season.\n</code></pre><p>效果：</p>\n<ol>\n<li>What a great season.</li>\n</ol>\n<p>换句话说，也就是在行首出现<em>数字-句点-空白</em>，要避免这样的状况，你可以在句点前面加上反斜杠。</p>\n<pre><code>1986\\. What a great season.\n</code></pre><p>效果：</p>\n<p>1986. What a great season.</p>\n<h3 id=\"pre\">代码区块</h3>\n\n<p>要在 Markdown 中建立代码区块很简单，只要简单地缩进 4 个空格或是 1 个制表符就可以，一个代码区块会一直持续到没有缩进的那一行（或是文件结尾）。例如，下面的输入：</p>\n<pre><code>这是一个普通段落：\n\n    这是一个代码区块。\n</code></pre><p>效果：</p>\n<p>这是一个普通段落：</p>\n<pre><code>这是一个代码区块。\n</code></pre><h3 id=\"hr\">段落和换行</h3>\n\n<p>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。</p>\n<h3 id=\"link\">链接</h3>\n\n<p>Markdown 支持两种形式的链接语法： <em>行内式</em> 和 <em>参考式</em> 两种形式。</p>\n<p>不管是哪一种，链接文字都是用 [方括号] 来标记。</p>\n<p>要建立一个 <em>行内式</em> 的链接，只要在方块括号后面紧接着圆括号并插入网址链接即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可，例如：</p>\n<pre><code>This is [an example](http://example.com/ &quot;Title&quot;) inline link.\n\n[This link](http://example.net/) has no title attribute.\n</code></pre><p>会产生：</p>\n<pre><code>&lt;p&gt;This is &lt;a href=&quot;http://example.com/&quot; title=&quot;Title&quot;&gt;\n    an example&lt;/a&gt; inline link.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://example.net/&quot;&gt;This link&lt;/a&gt; has no\n    title attribute.&lt;/p&gt;\n</code></pre><p>如果你是要链接到同样主机的资源，你可以使用相对路径：</p>\n<pre><code>See my [About](/about/) page for details.\n</code></pre><p><em>参考式</em> 的链接是在链接文字的括号后面再接上另一个方括号，而在第二个方括号里面要填入用以辨识链接的标记：</p>\n<pre><code>This is [an example][id] reference-style link.\n</code></pre><p>你也可以选择性地在两个方括号中间加上一个空格：</p>\n<pre><code>This is [an example] [id] reference-style link.\n</code></pre><p>接着，在文件的任意处，你可以把这个标记的链接内容定义出来：</p>\n<pre><code>[id]: http://example.com/  &quot;Optional Title Here&quot;\n</code></pre><p>链接内容定义的形式为：</p>\n<ul>\n<li>方括号（前面可以选择性地加上至多三个空格来缩进），里面输入链接文字</li>\n<li>接着一个冒号</li>\n<li>接着一个以上的空格或制表符</li>\n<li>接着链接的网址</li>\n<li>选择性地接着 title 内容，可以用单引号、双引号或是括弧包着</li>\n</ul>\n<p>下面这三种链接的定义都是相同：</p>\n<pre><code>[foo]: http://example.com/  &quot;Optional Title Here&quot;\n[foo]: http://example.com/  &apos;Optional Title Here&apos;\n[foo]: http://example.com/  (Optional Title Here)\n</code></pre><p><strong>请注意：</strong>有一个已知的问题是 Markdown.pl 1.0.1 会忽略单引号包起来的链接 title。</p>\n<p>链接网址也可以用尖括号包起来：</p>\n<pre><code>[id]: &lt;http://example.com/&gt;  &quot;Optional Title Here&quot;\n</code></pre><p>你也可以把 title 属性放到下一行，也可以加些缩进，若网址太长的话，这样会比较好看：</p>\n<pre><code>[id]: http://example.com/longish/path/to/resource/here\n        &quot;Optional Title Here&quot;\n</code></pre><p>网址定义只有在产生链接的时候用到，并不会直接出现在文件之中。</p>\n<p>链接辨别标签可以有字母、数字、空白和标点符号，但是并 <em>不</em> 区分大小写，因此下面两个链接是一样的：</p>\n<pre><code>[link text][a]\n[link text][A]\n</code></pre><p><em>隐式链接标记</em> 功能让你可以省略指定链接标记，这种情形下，链接标记会视为等同于链接文字，要用隐式链接标记只要在链接文字后面加上一个空的方括号，如果你要让 “Google” 链接到 google.com，你可以简化成：</p>\n<pre><code>[Google][]\n</code></pre><p>然后定义链接内容：</p>\n<pre><code>[Google]: http://google.com/\n</code></pre><p>由于链接文字可能包含空白，所以这种简化型的标记内也许包含多个单词：</p>\n<pre><code>Visit [Daring Fireball][] for more information.\n然后接着定义链接：\n\n[Daring Fireball]: http://daringfireball.net/\n</code></pre><p>链接的定义可以放在文件中的任何一个地方，我比较偏好直接放在链接出现段落的后面，你也可以把它放在文件最后面，就像是注解一样。</p>\n<p>下面是一个参考式链接的范例：</p>\n<pre><code>I get 10 times more traffic from [Google] [1] than from\n    [Yahoo] [2] or [MSN] [3].\n\n    [1]: http://google.com/        &quot;Google&quot;\n    [2]: http://search.yahoo.com/  &quot;Yahoo Search&quot;\n    [3]: http://search.msn.com/    &quot;MSN Search&quot;\n</code></pre><p>如果改成用链接名称的方式写：</p>\n<pre><code>I get 10 times more traffic from [Google][] than from\n    [Yahoo][] or [MSN][].\n\n    [google]: http://google.com/        &quot;Google&quot;\n    [yahoo]:  http://search.yahoo.com/  &quot;Yahoo Search&quot;\n    [msn]:    http://search.msn.com/    &quot;MSN Search&quot;\n</code></pre><p>上面两种写法都会产生下面的 HTML。</p>\n<pre><code>&lt;p&gt;I get 10 times more traffic from &lt;a href=&quot;http://google.com/&quot;\n    title=&quot;Google&quot;&gt;Google&lt;/a&gt; than from\n    &lt;a href=&quot;http://search.yahoo.com/&quot; title=&quot;Yahoo Search&quot;&gt;Yahoo&lt;/a&gt;\n    or &lt;a href=&quot;http://search.msn.com/&quot; title=&quot;MSN Search&quot;&gt;MSN&lt;/a&gt;.&lt;/p&gt;\n</code></pre><p>下面是用行内式写的同样一段内容的 Markdown 文件，提供作为比较之用：</p>\n<pre><code>I get 10 times more traffic from [Google](http://google.com/ &quot;Google&quot;)\n    than from [Yahoo](http://search.yahoo.com/ &quot;Yahoo Search&quot;) or\n    [MSN](http://search.msn.com/ &quot;MSN Search&quot;).\n</code></pre><p>参考式的链接其实重点不在于它比较好写，而是它比较好读，比较一下上面的范例，使用参考式的文章本身只有 81 个字符，但是用行内形式的却会增加到 176 个字元，如果是用纯 HTML 格式来写，会有 234 个字元，在 HTML 格式中，标签比文本还要多。</p>\n<p>使用 Markdown 的参考式链接，可以让文件更像是浏览器最后产生的结果，让你可以把一些标记相关的元数据移到段落文字之外，你就可以增加链接而不让文章的阅读感觉被打断。</p>\n<h3 id=\"em\">强调</h3>\n\n<p>Markdown 使用星号（<code>*</code>）和底线（<code>_</code>）作为标记强调字词的符号，被 <code>*</code> 或 <code>_</code> 包围的字词会被转成用 <code>&lt;em&gt;</code> 标签包围，用两个 <code>*</code> 或 <code>_</code> 包起来的话，则会被转成 <code>&lt;strong&gt;</code></p>\n<p>但是<strong>如果你的 <code>*</code> 和 <code>_</code> 两边都有空白的话，它们就只会被当成普通的符号</strong>。</p>\n<p>如果要在文字前后直接插入普通的星号或底线，你可以用反斜线：</p>\n<h3 id=\"code\">代码</h3>\n\n<p>如果要在代码区段内插入反引号，你可以用多个反引号来开启和结束代码区段：</p>\n<pre><code>``There is a literal backtick (`) here.``、\n</code></pre><p>效果：</p>\n<p><code>There is a literal backtick (`) here.</code>、</p>\n<h3 id=\"img\">图片</h3>\n\n<p>Markdown 标记图片允许两种样式： <em>行内式</em> 和 <em>参考式</em>。</p>\n<p>行内式的图片语法看起来像是：</p>\n<pre><code>![Alt text](/path/to/img.jpg)\n\n![Alt text](/path/to/img.jpg &quot;Optional title&quot;)\n</code></pre><p>详细叙述如下：</p>\n<ul>\n<li>一个惊叹号 <code>!</code></li>\n<li>接着一个方括号，里面放上图片的替代文字</li>\n<li>接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上<br>选择性的 ‘title’ 文字。</li>\n</ul>\n<p>参考式的图片语法则长得像这样：</p>\n<pre><code>![Alt text][id]\n</code></pre><p>「id」是图片参考的名称，图片参考的定义方式则和连结参考一样：</p>\n<pre><code>[id]: url/to/image  &quot;Optional title attribute&quot;\n</code></pre><h3 id=\"autolink\">自动链接</h3>\n\n<p>Markdown 支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用尖括号包起来， Markdown 就会自动把它转成链接。一般网址的链接文字就和链接地址一样</p>\n<pre><code>&lt;http://example.com/&gt;\n</code></pre><p>Markdown 会转为：</p>\n<pre><code>&lt;a href=&quot;http://example.com/&quot;&gt;http://example.com/&lt;/a&gt;\n</code></pre><p>电子邮件地址：</p>\n<pre><code>&lt;address@example.com&gt;\n</code></pre><p>Markdown 会转成：</p>\n<pre><code>&lt;a href=&quot;&amp;#x6D;&amp;#x61;i&amp;#x6C;&amp;#x74;&amp;#x6F;:&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;\n&amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;\n&amp;#109;&quot;&gt;&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;&amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;\n&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;&amp;#109;&lt;/a&gt;\n</code></pre><p>在浏览器里面，这段字串（其实是   <code>&lt;a href=&quot;mailto:address@example.com&quot;&gt; address@example.com &lt;/a&gt;</code>）会变成一个可以点击的「address@example.com」链接。</p>\n<h2 id=\"gfm\">GitHub 风格的 Markdown 语法</h2>\n\n\n\n<h3 id=\"autolink-gfm\">链接自动识别</h3>\n\n<p>传统 Markdown 自动识别链接需要在链接上用一对尖括号闭合，而 GFM 只需要输入链接即自动识别。Email 地址亦是。</p>\n<h3 id=\"fenced\">围栏式代码块</h3>\n\n<p>传统 Markdown 使用 4 个空格缩进将文本转换为代码块，GFM 支持在代码块前后加三个反引号 ```，而且还可以在代码块前加上语言类型标识，Github 会自动识别语言，给语法着色、代码加亮。</p>\n<p>例如：</p>\n<pre><code><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alet(<span class=\"string\">\"Hello world!\"</span>);</span><br></pre></td></tr></table></figure>\n</code></pre><h3 id=\"task-lists\">任务清单</h3>\n\n<p>列表可被转换为任务清单，只需要为列表项的开头加上 <code>[ ]</code> 或 <code>[x]</code> 即可（分别表示未完成和已完成）。</p>\n<pre><code>- [x] @mentions, #refs, [links](), **formatting**, and &lt;del&gt;tags&lt;/del&gt; supported\n- [x] list syntax required (any unordered or ordered list supported)\n- [x] this is a complete item\n- [ ] this is an incomplete item\n\n\n- [x] 支持 @提到某人、#引用、[链接]()、**格式化** 和 &lt;del&gt;标签&lt;/del&gt; 等语法\n- [x] 需要使用列表语法来激活（无序或有序列表均可）\n- [x] 这是一个已完成项目\n- [ ] 这是一个未完成项目\n</code></pre><p><img src=\"http://paddingme.qiniudn.com/markdown.gif\" alt=\"\"></p>\n<p>这个特性会在 Issue 和 Pull Request 的描述和评论中启用。任务清单同样可用于 Gist 的评论和 Markdown 格式的 Gist。在这些场合，任务清单将渲染出复选框，供勾选或清除。</p>\n<h3 id=\"at\">@</h3>\n\n<p>按下 @ 符号将弹出一个列表，列出这个项目相关的人或团队,即 @ 提到人名或团队名时的自动补全。这个列表会随着你的输入不断匹配筛选，因此一旦你在列表中发现了你要找的人名或团队名，你就可以用方向键来选中它，然后按回车或 tab 键来补全。对于团队来说，只需要输入 @组织名/团队名，那么团队内的所有成员都将收到提醒。</p>\n<p>列表的匹配范围仅限制在当前仓库的贡献者以及当前讨论的参与者，因此它并不是一个全局性的搜索。它和文件查找器使用相同的模糊筛选算法，并且同时适用于用户名和全名。</p>\n<h3 id=\"emoji\">Emoji</h3><br>按下 : 将会弹出一个表情符号的建议列表。这个列表会随着你的输入不断匹配筛选，因此一旦你在列表中发现了你要找的表情符号，你就可以按回车或 tab 键来补全当前高亮的那一项。<br><br>更多的 emoji 表情 可以猛击 <a href=\"http://www.emoji-cheat-sheet.com/\" target=\"_blank\" rel=\"external\">EMOJI CHEAT SHEET</a>。<br><br><h3 id=\"table\">table</h3>\n\n<p>你可以使用若干列文字并于第一行下面用转折号-分开它们，然后用管道符|隔开每一列：</p>\n<pre><code>First Header  | Second Header\n------------- | -------------\nContent Cell  | Content Cell\nContent Cell  | Content Cell\n</code></pre><p>为了看上去美观，你也可以在两端加上额外的管道符：</p>\n<pre><code>| First Header  | Second Header |\n| ------------- | ------------- |\n| Content Cell  | Content Cell  |\n| Content Cell  | Content Cell  |\n</code></pre><p>注意顶部的虚线不需要准确匹配表头文本的长度：</p>\n<pre><code>| Name | Description          |\n| ------------- | ----------- |\n| Help      | Display the help window.|\n| Close     | Closes a window     |\n</code></pre><p>你也可以在其中包括内联 Markdown 元素，比如链接，加粗，斜体或删除</p>\n<pre><code>| Name | Description          |\n| ------------- | ----------- |\n| Help      | ~~Display the~~ help window.|\n| Close     | _Closes_ a window     |\n</code></pre><p>最后，通过在表头行加入冒号:，你可以决定文本是左对齐，右对齐，还是居中：</p>\n<pre><code>| Left-Aligned  | Center Aligned  | Right Aligned |\n| :------------ |:---------------:| -----:|\n| col 3 is      | some wordy text | $1600 |\n| col 2 is      | centered        |   $12 |\n| zebra stripes | are neat        |    $1 |\n</code></pre><p>一个在最左边的冒号表示一个左对齐的列；一个在最右边的冒号表示一个右对齐的列；两边都有的冒号表示一个居中的列。</p>\n<h3 id=\"del\">强调</h3>\n\n<p>用在字母中间放一条线来强调文字 可使用</p>\n<pre><code>~~this~~\n</code></pre><p>效果为</p>\n<p><del>this</del></p>\n<h2 id=\"layout\">一些和排版有关的资源</h2>\n\n<ul>\n<li><a href=\"https://ruby-china.org/topics/14005\" target=\"_blank\" rel=\"external\">Web 中文字体应用指南</a></li>\n<li><a href=\"http://zhuanlan.zhihu.com/FrontendMagazine/19891152\" target=\"_blank\" rel=\"external\">中文排版的最佳实践</a></li>\n<li><p><a href=\"https://github.com/zmmbreeze/Entry.css/\" target=\"_blank\" rel=\"external\">Entry.css</a></p>\n<blockquote>\n<p>Customizable and readable less library for Chinese text. 一个可配置的、更适合阅读的中文文章样式库</p>\n</blockquote>\n</li>\n<li><p><a href=\"https://github.com/sofish/typo.css\" target=\"_blank\" rel=\"external\">typo.css </a></p>\n<blockquote>\n<p>中文网页重设与排版：一致化浏览器排版效果，构建最适合中文阅读的网页排版</p>\n</blockquote>\n</li>\n<li><p><a href=\"https://github.com/lepture/yue.css\" target=\"_blank\" rel=\"external\">yue.css</a></p>\n<blockquote>\n<p>A typography stylesheet for readable content</p>\n</blockquote>\n</li>\n<li><p><a href=\"https://github.com/sparanoid/chinese-copywriting-guidelines\" target=\"_blank\" rel=\"external\">chinese-copywriting-guidelines</a></p>\n<blockquote>\n<p>Chinese Copywriting Guidelines：中文文案排版指北</p>\n</blockquote>\n</li>\n<li><p><a href=\"https://github.com/ethantw/Han\" target=\"_blank\" rel=\"external\">Han.css</a></p>\n<blockquote>\n<p>「漢字標準格式」印刷品般的漢字排版框架 Han.css: the CSS typography framework optimised for Hanzi.</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"acknowledgement\">参考文章</h2>\n\n<ul>\n<li><a href=\"http://wowubuntu.com/markdown/\" target=\"_blank\" rel=\"external\">http://wowubuntu.com/markdown/</a></li>\n<li><a href=\"https://github.com/cssmagic/blog/issues/13\" target=\"_blank\" rel=\"external\">https://github.com/cssmagic/blog/issues/13</a></li>\n<li><a href=\"https://help.github.com/articles/github-flavored-markdown/\" target=\"_blank\" rel=\"external\">https://help.github.com/articles/github-flavored-markdown/</a></li>\n<li><a href=\"https://guides.github.com/features/mastering-markdown/\" target=\"_blank\" rel=\"external\">https://guides.github.com/features/mastering-markdown/</a></li>\n<li><a href=\"https://guides.github.com/features/mastering-markdown/\" target=\"_blank\" rel=\"external\">https://guides.github.com/features/mastering-markdown/</a></li>\n</ul>\n<!--\n1. 大 V 都在 学 Markdown 你还在干嘛？\n2. markdown 之 传统语法\n - http://wowubuntu.com/markdown/\n3. github markdown 语法\n4. 各平台为啥 markdown 不一样呢（github，sf.gg，html-js，以及 W3CTech（不支持表格嵌套））\n5. 一些和文字，排版有关系的东西。\n-->\n"},{"title":"《2014年CSS报告——考察如何使用CSS》","url":"http://padding.me/blog/2015/01/13/《2014年CSS报告——考察如何使用CSS》/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/DailyReading\" target=\"_blank\" rel=\"external\">DailyReading</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/DailyReading/issues/1\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/DailyReading/issues/1</a></p>\n<h2 id=\"2014年CSS报告——考察如何使用CSS\"><a href=\"#2014年CSS报告——考察如何使用CSS\" class=\"headerlink\" title=\"2014年CSS报告——考察如何使用CSS\"></a><a href=\"http://www.w3cplus.com/css/the-2014-css-report.html\" target=\"_blank\" rel=\"external\">2014年CSS报告——考察如何使用CSS</a></h2><ol>\n<li><p>不要使用 * 和 _ 来 hack 而应该使用 IE 条件样式：  </p>\n<blockquote>\n<p>我看见许多年长的前辈们还是在使用 *和_这样的浏览器Hack来解决IE某些版本的兼容问题。早在2008年Paul Lrish就提出替代方案，即使用IE条件样式来替代这些Hack。而在当你赶时间的时候，很容易忽略这些方法，以至于*和_这样的Hack持续在使用。<br>条件注释只能用于IE5以上。如果安装了多个 IE，条件注释将会以最高版本的IE为标准。条件注释的基本结构和 HTM L的注释(&lt;!– –&gt;)是一样的。因此 IE 以外的浏览器将会把它们看作是普通的，注释而完全忽略它们。</p>\n</blockquote>\n<p>IE 将会根据 if 条件来判断是否如解析普通的页面内容一样解析条件注释里的内容。</p>\n<ul>\n<li>gt : greater than，选择条件版本以上版本，不包含条件版本</li>\n<li>lt : less than，选择条件版本以下版本，不包含条件版本</li>\n<li>gte : greater than or equal，选择条件版本以上版本，包含条件版本</li>\n<li>lte : less than or equal，选择条件版本以下版本，包含条件版本</li>\n<li>! : 选择条件版本以外所有版本，无论高低</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--[if IE 5]&gt;仅IE5.5可见&lt;![endif]--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--[if gt IE 5.5]&gt;仅IE 5.5以上可见&lt;![endif]--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--[if lt IE 5.5]&gt;仅IE 5.5以下可见&lt;![endif]--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--[if gte IE 5.5]&gt;IE 5.5及以上可见&lt;![endif]--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--[if ite IE 5.5]&gt;IE 5.5及以下可见&lt;![endif]--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--[if !IE 5.5]&gt;非IE 5.5的IE可见&lt;![endif]--&gt;</span></span><br></pre></td></tr></table></figure>\n<p>以上这些条件注释里的内容，在非IE浏览器只是作为一般的注释语句，不会显示出来的，<br>如果想要条件注释里的内容，在非IE浏览器中也能显示出来，而且在IE浏览器中根据条件注释的判断条件来显示出来，看下面的代码：<br>下面的代码是在非IE浏览器下运行的条件注释</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--[if !IE]&gt;&lt;!--&gt;</span>您使用不是 Internet Explorer<span class=\"comment\">&lt;!--&lt;![endif]--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--[if IE 6]&gt;&lt;!--&gt;</span>您正在使用Internet Explorer version 6或者 一个非IE 浏览器<span class=\"comment\">&lt;!--&lt;![endif]--&gt;</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>摘自<a href=\"http://www.ipmtea.net/css_ie_firefox/201006/21_26.html\" target=\"_blank\" rel=\"external\">IE中的条件判断注释，判断浏览器版本类型</a></p>\n</blockquote>\n</li>\n<li><p>z-index 最低的值应该小于999999更为合理。</p>\n</li>\n<li><p>颜色最常用的是 bootstrap 的 <code>papayawhip</code> 还有些常用的颜色名：<br>antiquewhite, azure, olive, bisque, aliceblue, lightsteelblue, blueviolet, firebrick, lightskyblue, lightseagreen, darkorange, seashell, ghostwhite, papayawhip, cornsilk, navajowhite。作者最喜欢的是 papayawhip，让人赏心悦目。</p>\n</li>\n</ol>\n<p>参考：</p>\n<ul>\n<li><a href=\"http://www.w3cplus.com/css/the-2014-css-report.html\" target=\"_blank\" rel=\"external\">http://www.w3cplus.com/css/the-2014-css-report.html</a></li>\n<li><a href=\"http://www.ipmtea.net/css_ie_firefox/201006/21_26.html\" target=\"_blank\" rel=\"external\">http://www.ipmtea.net/css_ie_firefox/201006/21_26.html</a></li>\n</ul>\n"},{"title":"IE7,IE6关于position：relative bug的处理","url":"http://padding.me/blog/2014/12/30/IE7,IE6关于position：relative bug的处理/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-HTML-CSS\" target=\"_blank\" rel=\"external\">Learning-HTML-CSS</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-HTML-CSS/issues/31\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-HTML-CSS/issues/31</a></p>\n<p><a href=\"http://blog.sina.com.cn/s/blog_5de5c1c00100m9ov.html\" target=\"_blank\" rel=\"external\">http://blog.sina.com.cn/s/blog_5de5c1c00100m9ov.html</a></p>\n"},{"title":"w3ctech 小米前端技术感受心得","url":"http://padding.me/blog/2014/12/27/some-touch-after-front-end-tech-share-in-Xiaomi/","content":"<p>为了不被 <a href=\"http://www.w3ctech.com/\" target=\"_blank\" rel=\"external\">w3ctech</a> 拉黑，特意撰此流水账一篇，毫无干货(fuck things)，看官权当一笑。</p>\n<h2 id=\"废话开篇\"><a href=\"#废话开篇\" class=\"headerlink\" title=\"废话开篇\"></a>废话开篇</h2><p>2014年12月20日 天气阴</p>\n<p>大概在两周之前在微博看见了 w3ctech 走进名企 2014年 最后一季 『走进小米前端专场』预报名，看了下有 HTML5，CSS3，有代码规范、质量，及 Mobile 开发, 恩？这一场特别适合我的样子，全部都是我能听懂想深入了解的东西的呢, 尤其是 HTML5，CSS3，而且小米在清河，离西二旗很近。报名，报名，报名！</p>\n<p>期间 w3ctech 两次发来邮件确认是否参加，第二次是因为场地变更。不得不赞， w3ctech 之用心。</p>\n<p>在连续加了两周的班之后，已经感觉到自己精神恍惚，终于迎来一个一觉自然醒的周末，在这之前又报名了羽毛球群里组织的活动。羽毛球？w3ctech？到底是听从身体的召唤还是技术的召唤呢？是在球场上体力不支做猪队友，还是在小米精神恍惚感受技术的熏陶？最后还是和群里的小伙伴们请了假，接受 w3ctech 的感召！</p>\n<p>于是在一觉自然醒之后，吭哧吭哧背上双肩包，穿上码农套装，在平坦的道路上一步两步，一步两步，摩擦摩擦。虽然天气阴沉沉的，但公交车看起来很高兴的样子，大周末的完全没有堵车的意思。到了清河，艾玛，小米总基到底在哪儿？我面对着一栋栋高楼大厦，在人群中穿梭，感受着北京 12 月丝毫不留情面的寒风，45 度仰望天空，阳光打在我的脸上（嗯？好像没有阳光，这不重要），叫天天不应，叫地地不灵，于是我只好打开了百度地图，打开了高德地图，打开了谷歌地图，穿过了大街小巷，穿越了工地、垃圾场，『跋山涉水』，尘土飞扬，一路颠簸。恩，我甚至还开启了语音指路。终于辗转到了小米总基门前。伴随着脑补的『我曾经跨过山和大海，也穿过人山人海<br>我曾经问遍整个世界，终于来到了小米』。</p>\n<p>登记之后一个不小心冲入了 B2 小米餐厅，竟然还有很多小米的同学在吃午饭，看上去很高大上的样子，B1 办公区灯火通明，小米的同学们一个个屏幕前安静的忙碌着。嗯，今天不是周末？又走了会迷宫，终于来到了 <a href=\"http://www.weibo.com/itchina100\" target=\"_blank\" rel=\"external\">波大</a> 前，电脑上输入邮箱签到之后，终于入场了。</p>\n<h2 id=\"四个分享\"><a href=\"#四个分享\" class=\"headerlink\" title=\"四个分享\"></a>四个分享</h2><p>这场小米分享有四个演讲：</p>\n<ul>\n<li>路由器中的前端开发（张建斌）<ul>\n<li>主要讲述前端工程师如何与硬件接合，路由操作系统中如何搭建前端环境，和服务器前端开发的区别，如何国际化开发。（<a href=\"http://feppt.qiniudn.com/router.pdf\" target=\"_blank\" rel=\"external\">PPT下载戳这里</a>）</li>\n</ul>\n</li>\n<li>控制多人合作时的代码风格和质量 （陈晓东）<ul>\n<li>通过在开发的过程中集成类似 jshint, jscs 这样的语法检查工具保障代码质量和统一代码风格。（<a href=\"http://feppt.qiniudn.com/%E5%89%8D%E7%AB%AF%E5%B7%A5%E4%BD%9C%E6%B5%81.pdf\" target=\"_blank\" rel=\"external\">PPT下载戳这里</a>）</li>\n</ul>\n</li>\n<li>小米黄页 HTML5 &amp;&amp; native 之路 (余鹏)<ul>\n<li>小米黄页如何预置，离线访问是怎么回事，小米黄页 webview 提供哪些功能。 （<a href=\"http://feppt.qiniudn.com/w3c-12.20%20%E5%88%86%E4%BA%AB_%E4%BD%99%E9%B9%8Fppt.pdf\" target=\"_blank\" rel=\"external\">PPT下载戳这里</a>）</li>\n</ul>\n</li>\n<li>HTML5&amp;CSS 新特性和在小米网的应用 (孙星繁)<ul>\n<li>随着 H5 的定稿与 CSS 的发展，越来越多的网站加入更加友好、炫丽的交互效果。本节将分享一些在小米网的发展过程中经历的新技术实践，以及在未来的发展中应用新特性可能性。（<a href=\"http://feppt.qiniudn.com/MIFE-2014-PPT.7z\" target=\"_blank\" rel=\"external\">PPT下载戳这里</a>）</li>\n</ul>\n</li>\n</ul>\n<p>分别说下听这四个分享我的一些感受：</p>\n<ol>\n<li>路由器中的前端开发，从我这只菜鸟的角度来看，分享的就是如何把前端代码塞进路由器里，一堆配置踩坑，不过还是挺有意思的。</li>\n<li>陈晓东前辈分享的『控制多人合作时的代码风格和质量』 主要介绍了在多人合作中为了统一代码风格和保证代码质量，先后使用的一些工具，主要是分享现在使用的两个工具：<ul>\n<li><a href=\"https://github.com/observing/pre-commit\" target=\"_blank\" rel=\"external\">pre-commit</a>   代码提交之前强制检查，不符合规范则不能提交。 pre-commit 也可以 只检查当前修改的文件，这样可以先不对旧的代码进行强制检查。</li>\n<li><a href=\"https://github.com/yeoman/grunt-usemin\" target=\"_blank\" rel=\"external\">grunt-usemin</a>   对静态资源打包压缩。</li>\n</ul>\n</li>\n<li>余鹏前辈分享的小米黄页涉及到移动端，尚未涉猎，听得昏昏欲睡。</li>\n<li><p>终于等到了压轴的 <a href=\"http://www.weibo.com/1979846461/BBLqz855r\" target=\"_blank\" rel=\"external\">我繁子哥</a> 的 HTML5&amp;CSS 的分享。帅气的 PPT，不时调侃下产品汪和设计师，当然这些不重要，重要的是 HTML5&amp;CSS 的干货太多，感觉到腹中隐隐作痛，有点消化不良的感觉，于是只好拿出了小黑本，做了点笔记，现在已经有了 <a href=\"http://feppt.qiniudn.com/MIFE-2014-PPT.7z\" target=\"_blank\" rel=\"external\">幻灯片</a> 。这段时间一直在做动画，动画的讲解让我有点醍醐灌顶，茅塞顿开的赶脚,以后可以尝试用 requestAnimationFrame 做动画特效等等。</p>\n<ul>\n<li>目前主流的动画实现方式<ul>\n<li>jQuery Animate（setInterval）：易用，低效，兼容好；</li>\n<li>CSS Transition：硬件加速、移动端兼容，高效；</li>\n<li>requestAnimationFrame：易用，充分发挥浏览器性能。</li>\n</ul>\n</li>\n<li><p>特点比较</p>\n<p>||jQuery|CSS Transitions|JavaScript Animation|<br>|—||—|—|—|—|—|<br>|性能  |Bad |Good   | Good<br>|效果 | Not| bad Not| bad Good<br>|功能 | Good   | Not bad| Good<br>|兼容 | Good   | Bad IE10+ |  Good IE10+<br>| |避免使用|    简单交互 |   复杂交互</p>\n</li>\n<li><p>交互中提到了 <strong>APNG</strong> 并比较了gif、apng 和 png sprite。</p>\n<p>| |gif| apng|    png sprite|<br>|—|—|—|—|<br>|颜色  |256| 24位 |24位|<br>|透明度 |索引透明，有毛边|    Alpha 透明 |   Alpha 透明|<br>|尺寸 | 中  | 小  | 大|<br>|兼容  |Good  |  IE9+  |  IE7+|<br>| |底色固定 |   可降级| 兼容|</p>\n</li>\n<li><p>还提到了造轮子的问题——有适合自己使用的好轮子直接使用，不适合的轮子才再造一个，这个观点非常同意，现在很多公司都是为了造轮子而造轮子，感觉没什么必要。</p>\n<p>w3ctech 的小伙伴向我推荐了 <a href=\"http://www.w3ctech.com/event/31\" target=\"_blank\" rel=\"external\">360前端技术专场</a> 中 <a href=\"http://weibo.com/u/2103102591\" target=\"_blank\" rel=\"external\">黄薇</a> 的『Web高性能动画』,PPT <a href=\"http://melonhuang.github.io/sharing/slides.html?file=high_performance_animation\" target=\"_blank\" rel=\"external\">在这里</a>，视频 <a href=\"http://v.youku.com/v_show/id_XNzQ4MDE3ODQw.html\" target=\"_blank\" rel=\"external\">在这里</a>。</p>\n<p>再一次，更多的内容请详细看网页ppt，需下载 <a href=\"http://feppt.qiniudn.com/MIFE-2014-PPT.7z\" target=\"_blank\" rel=\"external\">源文件</a>。</p>\n</li>\n</ul>\n</li>\n</ol>\n<p>这次分享获益最多的当然要属 HTML5&amp;CSS 的分享，这是和我目前所接触的联系最密切的东西，的确 get 到了不少新技能，长了很多见识，受益颇多，希望明年可以继续参加更多这样的分享，get 到更多干货。=.=</p>\n<h2 id=\"废话结篇\"><a href=\"#废话结篇\" class=\"headerlink\" title=\"废话结篇\"></a>废话结篇</h2><p>在听完最后一个分享之后，正饿的肚皮朝天，准备出去大吃一顿，就着火锅将这些干货慢慢消化，<br>加上 N 次抽奖之后，连我特想被抽中的那本《 Sass 与 Compass 实战》的机会也没有了，什么小米手环，小米手机就算了吧，既然已经不能靠脸吃饭了，连靠运气吃饭的机会也渐渐泯灭了。恩，还是回去多啃点书当饭吃吧。正准备收拾包，起身离开，一抬头，屏幕上定格的数字似乎有点熟悉，咦，这是我的号码！啊，感觉就在此刻，此时，此地，上帝选择了我。只有一个感觉——难以置信。完全蒙圈了。直愣愣的上台接过波大手中的米4。然后波大让我说点什么。额，感谢 CCTV，MTV，LETV，MiTV 什么的我一点儿也想不起来了，反正就是蒙圈了。语无伦次的说了些有的没的。然后现在还有点没醒过来的样子。</p>\n<blockquote>\n<p>我知道，所有没通过努力的得到都不是我应得的。</p>\n</blockquote>\n<p>谢谢 w3ctech，小米公司。<br>谢谢学前端这大半年各路大神、同学的带领、指引和帮助。</p>\n<p>ps: 这半年来参加了很多前端分享，得到了很多帮助和给予。一直有想为前端同学们做点自己力所能及的事。借米4的机会，在元旦，我的微博里 <a href=\"http://weibo.com/1794125864/BDxWO45l3\" target=\"_blank\" rel=\"external\">赠送10本前端书籍</a> 给大家，<a href=\"http://weibo.com/1794125864/BDTw6t9IM\" target=\"_blank\" rel=\"external\">已经赠送完毕</a>。<br>祝大家 2015 越来越好。</p>\n"},{"title":"关于字体，排版等资料","url":"http://padding.me/blog/2014/12/19/关于字体，排版等资料/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-HTML-CSS\" target=\"_blank\" rel=\"external\">Learning-HTML-CSS</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-HTML-CSS/issues/29\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-HTML-CSS/issues/29</a></p>\n<ul>\n<li><a href=\"https://ruby-china.org/topics/14005\" target=\"_blank\" rel=\"external\">Web 中文字体应用指南</a></li>\n<li><a href=\"http://zhuanlan.zhihu.com/FrontendMagazine/19891152\" target=\"_blank\" rel=\"external\">中文排版的最佳实践</a></li>\n<li><p><a href=\"https://github.com/zmmbreeze/Entry.css/\" target=\"_blank\" rel=\"external\">Entry.css</a></p>\n<blockquote>\n<p>Customizable and readable less library for Chinese text. 一个可配置的、更适合阅读的中文文章样式库</p>\n</blockquote>\n</li>\n<li><p><a href=\"https://github.com/sofish/typo.css\" target=\"_blank\" rel=\"external\">typo.css </a></p>\n<blockquote>\n<p>中文网页重设与排版：一致化浏览器排版效果，构建最适合中文阅读的网页排版</p>\n</blockquote>\n</li>\n<li><p><a href=\"https://github.com/lepture/yue.css\" target=\"_blank\" rel=\"external\">yue.css</a></p>\n<blockquote>\n<p>A typography stylesheet for readable content</p>\n</blockquote>\n</li>\n<li><p><a href=\"https://github.com/sparanoid/chinese-copywriting-guidelines\" target=\"_blank\" rel=\"external\">chinese-copywriting-guidelines</a></p>\n<blockquote>\n<p>Chinese Copywriting Guidelines：中文文案排版指北</p>\n</blockquote>\n</li>\n<li><p><a href=\"https://github.com/ethantw/Han\" target=\"_blank\" rel=\"external\">Han.css</a></p>\n<blockquote>\n<p>「漢字標準格式」印刷品般的漢字排版框架 Han.css: the CSS typography framework optimised for Hanzi.</p>\n</blockquote>\n</li>\n<li><p><a href=\"http://get.jobdeer.com/6352.get/\" target=\"_blank\" rel=\"external\">簡單做好中文排版 </a> </p>\n</li>\n<li><p><a href=\"http://zhuanlan.zhihu.com/FrontendMagazine/19891152\" target=\"_blank\" rel=\"external\">中文排版的最佳实践</a></p>\n<blockquote>\n<p>上篇文字是繁体版，这篇文字是简体版。</p>\n</blockquote>\n</li>\n<li><p><a href=\"https://docs.google.com/document/d/1R8lMCPf6zCD5KEA8ekZ5knK77iw9J-vJ6vEopPemqZM/\" target=\"_blank\" rel=\"external\">豌豆荚文案要求</a></p>\n<blockquote>\n<p>google doc 不知道是否能打开了。</p>\n</blockquote>\n</li>\n</ul>\n<!-- - [对于 CSS 的「font-family」，浏览器是通过字体的哪个名称进行匹配的？](http://www.zhihu.com/question/20161818/answer/14179197) -->\n<ul>\n<li><a href=\"http://fuxiaopang.cn/the-complete-beginners-guide-to-chinese-fonts/\" target=\"_blank\" rel=\"external\">中文字体新手指南</a></li>\n</ul>\n"},{"title":"【JavaScript】【学习心得】学习JavaScript 第二十三天","url":"http://padding.me/blog/2014/12/09/【JavaScript】【学习心得】学习JavaScript 第二十三天/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-JavaScript\" target=\"_blank\" rel=\"external\">Learning-JavaScript</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-JavaScript/issues/25\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-JavaScript/issues/25</a></p>\n<p>昨天主要学习JavaScript的语法,先列出觉得重要的地方：</p>\n<ul>\n<li>===(严格相等运算符)首先计算其操作数的值，再进行比较，比较过程中无任何类型转换，JS的对象比较是引用比较非值比较，对象只和对象本身相等，和任何其他对象不等；</li>\n<li>==（相等运算符）null和undefined相等，其他不同的操作数比较时，有number转为number,有boolean也转为number,有string的转string再进行比较，看是否相等。对象互相不等，NaN互相不相等；</li>\n<li>JS依赖于全局变量进行连接，所有编译单元的所有级别对象都被抛入全局对象的公共命名空间中。当var语句被用在函数的内部时，他定义了这个函数的私有变量；</li>\n<li>false,null,undefined,空字符串”,数字0,数字NaN都为假，其余皆为真；</li>\n<li>函数调用引发函数的执行，函数调用运算符是跟随在函数名后面的一对圆括号。</li>\n<li>type of 运算符产生的值有‘number’ ‘string’ ‘boolean’ ‘undefined’ ‘function’和’object’（注意都是小写）;而如果运算数是一个数组或null,结果是‘object’是不对的。</li>\n</ul>\n<p>第六条中typeof(null)或typeof(array)(array为一数组)为什么结果是’object’不对呢，查了查书，是因为:</p>\n<p>1.JavaScript本身对于数组和对象的区别很混乱，在区别数组和对象上没有一个很好的机制。typeof运算符报告数组的类型为‘object’没什么意义，可通过自定义is_array来判断是否为数组。<br>2.typeof(null)很糟糕返回的不是null，我们知道JavaScript中有六种数据类型，分别为String,Number,Boolean,Null,Undefined,Object,(另外有些人把Function也作为一种数据类型，这里存在争议，有兴趣的同学可以参考<a src=\"http://blog.csdn.net/aimingoo/article/details/6634977\">《再谈JavaScript的数据类型问题》</a>)进一步理解。更好的检测null的方式应为my_value===null. 那么typeof如何区分对象和null呢，因为null值为假，所有对象值为真，所以可以有：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(my_value&amp;&amp;<span class=\"keyword\">typeof</span> my_value===<span class=\"string\">'object'</span>)&#123;<span class=\"comment\">//my_value是一个对象或数组。&#125;</span></span><br></pre></td></tr></table></figure></p>\n<p>好的，下面进入第三章对象的学习。</p>\n<hr>\n<h2 id=\"第三章-对象\"><a href=\"#第三章-对象\" class=\"headerlink\" title=\"第三章  对象\"></a>第三章  对象</h2><p>JavaScript中简单类型包括数字、字符串、布尔值、null值和undefined，其他所有的值都为对象（数组是对象，函数是对象，正则表达式是对象，对象当然也是对象）。String,Number,Boolean“貌似”对象，因为他们它们有自己的方法，但他们是不可变的。JavaScript中对象是可变的键控组合（keyed collections）（这句话如何理解？）。对象是属性的容器，其中每个属性都拥有名字和数值，属性的名字可是包括空字符串在内的任意字符串，而属性值可是除undefined值之外的任意值。JavaScript中的对象是无类别（class-free）的。即其对新属性的名字和值无约束。对象适合收集和管理数据。对象可以包含其他对象，所以他们可以容易地表示成树形或图形结构。JavaScript包括一个原型链特性，允许对象继承另一个对象的属性，正确的地使用它能减少对象初始化的时间和内存消耗。（后面讨论）</p>\n<h3 id=\"3-1-对象字变量\"><a href=\"#3-1-对象字变量\" class=\"headerlink\" title=\"3.1  对象字变量\"></a>3.1  对象字变量</h3><p>对象字面量提供了一种非常方便地创建新对象值的表示法。一个对象字面量就是包围在一对花括号中的零或多个“名/值”.对象字面量可出现在任何允许表达式出现的地方。<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var empty_object=&#123;&#125;;</span><br><span class=\"line\">  \t\t\t\tvar stooge=&#123;</span><br><span class=\"line\">  \t\t\t\t\"first-name\"=\"Chouchou\",//(注意这里是逗号)</span><br><span class=\"line\">  \t\t\t\t\"last-name=\"Shouchouchou\"//(注意这里没符号！)</span><br><span class=\"line\">                                  &#125;</span><br></pre></td></tr></table></figure></p>\n<p>属性名可以是包括空字符串在内的任何字符串。在对象字面量中，如果属性名是一个合法的JavaScript标识符且不是保留字，并不强制要求用引号括住属性名。所以用引号括住“fisrt-name”是必须的（因为含‘-’这个属性名不是合法的JS标识符，见上一章标识符定义“标示符有一个字母开头，其后可加一个或多个字母、数字或下划线，不允许使用保留字。”），而是否括住first_name才是可选的了。逗号用来分隔多个“名/值”对(原来JSON数据的渊源在这里)。</p>\n<p>属性的值可以从包括另一个对象字面量在内的任意表达式中获得。对象是可嵌套的。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> flight=&#123;</span><br><span class=\"line\">  airline=<span class=\"string\">\"mh\"</span>,</span><br><span class=\"line\">  number=<span class=\"number\">370</span>,</span><br><span class=\"line\">  departure：&#123;</span><br><span class=\"line\">    IATA:<span class=\"string\">\"KL\"</span>，</span><br><span class=\"line\">    time:<span class=\"string\">\"2014-03-08 00:25\"</span>,</span><br><span class=\"line\">    city:<span class=\"string\">\"Kuala Lumpu\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  arrival:&#123;</span><br><span class=\"line\">    IATA:<span class=\"string\">\"CN\"</span>，</span><br><span class=\"line\">    time:<span class=\"string\">\"future\"</span>,</span><br><span class=\"line\">    city:<span class=\"string\">\"Beijing\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"3-2-检索\"><a href=\"#3-2-检索\" class=\"headerlink\" title=\"3.2   检索\"></a>3.2   检索</h3><p>要检索对象中包含的值，可以采用在[]后缀中括住一个字符串表达式的方式。若字符串是一个常数且他是一个合法的JavaScript标识符而非保留字,那么也可以用.表示法代替，优先使用.表示法，因为更紧凑可读性更好。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">stooge[<span class=\"string\">\"first-name\"</span>] <span class=\"comment\">//Chouchou</span></span><br><span class=\"line\">flight.departure.city <span class=\"comment\">//\"Kuala Lumpu\"</span></span><br></pre></td></tr></table></figure></p>\n<p>若检索一个并不存在的成员元素的值，则返回undefined。</p>\n<p>||运算符可以用来填充默认值<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> status=flight.status||<span class=\"string\">\"unkown\"</span>;</span><br></pre></td></tr></table></figure></p>\n<p>尝试检索一个undefined值将会导致TypeError异常。可通过&amp;&amp;避免错误。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flight.equipment<span class=\"comment\">//undefined</span></span><br><span class=\"line\">flight.equipment.model<span class=\"comment\">//throw \"TypeError\"</span></span><br><span class=\"line\">flight.equipment&amp;&amp;flight.equipment.model<span class=\"comment\">//undefined</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"3-3-更新\"><a href=\"#3-3-更新\" class=\"headerlink\" title=\"3.3   更新\"></a>3.3   更新</h3><p>对象中的值可以通过复制语句来更新，若属性名已经存在于对象中，那么该属性的值被替换，如果对象之前并未拥有这个属性名，则该属性会被扩充到该对象中。</p>\n<h3 id=\"3-4-引用\"><a href=\"#3-4-引用\" class=\"headerlink\" title=\"3.4   引用\"></a>3.4   引用</h3><p>对象通过引用来传递。它们永远不会被拷贝。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> x=chouchou;</span><br><span class=\"line\">x.nickname=<span class=\"string\">'huang'</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> nick=chouchou.nickname;</span><br><span class=\"line\"><span class=\"comment\">//因为x和chouchou是指向同一个对象的引用，所以nick也为'huang'</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> a=&#123;&#125;,b=&#123;&#125;,c=&#123;&#125;;</span><br><span class=\"line\"><span class=\"comment\">//a,b,c每个都引用不同的空对象。</span></span><br><span class=\"line\">a=b=c=&#123;&#125;;</span><br><span class=\"line\"><span class=\"comment\">//a,b,c都引用同一个空对象。</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"3-5-原型（prototype）\"><a href=\"#3-5-原型（prototype）\" class=\"headerlink\" title=\"3.5    原型（prototype）\"></a>3.5    原型（prototype）</h3><p>每一个对象都连接到一个原型对象，并且它可以从中继承，所有通过对象字面量创建的对象都连接到Object.prototype这个JavaScript的标准对象。<br>当创建一个新对象时，可选择某个对象作为它的原型。这个给Object增加一个beget方法，beget方法创建一个使用原对象作为其原型的新对象。(不是很明白，留坑)<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">typeof</span> <span class=\"built_in\">Object</span>.beget !== <span class=\"string\">'function'</span>) &#123;</span><br><span class=\"line\">\t<span class=\"built_in\">Object</span>.beget =<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">o</span>) </span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> F=<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;&#125;;</span><br><span class=\"line\">\t\t\tF.prototype=o;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> F(); </span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> another_chouchou=<span class=\"built_in\">Object</span>.beget(chouchou);</span><br></pre></td></tr></table></figure></p>\n<p>原型连接在更新是不起作用的，当我们对某个对象做出改变时，不会触及到该对象的原型。原型连接只有在检索值时才被用到，如果我们尝试去获取对象的某个属性值，且该对象没有此属性名，则JavaScript试着从原型对象中获取属性值。如果那个原型对象也没有该属性，则从它的原型中寻找，依次类推，直到终点Object.prototype。如果想要的属性完全不在原型链中则返回undefined。这个过程称为<strong>委托</strong></p>\n<p>原型关系是一种动态的关系。若我们添加一个新的属性到原型中，则该属性会立即对所有基于该原型创建的对象可见。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chouchou.profession=<span class=\"string\">\"front-end develoer\"</span>;</span><br><span class=\"line\">another_chouchou.profession;<span class=\"comment\">//\"frond-end developer\"</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"3-6-反射\"><a href=\"#3-6-反射\" class=\"headerlink\" title=\"3.6    反射\"></a>3.6    反射</h3><p>检查对象并确定有什么属性很容易，只要试着去检索该属性并验证所取得的值。可用typeof，但是原型链中的任何属性也会产生一个值，例如<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typeof</span> flight.toString <span class=\"comment\">//'function'</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> flight.constructor <span class=\"comment\">//'function'</span></span><br></pre></td></tr></table></figure></p>\n<p>有两个方法去除这些不必要的属性。<br>1.让你的程序检查并剔除函数值。一般来说，做反射的目标是数据。因此你应该意识到一些值可能会是函数。<br>2.hasOwnProperty方法，如果对象拥有独立属性返回true，hasOwnProperty不会检查原型链。</p>\n<h3 id=\"3-7-枚举\"><a href=\"#3-7-枚举\" class=\"headerlink\" title=\"3.7    枚举\"></a>3.7    枚举</h3><p>for in 语句可用来遍历一个对象中所有的属性名。该枚举过程将会列出所有的属性，包括函数和你可能不关心原型链中的属性。所以我们需要过滤，常用的过滤器是hasOwnProperty以及typeof来排除函数。属性名出现顺序不确定，要以确定的顺序应创建一个数组，在其中以正确的顺序包含属性名。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> i;</span><br><span class=\"line\"><span class=\"keyword\">var</span> properties=[<span class=\"string\">'fistr-name'</span>,<span class=\"string\">'middle-name'</span>,<span class=\"string\">'last-name'</span><span class=\"string\">'profession'</span>];</span><br><span class=\"line\"><span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt; properties.length;i +=<span class=\"number\">1</span> )&#123;</span><br><span class=\"line\">  <span class=\"built_in\">document</span>.writeln(properties[i]+<span class=\"string\">':'</span>+another.chouchou[propertites[i]]);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"3-8-删除\"><a href=\"#3-8-删除\" class=\"headerlink\" title=\"3.8    删除\"></a>3.8    删除</h3><p>delete运算符可以用来删除对象的属性。它不会触及原型链中的任何对象。删除对象的属性可能让来自原型链中的属性浮现出来。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">another.chouchou.nickname <span class=\"comment\">//'me'</span></span><br><span class=\"line\"><span class=\"keyword\">delete</span> another.chouchou.nickname;</span><br><span class=\"line\">another.chouchou.nickname <span class=\"comment\">// 'huang'</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"3-9-减少全局变量污染\"><a href=\"#3-9-减少全局变量污染\" class=\"headerlink\" title=\"3.9     减少全局变量污染\"></a>3.9     减少全局变量污染</h3><p>JavaScript可以很随意的定义哪些可保存所有应用资源的全局变量。但全局变量减弱了程序的灵活性，应予以避免。最小化使用全局变量的方法是在你的应用中只创建一个全局变量。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> MYAPP=&#123;&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>该变量此时编程了你的应用的容器。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MYAPP.chouchou=&#123;<span class=\"string\">\"first-name\"</span>:<span class=\"string\">\"Chouchou\"</span>,<span class=\"string\">\"last-name\"</span>:<span class=\"string\">\"Shouchouchou\"</span>&#125;;</span><br><span class=\"line\">MYAPP.flight=&#123;airline=<span class=\"string\">\"mh\"</span>,number=<span class=\"number\">370</span>,</span><br><span class=\"line\">    departure：&#123;</span><br><span class=\"line\">      IATA:<span class=\"string\">\"KL\"</span>，</span><br><span class=\"line\">      time:<span class=\"string\">\"2014-03-08 00:25\"</span>,</span><br><span class=\"line\">      city:<span class=\"string\">\"Kuala Lumpu\"</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    arrival:&#123;</span><br><span class=\"line\">      IATA:<span class=\"string\">\"CN\"</span>，</span><br><span class=\"line\">      time:<span class=\"string\">\"future\"</span>,</span><br><span class=\"line\">      city:<span class=\"string\">\"Beijing\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>只有把多个全局变量都整理在一个名称空间下，你讲显著降低与其他应用程序，组件或类库之间产生糟糕的相互影响的可能性。下一章将介绍闭包来有效减少全局污染。</p>\n"},{"title":"【JavaScript】【学习心得】学习JavaScript 第二十二天","url":"http://padding.me/blog/2014/12/08/【JavaScript】【学习心得】学习JavaScript 第二十二天/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-JavaScript\" target=\"_blank\" rel=\"external\">Learning-JavaScript</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-JavaScript/issues/24\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-JavaScript/issues/24</a></p>\n<h3 id=\"1-空白\"><a href=\"#1-空白\" class=\"headerlink\" title=\"1. 空白\"></a>1. 空白</h3><p>  空白用来间隔字符序列，这个很好理解。另Javascript 采取两种注释方法块注释/* */和行注释//我们使用//，因为/* */中会偶尔遇到正则表达式的注释会导致错误。</p>\n<h3 id=\"2-标识符\"><a href=\"#2-标识符\" class=\"headerlink\" title=\"2. 标识符\"></a>2. 标识符</h3><p>标识符有一个字母开头，其后可加一个或多个字母、数字或下划线。不允许使用保留字。</p>\n<p><code>undefined</code> , <code>NaN</code> 和 <code>Infinity</code> 却不是保留字。JavaScript 不允许使用保留字来命名参数或者变量，也不允许在对象字面量中，或者再一个属性存取表达式的点号之后，使用保留字作为对象的属性名。</p>\n<h3 id=\"3-数字\"><a href=\"#3-数字\" class=\"headerlink\" title=\"3. 数字\"></a>3. 数字</h3><p>数字类型在内部表示为 64 位的浮点数。如果一个数字字面量有指数构成，则其值为由 e 之前的部分乘以 10 的 e 之后的部分的次方计算出来的值。<strong> NaN 是一个不等于任何值，甚至包括其自身的值</strong>。</p>\n<h3 id=\"4-字符串\"><a href=\"#4-字符串\" class=\"headerlink\" title=\"4. 字符串\"></a>4. 字符串</h3><p>字符串字面量可以被包围在双引号或单引号之中，包含 0 个或多个字符。<strong>JavaScript 中的所有字符都为 16 位</strong>。\\ 为转移字符，\\u 约定允许指定用数字表示的字符码位。如<code>&quot;A&quot;===&quot;\\u0041&quot;</code></p>\n<p>(这里说下===和==的区别)<br> <code>==</code>（相等运算法），<code>===</code>（严格相等运算符） JavaScript 对象的比较是引用的比较，非值的比较，对象和其本身相等，和其他任何对象不相等。 <code>===</code> 首先计算其操作数的值，然后比较，比较过程无任何类型转换。 <code>==</code> 如果两个操作数不是同一类型的，则相等运算符进行一些类型转换进行比较。 <code>==</code> 这里截取 <a href=\"http://dorey.github.io/JavaScript-Equality-Table\" target=\"_blank\" rel=\"external\">JavaScript 相等表格</a>上的的两张图片让大家更为直观的感受下。</p>\n<p><img src=\"http://paddingme.qiniudn.com/1396461120383-2.png\" alt=\"关于===的相等表格\"></p>\n<p><img src=\"http://paddingme.qiniudn.com/1396464279990-1.png\" alt=\"关于==的相等表格\" style=\"width:625px;\"></p>\n<p>引用下<a href=\"http://weibo.com/wintercn\" target=\"_blank\" rel=\"external\">温特大大</a>的总结就是：<strong>只要记住 <code>null</code> 只和<code>undefined</code> 相等，有 <code>number</code> 都转 <code>number</code>，有 <code>boolean</code> 也转 <code>number</code>，有 <code>string</code> 都转 <code>string</code>，对象互相不等，<code>NaN</code> 互相不等就可以了</strong>。</p>\n<p>字符串一旦创建无法改变，通过 <code>+</code> 可以连接字符串形成一个新的字符串。<code>&#39;c&#39; + &#39;a&#39; + &#39;t&#39; === &#39;cat&#39;</code> 就很好理解了,<code>&#39;c&#39; + &#39;a&#39; + &#39;t&#39;</code>连接后创建了一个新的字符串和 <code>&#39;cat&#39;</code> 有着完全相同的字符和字符顺序所以严格相等。</p>\n<h3 id=\"5-语句\"><a href=\"#5-语句\" class=\"headerlink\" title=\"5. 语句\"></a>5. 语句</h3><p>Javascript 依赖于全局变量进行连接，所有编译单元的所有级别对象都被抛入全局对象的公共命名空间中。当 <code>var</code> 语句被用在函数的内部时，他定义了这个函数的私有变量。<br><code>switch</code>、<code>while</code>、<code>for</code>、和 <code>do</code> ss语句允许一个可选的前置 <code>label</code> 配合 <code>break</code> 一起使用。<br>语句的执行顺序：从上到下。Javascript 可用过条件语句（<code>if</code>, <code>switch</code>），循环语句（<code>for</code>, <code>while</code>, <code>do</code>），<strong>强制跳转语句（<code>return</code>, <code>break</code>, <code>throw</code>）</strong> 和函数调用来改变执行顺序。<br><strong><code>false</code>, <code>null</code>, <code>undefined</code>,空字符串 <code>&#39;&#39;</code>,数字 <code>0</code>,数字 <code>NaN</code>都为假，其余皆为真。</strong><br><code>for</code> 循环有两种形式，<code>for(var i=0; i &lt; arr.length,i++){}</code> 和 <code>for(i in arr){}</code>,后者枚举一个对象的所有属性名（或键名），在每次循环中，对象的另一个属性名字付串被复制给 <code>for</code> 和 <code>in</code> 之间的变量。<br><code>object.hasOwnProperty(variable)</code>来检测是否为该对象的成员，还是从原型链里找到的。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(myvar <span class=\"keyword\">in</span> obj)&#123;</span><br><span class=\"line\">     <span class=\"keyword\">if</span>(object.hasOwnProperty(myvar))&#123;</span><br><span class=\"line\">         ...</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Javascript 不允许在 <code>return</code> 关键字和表示式之间换行,同样不允许 <code>break</code> 关键字和标签之间换行。</p>\n<h3 id=\"6-表达式\"><a href=\"#6-表达式\" class=\"headerlink\" title=\"6. 表达式\"></a>6. 表达式</h3><p>最简单的表达式是字面量值（比如字符串或数字）、变量、内置的值（<code>true</code>、<code>false</code>、<code>null</code>、<code>undefined</code>、<code>NaN</code> 和 <code>Infinity</code>）、以 <code>new</code> 前导的调用表达式、以 <code>delete</code>前导的属性存取表达式、包在圆括号中的表达式、以一个前缀运算符作为前导的表达式，或者表达式后面跟着：</p>\n<ul>\n<li>一个插入运算符与另一个表达式；</li>\n<li>三元运算符?后面跟着另一个表达式，然后接一个:，再然后接第 -三个表达式；</li>\n<li>一个函数调用；</li>\n<li>一个属性存取表达式。</li>\n</ul>\n<p><strong>函数调用引发函数的执行，函数调用运算符是跟随在函数名后面的一对圆括号。</strong>圆括号中可能包含将会传递给这个函数的参数。一个属性存取表达式用于指定一个对象或数组的属性或元素。</p>\n<p>下表按从最高到最低的优先级列出 JavaScript 运算符。具有相同优先级的运算符按从左至右的顺序求值。</p>\n<table>\n<thead>\n<tr>\n<th>运算符</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>. [] ()</td>\n<td>字段访问、数组下标、函数调用以及表达式分组</td>\n</tr>\n<tr>\n<td>++ – - ~ ! delete new typeof void</td>\n<td>一元运算符、返回数据类型、对象创建、未定义值</td>\n</tr>\n<tr>\n<td>* / %</td>\n<td>乘法、除法、取模</td>\n</tr>\n<tr>\n<td>+ - +</td>\n<td>加法、减法、字符串连接</td>\n</tr>\n<tr>\n<td>&lt;&lt; &gt;&gt; &gt;&gt;&gt;</td>\n<td>移位</td>\n</tr>\n<tr>\n<td>&lt; &lt;= &gt; &gt;= instanceof</td>\n<td>小于、小于等于、大于、大于等于、instanceof</td>\n</tr>\n<tr>\n<td>== != === !==</td>\n<td>等于、不等于、严格相等、非严格相等</td>\n</tr>\n<tr>\n<td>&amp;</td>\n<td>按位与</td>\n</tr>\n<tr>\n<td>^</td>\n<td>按位异或</td>\n</tr>\n<tr>\n<td>\\</td>\n<td></td>\n<td>按位或</td>\n</tr>\n<tr>\n<td>&amp;&amp;</td>\n<td>逻辑与</td>\n</tr>\n<tr>\n<td>\\</td>\n<td>\\</td>\n<td></td>\n<td>逻辑或</td>\n</tr>\n<tr>\n<td>?:</td>\n<td>条件</td>\n</tr>\n<tr>\n<td>= oP=</td>\n<td>赋值、运算赋值</td>\n</tr>\n<tr>\n<td>,</td>\n<td>多重求值</td>\n</tr>\n</tbody>\n</table>\n<p><code>type of</code> 运算符产生的值有 ‘number’、’string’、’boolean’、’undefined’、’function’ 和 ‘object’（注意都是小写）<strong>如果运算数是一个数组或者  <code>null</code>，那么结果是 <code>object</code>,这是不对的额</strong>这里作何解？</p>\n<h3 id=\"7-字面量\"><a href=\"#7-字面量\" class=\"headerlink\" title=\"7. 字面量\"></a>7. 字面量</h3><p>对象字面量是一种方便指定新对象的表示法。属性名可是标识符或者字符串。数组字面量是一个方便指定新数组的表示法，函数字面量定义了函数值（后续相继详细介绍）。</p>\n"},{"title":"【前端】【学习心得】第十九天 模式与标准","url":"http://padding.me/blog/2014/12/05/【前端】【学习心得】第十九天 模式与标准/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-JavaScript\" target=\"_blank\" rel=\"external\">Learning-JavaScript</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-JavaScript/issues/23\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-JavaScript/issues/23</a></p>\n<p>最近在工作中经常遇到浏览器兼容性的问题，让我焦头烂额，这里总结下浏览器的严格模式和怪异模式以及IE浏览下的文档模式和浏览器模式等内容。</p>\n<h3 id=\"严格模式和怪异模式\"><a href=\"#严格模式和怪异模式\" class=\"headerlink\" title=\"严格模式和怪异模式\"></a>严格模式和怪异模式</h3><p>现代浏览器一般具有多种渲染模式：</p>\n<p> 在“标准模式”(standards mode) 页面按照 HTML 与 CSS 的定义渲染，而在“怪异模式(quirks mode) 模式”中则尝试模拟更旧的浏览器的行为。 一些浏览器（例如，那些基于 Mozilla 的 Gecko 渲染引擎的，或者 Internet Explorer 8 在 strict mode 下）也使用一种尝试于这两者之间妥协的“近乎标准”(almost standards) 模式，实施了一种表单元格尺寸的怪异行为，除此之外符合标准定义。</p>\n<p>通常，浏览器基于页面中文件类型描述的存在以决定采用哪种渲染模式；如果存在一个完整的 DOCTYPE 则浏览器将会采用标准模式，而如果它缺失则浏览器将会采用怪异模式。<br>例如，一个以如下 DOCTYPE 开始的网页将会触发标准模式：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01//EN\"\"http://www.w3.org/TR/html4/strict.dtd\"&gt;</span></span><br></pre></td></tr></table></figure>\n<p>如下 DOCTYPE 语法上是无效的，因为它包含公共标识符关键字 PUBLIC 却没有公共标识符（指示所用 HTML 版本的名称），也没有 HTML 文档类型定义的系统标识符 URL。这将会触发怪异模式：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html PUBLIC&gt;</span><br></pre></td></tr></table></figure>\n<p>此外，一个不含任何 DOCTYPE 的网页将会以 quirks 模式渲染。<br>对此一个值得一提的例外是微软的 Internet Explorer 6 浏览器，如果 DOCTYPE 之前有一个 XML 声明，不管是否指定完整的 DOCTYPE，它就会以 quirks 模式渲染一个页面。因此以如下代码开始的 XHTML 页面会被 IE 6 渲染为 quirks 模式：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Strict//EN&quot;&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&quot;&gt;</span><br></pre></td></tr></table></figure>\n<p>在一定程度上，上述代码是有用的，然而它仅仅会对 IE 6 触发怪异模式。如果 DOCTYPE 之前有任何语句，quirks 模式在任何版本的 IE 中（截至 IE 9）同样会被触发。<br>例如，如果一个超文本文件在 DOCTYPE 前包含一个注释或者任何标签，IE (截至 9) 会使用 quirks 模式：</p>\n<h3 id=\"IE的文档模式和浏览器模式\"><a href=\"#IE的文档模式和浏览器模式\" class=\"headerlink\" title=\"IE的文档模式和浏览器模式\"></a>IE的文档模式和浏览器模式</h3><p>IE从IE8引入了文档兼容性开始有了浏览器模式和文档模式(按F12可见)</p>\n<blockquote>\n<p>“浏览器模式”:用于切换IE针对该网页的默认文档模式、对不同版本浏览器的条件备注解析、发送给网站服务器的用户代理（User-Agent）字符串的值。网站可以根据浏览器返回的不同用户代理字符串判断浏览器的版本和安装的功能，这样就可以向不同的浏览器返回不同的页面内容。</p>\n</blockquote>\n<figure><img src=\"http://paddingme.qiniudn.com/ie9-2ge-moshi.png\" alt=\"IE8的浏览器模式\"><figcaption>IE8的浏览器模式</figcaption></figure>\n\n<blockquote>\n<p>“文档模式”用于指定IE的页面排版引擎（Trident）以哪个版本的方式来解析并渲染网页代码。切换文档模式会导致网页被刷新，但不会更改用户代理字符串中的版本号，也不会从服务器重新下载网页。切换浏览器模式的同时，浏览器也会自动切换到相应的文档模式。</p>\n</blockquote>\n<figure><img src=\"http://paddingme.qiniudn.com/ie9-2ge-moshi.png\" alt=\"IE下的文档模式\"><figcaption>IE9下的文档模式</figcaption></figure>\n\n<p>我的理解就是浏览器模式是指IE浏览器 向服务器发送请求时，告诉服务器自己是哪个浏览器哪个版本，这里是指告诉服务器我是IE7还是IE8或者9,然后浏览器根据收到的用户代理字段返回IE7或者IE8或者IE9的页面内容。</p>\n<p>而文档模式则是指浏览器将服务器端发送过来的内容按照某种特定的浏览器（IE7，IE8，IE9等）来渲染页面。</p>\n<p>这里还涉及到怪异模式（Quirks Mode），IE旧的怪异模式现在被称为IE5怪异模式,一般不予考虑。</p>\n<h3 id=\"DOCTYPE\"><a href=\"#DOCTYPE\" class=\"headerlink\" title=\"DOCTYPE\"></a>DOCTYPE</h3><p>为什么要研究这些呢，是为了强调按照标准写html语言的重要性，近来在工作中遇到的各种诡异的IEbug，花费了巨大精力调试，最后都是因为没有按照标准来写，没有doctyle头，标签没有闭合，导致各浏览器渲染不同诡异。</p>\n<p>DOCTYPE是document type(文档类型)的简写，用来说明你用的XHTML或者HTML是什么版本。<br>其中的DTD(document type definition)叫文档类型定义，里面包含了文档的规则，浏览器就根据你定义的DTD来解释你页面的标识，并展现出来。<br>要建立符合标准的网页，DOCTYPE声明是必不可少的关键组成部分；除非你的XHTML确定了一个正确的DOCTYPE，否则你的标识和CSS都不会生效。</p>\n<p>HTML5 (向后兼容，推荐使用):</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br></pre></td></tr></table></figure>\n<p>HTML 4.01 Strict</p>\n<p>This DTD contains all HTML elements and attributes, but does NOT INCLUDE presentational or deprecated elements (like font). Framesets are not allowed.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01//EN&quot; &quot;http://www.w3.org/TR/html4/strict.dtd&quot;&gt;</span><br></pre></td></tr></table></figure>\n<p>HTML 4.01 Transitional</p>\n<p>This DTD contains all HTML elements and attributes, INCLUDING presentational and deprecated elements (like font). Framesets are not allowed.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;</span><br></pre></td></tr></table></figure>\n<p>HTML 4.01 Frameset</p>\n<p>This DTD is equal to HTML 4.01 Transitional, but allows the use of frameset content.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Frameset//EN&quot; &quot;http://www.w3.org/TR/html4/frameset.dtd&quot;&gt;</span><br></pre></td></tr></table></figure>\n<p>XHTML 1.0 Strict</p>\n<p>This DTD contains all HTML elements and attributes, but does NOT INCLUDE presentational or deprecated elements (like font). Framesets are not allowed. The markup must also be written as well-formed XML.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Strict//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&quot;&gt;</span><br></pre></td></tr></table></figure>\n<p>XHTML 1.0 Transitional</p>\n<p>This DTD contains all HTML elements and attributes, INCLUDING presentational and deprecated elements (like font). Framesets are not allowed. The markup must also be written as well-formed XML.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;</span><br></pre></td></tr></table></figure>\n<p>XHTML 1.0 Frameset</p>\n<p>This DTD is equal to XHTML 1.0 Transitional, but allows the use of frameset content.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Frameset//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd&quot;&gt;</span><br></pre></td></tr></table></figure>\n<p>XHTML 1.1</p>\n<p>This DTD is equal to XHTML 1.0 Strict, but allows you to add modules (for example to provide ruby support for East-Asian languages).</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.1//EN&quot; &quot;http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd&quot;&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"IE兼容模式\"><a href=\"#IE兼容模式\" class=\"headerlink\" title=\"IE兼容模式\"></a>IE兼容模式</h3><p>IE 支持通过特定的 <meta> 标签来确定绘制当前页面所应该采用的 IE 版本。除非有强烈的特殊需求，否则最好是设置为 edge mode，从而通知 IE 采用其所支持的最新的模式。</p>\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\">\n\n<h3 id=\"内核控制Meta标签：让360浏览器默认使用极速模式打开网页\"><a href=\"#内核控制Meta标签：让360浏览器默认使用极速模式打开网页\" class=\"headerlink\" title=\"内核控制Meta标签：让360浏览器默认使用极速模式打开网页\"></a>内核控制Meta标签：让360浏览器默认使用极速模式打开网页</h3><p>进来调试一个网页在IE、Chrome、Firefox下均表现正常，但是在360浏览器兼容模式下表现诡异。（国产的各种shell，我就呵呵了。）查查了内核控制Meta标签：让360浏览器默认使用极速模式打开网页，方法如下：</p>\n<ol>\n<li>网页头部加入</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;meta name=&quot;renderer&quot; content=&quot;webkit&quot;&gt;</span><br></pre></td></tr></table></figure>\n<p>360浏览器就会在读取到这个标签后，立即切换对应的极速核。</p>\n<ol>\n<li>另外为了保险起见再加入</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=Edge,chrome=1&quot;&gt;</span><br></pre></td></tr></table></figure>\n<p>这样写可以达到的效果是如果安装了Google chrome frame，则使用GCF来渲染页面，如果没有安装GCF，则使用最高版本的IE内核进行渲染。</p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>作为前端，浏览器各种状况频发，诡异之处无所不在。最重要的是按照标准来规范自己的代码，另一方面了解各浏览器的特性，好规避bug,再者，不断debug，从坑里爬起来。</p>\n<h3 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h3><ol>\n<li><a href=\"http://codeguide.bootcss.com/\" target=\"_blank\" rel=\"external\">编码规范 by @mdo（墙裂推荐）</a></li>\n<li><a href=\"https://www.imququ.com/post/browser-mode-and-document-mode-in-ie.html\" target=\"_blank\" rel=\"external\">关于浏览器模式和文本模式的困惑</a></li>\n<li><a href=\"https://www.imququ.com/post/browser-mode-and-document-mode-in-ie-2.html\" target=\"_blank\" rel=\"external\">IE 的浏览器模式和文本模式（二）</a></li>\n<li><a href=\"http://msdn.microsoft.com/zh-cn/library/cc288325\\(v=vs.85\\\" target=\"_blank\" rel=\"external\">定义文档兼容性</a>.aspx)</li>\n<li><a href=\"http://zh.wikipedia.org/wiki/%E6%80%AA%E5%BC%82%E6%A8%A1%E5%BC%8F\" target=\"_blank\" rel=\"external\">怪异模式</a></li>\n<li><a href=\"http://www.iefans.net/shanchu-ie9-wenjianjia/\" target=\"_blank\" rel=\"external\">IE “浏览器模式”和“文档模式”的区别（IEfans）</a></li>\n<li><a href=\"http://se.360.cn/v6/help/meta.html\" target=\"_blank\" rel=\"external\">浏览器内核控制Meta标签说明文档浏览器内核控制Meta标签说明文档</a></li>\n</ol>\n"},{"title":"【JavaScript】【学习心得】学习JavaScript 第十八天","url":"http://padding.me/blog/2014/12/04/【JavaScript】【学习心得】学习JavaScript 第十八天/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-JavaScript\" target=\"_blank\" rel=\"external\">Learning-JavaScript</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-JavaScript/issues/22\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-JavaScript/issues/22</a></p>\n<h1 id=\"面向对象的程序设计\"><a href=\"#面向对象的程序设计\" class=\"headerlink\" title=\"面向对象的程序设计\"></a>面向对象的程序设计</h1><p>ECMA-262 把对象定义为</p>\n<blockquote>\n<p>无序属性的集合，其属性可以包含基本值、对象或者函数。</p>\n</blockquote>\n<p>即对象是一组没有特定顺序的值。对象的每个属性或方法都有一个名字，而每个名字都映射到一个值。正因为这样，我们可以把 ECMAScript 的对象想象成散列表：无非就是一组明值对。其中值可以是数据或函数。</p>\n<h2 id=\"理解对象\"><a href=\"#理解对象\" class=\"headerlink\" title=\"理解对象\"></a>理解对象</h2><h3 id=\"属性类型\"><a href=\"#属性类型\" class=\"headerlink\" title=\"属性类型\"></a>属性类型</h3><p>ECMAScript 第 5 版 在定义只有内部采用的特性（attribute）时, 描述了属性（property）的各种特征。ECMAScript 定义这些特性是为了实现 JavaScript 引擎用的，因此在 JavaScript 中不能直接访问它们。为表示特性是内部直，改规范他们放在了两对儿括号中，例如 [[Enuermerable]]。</p>\n<p>ECMAScript 中只有两种属性：数据属性和访问器属性。</p>\n<ol>\n<li><p>数据属性包含一个数据值的位置。在这个位置可以读取和写入值。数据属性有描述其行为的特性4个：</p>\n<ul>\n<li>[[Configurable]]: 表示能否通过 delete 删除属性从而重新定义属性，能否修改属性的特性，或者能否把属性修改为访问器属性。</li>\n<li>[[Enumberable]]: 表示能否通过 for-in 循环返回属性。</li>\n<li>[[Writable]]: 表示能否修改属性的值。</li>\n<li>[[value]]:包含这个属性的火速据知。读取属性值的时候，从这个位置读；写入属性值的时候，把新值保存在这个位置。</li>\n</ul>\n<p>要修改属性默认的特性，必须用 ECMAScript 5 的 <code>Object.defineProperty()</code> 方法。这个方法接受三个参数: 属性所在的对象，属性名，和一个描述符对象。其中，描述符（descriptor）对象的属性必须是：configurable、enumerable、writable 和 value。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"keyword\">var</span> person = &#123;&#125;;</span><br><span class=\"line\"> <span class=\"built_in\">Object</span>.defineProperty(person,<span class=\"string\">\"name\"</span>,&#123;</span><br><span class=\"line\">  writable: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  value: <span class=\"string\">\"Nicholas\"</span>,</span><br><span class=\"line\">  configurable: <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"> alert(person.name);<span class=\"comment\">//\"Nicholas\"</span></span><br><span class=\"line\"> person.name = <span class=\"string\">\"PaddingMe\"</span>;</span><br><span class=\"line\"> alert(person.name);<span class=\"comment\">//\"Nicholas\"</span></span><br><span class=\"line\"> <span class=\"keyword\">delete</span> person.name;</span><br><span class=\"line\"> alert(person.name);<span class=\"comment\">//\"Nicholas\"</span></span><br></pre></td></tr></table></figure>\n<p>一旦把属性定义为不可配置特性就不能再把它变为可配置。</p>\n<p>在调用 <code>Object.defineProperty()</code> 方法时，如果不指定， configurable, enumerable 和 writable 特性的默认值为 false。</p>\n</li>\n<li><p>访问器属性<br>访问器属性不包含数据值，他们包含一对 getter 和 setter 函数（不过不是必须的），在读取访问器属性时，会调用 getter 函数，这个函数负责返回有效的值。在写入访问器属性时，会调用 setter 函数并传入新值，此函数负责决定如何处理数据。访问器也有4个特性：</p>\n<ul>\n<li>[[Configurable]]: 表示能否通过 delete 删除属性从而重新定义属性，能否修改属性的特性，或者能否把属性修改为访问器属性。</li>\n<li>[[Enumberable]]: 表示能否通过 for-in 循环返回属性。</li>\n<li>[[get]]: 在读取属性时调用的函数。默认值为 undefined。</li>\n<li>[[set]]: 在写入属性时调用的函数。默认值为 undefined。</li>\n</ul>\n<p>访问器不能直接定义，必须使用 <code>object.defineProperty()</code> 来定义。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"keyword\">var</span> book = &#123;</span><br><span class=\"line\">    _year: <span class=\"number\">2004</span>,</span><br><span class=\"line\">    edition: <span class=\"number\">1</span></span><br><span class=\"line\"> &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"built_in\">Object</span>.defineProperty(book, <span class=\"string\">\"year\"</span>, &#123;</span><br><span class=\"line\">    get: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>._year;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    set: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (newValue &gt; <span class=\"number\">2004</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>._year = newValue;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.edition += newValue <span class=\"number\">-2004</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">book.year = <span class=\"number\">2005</span>;</span><br><span class=\"line\">alert(book.edition); <span class=\"comment\">//2</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>__year 前面的下划线用于表示只能通过对象方法访问的属性。book.edition 变为 2 这是使用访问器属性的常见方式。即设置一个属性的值会导致其他属性发生变化。</p>\n<h3 id=\"定义多个属性\"><a href=\"#定义多个属性\" class=\"headerlink\" title=\"定义多个属性\"></a>定义多个属性</h3><p><code>Object.definePorperties()</code> 接受两个对象参数：第一个要添加或修改其属性的对象，第二个对象的属性 与第一个对象中要添加或修改的属性一一对应。</p>\n<h3 id=\"读取属性的特性\"><a href=\"#读取属性的特性\" class=\"headerlink\" title=\"读取属性的特性\"></a>读取属性的特性</h3><p><code>Object.getOwnPropertyDescriptor()</code> 方法获取给定属性的描述符。<br>此方法接受2个参数：属性所在的对象和要读取其描述符的属性名称。<br>返回值是一个对象。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> book = &#123;&#125;;</span><br><span class=\"line\"><span class=\"built_in\">Object</span>.defineProperties(book,&#123;</span><br><span class=\"line\">    _year: &#123;value: <span class=\"number\">2004</span>&#125;,</span><br><span class=\"line\">    edition: &#123;value: <span class=\"number\">1</span>&#125;,</span><br><span class=\"line\">    year: &#123;</span><br><span class=\"line\">        get: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>._year;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">        set: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (newValue &gt; <span class=\"number\">2004</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">this</span>._year = newValue;</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.edition += newValue <span class=\"number\">-2004</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> descriptor = <span class=\"built_in\">Object</span>.getOwnPropertyDescriptor(book,<span class=\"string\">\"_year\"</span>);</span><br><span class=\"line\">alert(descriptor.value); <span class=\"comment\">//2004</span></span><br><span class=\"line\">alert(descriptor.configurable);<span class=\"comment\">//false</span></span><br><span class=\"line\">alert(<span class=\"keyword\">typeof</span> descriptor.get); <span class=\"comment\">// \"undefined\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> descriptor = <span class=\"built_in\">Object</span>.getOwnPropertyDescriptor(book,<span class=\"string\">\"year\"</span>);</span><br><span class=\"line\">alert(descriptor.value); <span class=\"comment\">//undefined</span></span><br><span class=\"line\">alert(descriptor.enumerable);<span class=\"comment\">//false</span></span><br><span class=\"line\">alert(<span class=\"keyword\">typeof</span> descriptor.get); <span class=\"comment\">//function</span></span><br></pre></td></tr></table></figure>\n"},{"title":"【JavaScript】【学习心得】学习JavaScript 第十七天","url":"http://padding.me/blog/2014/12/03/【JavaScript】【学习心得】学习JavaScript 第十七天/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-JavaScript\" target=\"_blank\" rel=\"external\">Learning-JavaScript</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-JavaScript/issues/21\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-JavaScript/issues/21</a></p>\n<h2 id=\"object\"><a href=\"#object\" class=\"headerlink\" title=\"object\"></a>object</h2><p>ECMAScript 中的对象其实就是一组数据和功能的集合。对象可以通过 <code>new</code> 操作符后跟要创建的对象类型的名称来创建。而创建 Object 类型的实例并为其添加属性和（或）方法，就可以创建自定义对象。</p>\n<p>和 Java 中的 java.lang.object 对象一样，Object 类型是所有它的实例的基础。亦即 Object 类型所具有的任何属性和方法也同样存在于更具体的对象中。</p>\n<p>Object 的每个实例都具有下列属性：</p>\n<ul>\n<li>constructor: 保存这用于创建当前对象的函数；</li>\n<li>hasOwnProperty(propertyName)：用于检查给定的属性在当前对象实例中（而不是在实例的原型中）是否存在，propertyName 必须以字符串形式指定充当参数；</li>\n<li>isPrototypeOf(object): 用于检查传入的对象是否是传入对象的原型</li>\n<li>propertyIsEnumerable(propertyName): 用于检查给定的属性是否能够使用for-in语句来枚举；</li>\n<li>toLocaleString(): 返回对象的字符串表示，该字符串与执行环境的地区对应；</li>\n<li>toString(): 返回对象的字符串表示；</li>\n<li>valueOf(): 返回对象的字符串、数值或布尔值表示，通常与 toString() 返回相同。</li>\n</ul>\n<h2 id=\"位操作符\"><a href=\"#位操作符\" class=\"headerlink\" title=\"位操作符\"></a>位操作符</h2><p>ECMAScirpt 中的所有数值都以IEEE-754 64 位格式存储，但位操作符并不直接操作 64 位值。而是先将 64 位的值转换成 32 位的整数，然后执行操作，最后将结果转换回64位。对于开发人员来说，由于 64 位存储格式是透明的，因此整个过程就像是只存在 32 位的整数一样。</p>\n<p>对于有符号的整数来说，32 位中的前 31 位用于表示数值。第 32 位表示数值符号。负数同样以二进制码存储，但使用二进制补码。</p>\n<p>位操作符有如下几种</p>\n<ul>\n<li>按位非： <code>~</code></li>\n<li>按位与： <code>&amp;</code></li>\n<li>按位或： <code>|</code></li>\n<li>按位异或： <code>^</code></li>\n<li>左移：<code>&lt;&lt;</code></li>\n<li>右移：<code>&gt;&gt;</code></li>\n<li>无符号左移：<code>&lt;&lt;&lt;</code></li>\n<li>无符号右移：<code>&gt;&gt;&gt;</code></li>\n</ul>\n<h2 id=\"布尔操作符\"><a href=\"#布尔操作符\" class=\"headerlink\" title=\"布尔操作符\"></a>布尔操作符</h2><h3 id=\"逻辑与\"><a href=\"#逻辑与\" class=\"headerlink\" title=\"逻辑与\"></a>逻辑与</h3><p>在有一个操作数不是布尔值的情况下，逻辑与操作就不一定返回布尔值，此时，它遵循下列规则：</p>\n<ul>\n<li>若第一个操作数是对象，则返回第二个操作数；</li>\n<li>若第二个操作数是对象，则只有在第一个操作数的求值结果为 true 时才返回该对象；</li>\n<li>若两个操作数都是对象，则返回第二个操作数；</li>\n<li>若有一个操作数是 null, 则返回 null；</li>\n<li>若有一个操作数是 NaN, 则返回 NaN；</li>\n<li>若有一个操作数是 undefined, 则返回 undefined；</li>\n</ul>\n<p>不能在逻辑与操作中使用未定义的值。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> found = <span class=\"literal\">true</span>；</span><br><span class=\"line\"><span class=\"keyword\">var</span> result = (found &amp;&amp; someUndefinedVariable)；<span class=\"comment\">//这里会发生错误</span></span><br><span class=\"line\">alert (result)； <span class=\"comment\">//这一行不会执行</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> found = <span class=\"literal\">false</span>；</span><br><span class=\"line\"><span class=\"keyword\">var</span> result = (found &amp;&amp; someUndefinedVariable)<span class=\"comment\">//不会发生错误</span></span><br><span class=\"line\">alert (result)； <span class=\"comment\">// 执行(\"false\")</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"逻辑或\"><a href=\"#逻辑或\" class=\"headerlink\" title=\"逻辑或\"></a>逻辑或</h3><p>操作规则如下：</p>\n<ul>\n<li>如果第一个操作是对象，则返回第一个操作数；</li>\n<li>如果第一个操作数的求值结果为false, 则返回第二个操作数；</li>\n<li>如果两个操作数都是对象，则返回第二个操作对象；</li>\n<li>如果两个操作数都是 null,则返回 null；</li>\n<li>如果两个操作数都是 NaN,则返回 NaN；</li>\n<li>如果两个操作数都是 undefined,则返回 undefined；</li>\n</ul>\n<p>我们可以使用逻辑或的短路行为来避免为变量赋 null 或者 undefined 值，例如</p>\n<pre><code>var myObject =  preferredObject || backupObject；\n</code></pre><p>在这个例子中，myObject 将被赋予等号后面两个值中的一个。变量 preferredObject 中包含优先赋给变量 myObject 的值， 变量 backupObject 负责在 preferredObject 中不包含有效值情况下提供后备值。</p>\n<h2 id=\"乘性操作符\"><a href=\"#乘性操作符\" class=\"headerlink\" title=\"乘性操作符\"></a>乘性操作符</h2><h3 id=\"乘法\"><a href=\"#乘法\" class=\"headerlink\" title=\"乘法\"></a>乘法</h3><p>在处理特殊值的情况下，乘法操作符遵循下列特殊的规则：</p>\n<ul>\n<li>若操作数是数值，执行常规的乘法计算，即如果两正数或两负数相乘结果是正数，而如果只有一个操作数有符号，那结果是负数，超过表示范围返回 Infinity 或 -Infinity；</li>\n<li>若一操作数是 NaN, 结果为 NaN；</li>\n<li>若 Infinity 与 0 相乘，结果为 NaN；</li>\n<li>若 Infinity与非 0 相乘，则结果为 Infinity 或 -Infinity；</li>\n<li>若 Infinity 与 Infinity 相乘，则结果为 Infinity；</li>\n<li>若一操作数不是数值，则在后台调用 Number() 转换，再根据上述规则计算。</li>\n</ul>\n<h3 id=\"除法\"><a href=\"#除法\" class=\"headerlink\" title=\"除法\"></a>除法</h3><p>除法的特殊计算规则如下：</p>\n<ul>\n<li>若操作数是数值，执行常规的除法计算，即如果两正数或两负数相乘结果是正数，而如果只有一个操作数有符号，那结果是负数，超过表示范围返回 Infinity或-Infinity；</li>\n<li>若一操作数是 NaN,则结果是 NaN；</li>\n<li>若 Infinity 被 Infinity 除，结果是 NaN；</li>\n<li>若 0 被 0 除，返回 NaN；</li>\n<li>若非 0 的有限数被 0 除，结果是 Infinity 或 -Infinity；</li>\n<li>若 Infinity 被任何非0 除， 则结果是 Infinity 或 -Infinity。</li>\n<li>若一操作数不是数值，则在后台调用 Number() 转换，再根据上述规则计算。</li>\n</ul>\n<h2 id=\"加性操作符\"><a href=\"#加性操作符\" class=\"headerlink\" title=\"加性操作符\"></a>加性操作符</h2><h3 id=\"加法\"><a href=\"#加法\" class=\"headerlink\" title=\"加法\"></a>加法</h3><p>如果两个操作符都是数值，则执行常规的加法计算，然后根据下列规则返回结果：</p>\n<ul>\n<li>如果有一个操作数是 NaN，则结果是 NaN；</li>\n<li>如果是 Infinity 加 Infinity，则结果是 Infinity；</li>\n<li>如果是 -Infinity 加 -Infinity，则结果是 -Infinity；</li>\n<li>如果是 Infinity 加 -Infinity，则结果是 NaN；</li>\n<li>如果是 +0 加 +0 ，则结果是 +0；</li>\n<li>如果是 -0 加 -0 ，则结果是 -0；</li>\n<li>如果是 +0 加 -0 ，则结果是 +0；<br>如果有一个操作数是字符，则按照如下规则进行运算：</li>\n<li>如果两个操作数都是字符串，则将第二个操作数与第一个操作数拼接起来；</li>\n<li>如果只有一个操作数是字符串，则将另一个操作数转换为字符串，然后再将两个字符串拼接起来。</li>\n<li>如果有一个操作数是对象、数值或者布尔值，则调用他们的 toString() 方法取得它们 相应的字符串，然后再根据前面的规则进行相加。对于 undefined 和 null 则分别调用 String() 并取得字符串 “undefined” 和 “null”。</li>\n</ul>\n<h3 id=\"减法\"><a href=\"#减法\" class=\"headerlink\" title=\"减法\"></a>减法</h3><p>加法的运算规则如下：</p>\n<ul>\n<li>若两个数都是数值，则执行常规的算术减法并返回结果数值；</li>\n<li>若有一个操作数是 NaN ，则返回 NaN ；</li>\n<li>若 Infinity - Infinity ，则返回 NaN ；</li>\n<li>若 Infinity - -Infinity ，则返回 NaN ；</li>\n<li>若 -Infinity - Infinity ，则返回 -Infinity ；</li>\n<li>若 +0 - +0 则返回 +0 ；</li>\n<li>若 +0 - -0 则返回 -0 ；</li>\n<li>若 -0 - -0 则返回 +0 ；</li>\n<li>若一个操作数是字符串、布尔值、Null、Undifined，则先在后台调用 Nmuber() 将其转换为数值，再执行减法运算;</li>\n<li>若有一个操作数是对象，则调用 valueOf() 将其转换为对象的数值，若没有 valueOf()，则调用 toString() 再继续减法运算。</li>\n</ul>\n<h2 id=\"关系操作符\"><a href=\"#关系操作符\" class=\"headerlink\" title=\"关系操作符\"></a>关系操作符</h2><p>关系操作符运算规则如下：</p>\n<ul>\n<li>若两操作数都是数值，则执行数值比较；</li>\n<li>若两个操作数都是字符串，则比较两个字符串相应的字符编码值；</li>\n<li>若一个操作数是数值，则将两一个操作数转换为数值；</li>\n<li>若一个操作数是对象，则调用这个对象的 valueOf() 方法，用得到的结果按照前面的规则进行比较，如果没有 valueOf() 方法，则调用 toString() 方法进行比较；</li>\n<li>若一个操作数是布尔值，则将其转换为数值，再进行比较。</li>\n</ul>\n<p>注意在进行字符串比较时，实际比较的是两个字符串中对应位置的每个字符的字符编码值。经过一番比较之后，再返回一个布尔值。记住大写字母的编码值全部小于小写字母的字符编码。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> result = <span class=\"string\">\"Brick\"</span> &lt; <span class=\"string\">\"alphabet\"</span>; <span class=\"comment\">//true</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> result = <span class=\"string\">\"Brick\"</span>.toLowerCase() &lt; <span class=\"string\">\"alphabet\"</span>.toLowerCase(); <span class=\"comment\">//false</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> result = <span class=\"string\">\"23\"</span> &lt; <span class=\"string\">\"3\"</span>; <span class=\"comment\">//true</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> result = <span class=\"string\">\"23\"</span> &lt; <span class=\"number\">3</span>:<span class=\"comment\">//false</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> reslut = <span class=\"string\">\"a\"</span> &lt; <span class=\"number\">3</span>; <span class=\"comment\">//false \"a\"被转换为 NaN</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> result = <span class=\"literal\">NaN</span> &lt; <span class=\"number\">3</span>; <span class=\"comment\">//false</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> result = <span class=\"literal\">NaN</span> &gt;= <span class=\"number\">3</span>; <span class=\"comment\">//false</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"相等操作符\"><a href=\"#相等操作符\" class=\"headerlink\" title=\"相等操作符\"></a>相等操作符</h2><h3 id=\"相等操作符-1\"><a href=\"#相等操作符-1\" class=\"headerlink\" title=\"相等操作符\"></a>相等操作符</h3><p>这两个操作符都会先转换操作数（通常称为强制转型），然后再比较它们的相等性。</p>\n<p>在转换不同的数据类型时，相等和不相等操作符遵循下列基本规则：</p>\n<ul>\n<li>如果有一个操作数是布尔值，则在比较相等性先将其转换为数值——false 为 0, true 为 1；</li>\n<li>如果一个操作数是字符串，另一个操作数是数值，在比较相等性先将字符串转换为数值；</li>\n<li><p>若一个操作数是对象，另一个不是，则调用 valueOf() 用得到的基本类型值按照前面的规则进行比较。这两个操作符在进行比较时要遵循下列<br>规则：</p>\n<ul>\n<li>null 和 underfined 是相等的；</li>\n<li>要比较相等性之前，不能将 null 和 undefined 转换成其他任何值；</li>\n<li>若一操作数是 NaN ，相等操作符返回 false ,即使两个操作符都是 NaN ，相等操作符也是返回 false 的；</li>\n<li>若两个操作数都是对象， 则比较它们是不是同一对象，若两操作数都指向同一对象，则相等操作符返回 true。</li>\n</ul>\n<p>|表达式|值|<br>|—————–|—————|<br>|null == undefined|           true|<br>|”NaN” == NaN     |           false|<br>|NaN == NaN|          flase|<br>|5 == NaN         |           false|<br>|false == 0|           true|<br>|true == 1|           true|<br>|true == 2|           false|<br>|undefined == 0 |           false|<br>|null == 0 |           false|<br>|”5” == 5 |           true|</p>\n</li>\n</ul>\n<p>至于全等和不全等，相对于相等和不相等的区别就是未经类型转换判断相等与否</p>\n<pre><code>null == undefined //true\nnull === undefined //false\n</code></pre><p>由于相等和不相等操作符存在类型转换问题，而为了保持代码中数据类型的完整性，推荐使用全等和不全等操作符。</p>\n<h2 id=\"逗号操作符\"><a href=\"#逗号操作符\" class=\"headerlink\" title=\"逗号操作符\"></a>逗号操作符</h2><p>使用逗号操作符可以在一条语句中执行多个操作，初次之外也可以用于赋值。逗号操作符总会返回表达式中的最后一项。</p>\n<h2 id=\"for-in-语句\"><a href=\"#for-in-语句\" class=\"headerlink\" title=\"for-in 语句\"></a>for-in 语句</h2><p>for-in　语句是一种精确的迭代语句，可以用来枚举对象的属性。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (property <span class=\"keyword\">in</span> expression) statement</span><br></pre></td></tr></table></figure>\n<p>ECMAScript 对象的属性没有顺序。因此，通过 for-in 循环输出的属性名的顺序是不可预测的。具体来讲，所有属性都会被返回一次，但返回的先后次序可能会因浏览器而异。若表示要迭代的对象的变量值为 null 或者 undefined ，for-in 语句会抛出错误。ECMAScript5 更正此行为，对于此种情况不抛出错误而是不再执行循环体。所以建议使用 for-in 循环前，先检测确认对象是不是 null  或者 undefined。</p>\n<h2 id=\"break-和-continue\"><a href=\"#break-和-continue\" class=\"headerlink\" title=\"break 和 continue\"></a>break 和 continue</h2><p>break 和 continue 语句运行在循环中用于精确的控制代码的执行。 其中， break 语句会立即退出循环，强制继续执行循环后面的语句。而 continue 语句虽然也是立即退出循环，但退出循环后从循环的顶部继续执行。</p>\n<h2 id=\"switch-语句\"><a href=\"#switch-语句\" class=\"headerlink\" title=\"switch 语句\"></a>switch 语句</h2><p>switch 语句在比较值时，使用全等操作符，不会产生类型转换。</p>\n<h2 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h2><p>函数会在执行 return 语句之后停止并立即退出。return 语句也不可以不带有任何返回值，在这种情况下，函数在停止执行后将返回 underfined 值。这种用法一般用在需要提前停止函数执行而又不需要返回值的情况下。</p>\n<h2 id=\"理解参数\"><a href=\"#理解参数\" class=\"headerlink\" title=\"理解参数\"></a>理解参数</h2><p>ECMAScript 不介意传进函数的参数是多少个，也不在乎传进来的参数是什么数据类型。<br>ECMAScript 中的参数在内部时用一个数组来表示的额。函数接收的始终是这个数组，而不关心数组中包含哪些参数（如果有参数的额话）。实际上，函数体内通过 arguments 对象来访问这个参数数组，从而获取传递给函数的每一个参数。通过访问 arguments 对象的 length 属性可以获知有多少个参数传递给了函数。没有传递至的命令参数将自动被赋予 undefined 值。 ECMAScript 中的所有参数传递的都是值，不可能通过引用传递参数。</p>\n<h2 id=\"没有重载\"><a href=\"#没有重载\" class=\"headerlink\" title=\"没有重载\"></a>没有重载</h2><p>如果在 ECMAScript 中定义了两个名字相同的函数，则该名字只属于后定义的函数。</p>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><ul>\n<li>ECMASript 中基本数据类型包括 Underfined、Null、Number、String、Boolean；</li>\n<li>无需指定函数的返回值，因为任何 ECMAScript 函数都可在任何时候返回任何值；</li>\n<li>未指定返回值的函数返回的是一个特殊的 undefined 值；</li>\n<li>ECMAScript 中没有函数签名的概念，因为其函数参数是以一个包含零或多个值的数组的形式传递的，</li>\n<li>可以想ECMAScript 函数传递任意数量的参数，并且可以通过 arguments 对象来访问这些参数</li>\n<li>由于不存在函数签名的特性，ECMAScript 函数不能重载。</li>\n</ul>\n"},{"title":"【JavaScript】【学习心得】学习JavaScript 第十六天","url":"http://padding.me/blog/2014/12/02/【JavaScript】【学习心得】学习JavaScript 第十六天/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-JavaScript\" target=\"_blank\" rel=\"external\">Learning-JavaScript</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-JavaScript/issues/20\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-JavaScript/issues/20</a></p>\n<h2 id=\"JavaScript-简介\"><a href=\"#JavaScript-简介\" class=\"headerlink\" title=\"JavaScript 简介\"></a>JavaScript 简介</h2><p>JavaScript 的兴起，主要目的是处理以前由服务器端语言负责的一些输入验证操作，如今，JavaScript 已不再局限于简单的数据验证，而是具备了与浏览器窗口及其内容等几乎所有方面交互的能力。今天JavaScript 已经成为一门功能全面的编程语言，能够处理复杂的计算和交互，拥有了 <strong>闭包</strong>、<strong>匿名函数</strong>、甚至 <strong>元编程</strong>等特性。</p>\n<p>一个完整的JavaScript 实现通常有三部分组成：</p>\n<ul>\n<li>核心(ECMAScript)，由 ECMA-262 定义，提供核心语言功能；</li>\n<li>文档浏览器模型(DOM)，提供访问和操作网页内容的方法和接口；</li>\n<li>浏览器对象模型(BOM)，提供与浏览器交互的方法和接口。<br>我们常见的 Web 浏览器只是 ECMAScript 实现可能的 <em>宿主环境</em>之一。而Web 浏览器对DOM的支持，对于IE来说，IE 5.5 支持 DOM 1 级。在随后的 IE6、IE7中没有引入新的 DOM 功能，直到 IE8 才对以前 DOM 实现中的 bug 进行修复。</li>\n</ul>\n<h2 id=\"在HTML-中使用JavaScript\"><a href=\"#在HTML-中使用JavaScript\" class=\"headerlink\" title=\"在HTML 中使用JavaScript\"></a>在HTML 中使用JavaScript</h2><p>HTML4.01为<code>&lt;script&gt;</code>定义了6个属性(废弃的这里不再给出)：</p>\n<ul>\n<li>async: 可选，表示应该立即下载脚本，但不应妨碍页面中的其他操作；</li>\n<li>defer: 可选，表示脚本可以延迟到文档完全被解析和显示之后再执行，只对外部脚本有效；</li>\n<li>src: 可选，外部脚本文件；</li>\n<li>type: 可选，表示编写代码使用的脚本语言的内容类型（MIME），通常为 text/javascript ,默认也为 text/javascript。</li>\n</ul>\n<p>使用<code>&lt;javascript&gt;</code>元素有两种方式:</p>\n<ul>\n<li>直接在页面嵌入 JavaScript 代码；</li>\n<li>包含外部 JavaScript 文件。</li>\n</ul>\n<p>包含在<code>&lt;script&gt;</code>元素内部的JavaScript 代码将从上至下依次解释。在解释器 <code>&lt;script&gt;</code> 元素内部的所有的代码求值完毕以前，页面中的其余内容将不会被浏览器加载或显示。</p>\n<p>在使用<code>&lt;script&gt;</code>嵌入 Javascript 代码时，记住不要在代码的任何地方出现 <code>&quot;&lt;/script&gt;&quot;</code>字符串，浏览器会认为这是结束的<code>&lt;/script&gt;</code>标签。</p>\n<p>无论如何包含代码，只要不存在<code>defer</code>或者<code>async</code>属性，浏览器都会按照<code>&lt;script&gt;</code>元素所在页面中出现的先后顺序对它们依次进行解析。</p>\n<p><code>defer</code>属性只适用于外部脚本文件，现实中，延迟脚本并不一定会按照顺序进行(第一个延迟脚本先于第二个延迟脚本执行)，也不一定会在 DOMContentLoaded 事件触发前执行，因为最好只包含一个延迟脚本。</p>\n<p>异步脚本同样只适用于外部脚本文件，并告诉浏览器立即下载文件，异步脚本并不保证按照它们的先后顺序执行。 异步脚本一定会在页面的load 事件前执行，但可能会在 DOMContentLoaded 事件触发之前或之后执行。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"zh-CN\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span> <span class=\"attr\">defer</span>=<span class=\"string\">\"defer\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"example.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span> <span class=\"attr\">async</span> <span class=\"attr\">src</span>=<span class=\"string\">\"example.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">noscript</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>本页面需要浏览器支持 JavaScript!<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">noscript</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>适用外部脚本文件通常会有如下优点：</p>\n<ul>\n<li>易于维护</li>\n<li>可缓存</li>\n<li>适应未来(不需要hack)</li>\n</ul>\n<h2 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h2><h3 id=\"标识符\"><a href=\"#标识符\" class=\"headerlink\" title=\"标识符\"></a>标识符</h3><p>所谓标识符，就是指变量、函数、属性的名字，或者函数的参数。标识符可以是按照下列格式规则组合起来的一个或多个字符：</p>\n<ul>\n<li>第一个字符必须是一个字母、下划线、或者一个美元符号；</li>\n<li>其他字符可以是字母、下划线、美元符号或者数字。</li>\n</ul>\n<h3 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h3><p>ECMAScript 的变量是松散的，所谓松散类型就是可以用来保存任何类型的数据，亦即每个变量仅仅是一个用于保存值的占位符而已。</p>\n<h3 id=\"数据类型-1\"><a href=\"#数据类型-1\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h3><p>ECMAScript 中有五种简单数据类型：<strong>Undefined</strong>、 <strong>Null</strong>、 <strong>Number</strong>、 <strong>String</strong>、 <strong>Boolean</strong>。<br>还有一种复杂数据类型：<strong>Obejct</strong>。</p>\n<h4 id=\"typeof\"><a href=\"#typeof\" class=\"headerlink\" title=\"typeof\"></a>typeof</h4><p><code>typeof</code> 用来检测给定变量的数据类型,对一个值使用<code>typeof</code>操作符可能返回如下字符串：</p>\n<ul>\n<li>“undefined”——值未定义；</li>\n<li>“boolean”——布尔值；</li>\n<li>“string”——字符串；</li>\n<li>“number”——数字；</li>\n<li>“object”——对象或者null(空指针)；</li>\n<li>“function”——函数。</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"keyword\">typeof</span> <span class=\"literal\">null</span>);<span class=\"comment\">//\"object\"</span></span><br></pre></td></tr></table></figure>\n<p>特殊值<code>null</code>被认为是一个空的对象引用。Safari 以及之前版本、Chrome 7以及之前版本对正则表达式跳动 <code>typeof</code> 返回 “function”，而其他浏览器返回 “object”。</p>\n<h4 id=\"Undefined\"><a href=\"#Undefined\" class=\"headerlink\" title=\"Undefined\"></a>Undefined</h4><p>对于尚未声明过的变量，只能执行一项操作，即是对其使用<code>typeof</code>操作符检验器数据类型。</p>\n<p>对未初始化过的变量执行<code>typeof</code> 返回”undefied”；而对未声明过的变量执行也返回”undefined”.</p>\n<h4 id=\"Null\"><a href=\"#Null\" class=\"headerlink\" title=\"Null\"></a>Null</h4><p>如果定义的变量准备在将来用于保存对象，那么最好将该变量初始化为<code>null</code>。</p>\n<h4 id=\"Boolean\"><a href=\"#Boolean\" class=\"headerlink\" title=\"Boolean\"></a>Boolean</h4><table>\n<thead>\n<tr>\n<th>数据类型</th>\n<th>转换为true 的值</th>\n<th>转换为false 的值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Boolean</td>\n<td>true</td>\n<td>false</td>\n</tr>\n<tr>\n<td>String</td>\n<td>任何非空字符串</td>\n<td>“”(空字符串)</td>\n</tr>\n<tr>\n<td>Number</td>\n<td>任何非零数字包含无穷大</td>\n<td>0和NaN</td>\n</tr>\n<tr>\n<td>Object</td>\n<td>任何对象</td>\n<td>null</td>\n</tr>\n<tr>\n<td>Undefined</td>\n<td></td>\n<td>undefined</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"Number\"><a href=\"#Number\" class=\"headerlink\" title=\"Number\"></a>Number</h4><ol>\n<li><p>浮点数</p>\n<p> 所谓浮点数，是指该数值中必须包含一个小数点，且小数点后面必须至少有一位数字。如果浮点数本身就是一个整数（如1.0）,那么该值将被转换为整数。</p>\n<p> 浮点数值的最高精度是17位小数，但在进行算术计算时其精确度远远不如整数，例如0.1+0.2结果不是0.3而是0.30000000000000004，如果这两个数是0.15+0.15或者0.25+0.05则没有问题。</p>\n</li>\n<li><p>数值范围</p>\n<p> 数值范围为Infinity 和 -Infinity，可使用 isFinite() 函数检测。</p>\n</li>\n<li><p>NaN</p>\n<p> 任何值除以0都会返回 NaN(not a number) ，任何涉及NaN 的操作都返回 NaN，其次 NaN 与任何值都不相等， 包括 NaN 本身。 isNaN()函数进行检测，在接收一个数值之后会尝试进行转换为数值，某些不是数值的值会被转换为数值，如”10”或布尔值，任何不能被转换为数值的值则返回true。</p>\n<p> isNaN 也适用于对象，在基于对象调用 isNaN() 函数时， 会首先调用对象的 valueOf() 方法， 然后确定该方法返回的值是否可以转换为数值，如果不能，则基于这个返回值再调用 toString() 方法，再测试返回值。</p>\n</li>\n<li><p>数值转换</p>\n<p> 有三个函数可以把非数值转换为数值： Number()、 parsetInt()、 parseFloat()。<br> Number() 可以用于任何数据类型，而另外两个专门用于字符串转换成数值。</p>\n<p> Number() 转换规则：</p>\n<ul>\n<li>如是 Boolean， 转换为0或1；</li>\n<li>若是数字值，转换为数字值；</li>\n<li>若是null, 返回0；</li>\n<li>若是undefined, 返回 NaN;</li>\n<li>若是字符串，则：<ul>\n<li>若字符串只包含数字（包含带正号或负号的情况），则将其转换为十进制数值。</li>\n<li>若字符串包含有效的浮点数，转换为相应的浮点数。</li>\n<li>若包含有效的十六进制数，转换为相同大小的十进制数。</li>\n<li>若为空字符串，转换为0。</li>\n<li>若字符串包含上述， 则格式之外的字符，转换为 NaN 。</li>\n</ul>\n</li>\n<li><p>若是对象，则调用 valueOf()方法，然后按照前面的方法返回值，若转换结果为 NaN,则调用对象的 toString() 方法，然后在依照前面的规则返回相应的字符串值。</p>\n<p>parseInt() 函数在转换字符串时，会忽略字符串前面的空格， 直至找到第一个非空字符。如果第一个字符不是数字字符或者符号，则返回NaN,亦即<code>parseInt(&quot;&quot;)</code>返回NaN,若第一个字符是数字则继续解析第二个，知道解析玩所有后续字符或者遇到非数字字符。parseInt()后还可以跟一个参数，转换时使用的基数（2,8,10,16）。</p>\n<p>parseFloat() 始终忽略前导的零。十六进制的始终会被转换为0,只解析十进制。</p>\n</li>\n</ul>\n</li>\n</ol>\n<h4 id=\"String\"><a href=\"#String\" class=\"headerlink\" title=\"String\"></a>String</h4><p>任何字符串的长度都可以通过访问它的length 属性取得。</p>\n<p>字符串一段创建，他们的值就不可以改变。要改变某个变量保存的字符串，首先要销毁原来的字符串，然后再用另一个包含新值的字符串填充该变量。</p>\n<p>转换为字符串：每个值都有一个 toString()方法，但null 和undefined 没有。也可以传参数改变原来的值；还可以使用String()方法，其转换规则为：</p>\n<ul>\n<li>若值有toString()方法，则调用该方法返回值；</li>\n<li>若值为null,返回”null”;</li>\n<li>若值为undefined,返回”undefined”。</li>\n</ul>\n"},{"title":"【前端】【学习心得】初识HTML5 第十五天","url":"http://padding.me/blog/2014/12/01/【前端】【学习心得】初识HTML5 第十五天/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-JavaScript\" target=\"_blank\" rel=\"external\">Learning-JavaScript</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-JavaScript/issues/19\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-JavaScript/issues/19</a></p>\n<h2 id=\"HTML5\"><a href=\"#HTML5\" class=\"headerlink\" title=\"HTML5\"></a>HTML5</h2><p>前段时间 HTML5 规范已经定稿，不知道是颠覆还是昙花一现。不管怎样，建立起规范总是好事，接下来让市场来决定。</p>\n<h2 id=\"HTML5-带来了哪些新的变化\"><a href=\"#HTML5-带来了哪些新的变化\" class=\"headerlink\" title=\"HTML5 带来了哪些新的变化\"></a>HTML5 带来了哪些新的变化</h2><ul>\n<li>在结构层中， HTML5 添加了新的标记元素，如<code>&lt;section&gt;</code>、<code>&lt;nav&gt;</code>、<code>&lt;menu&gt;</code>、<code>&lt;header&gt;</code>、<code>&lt;footer&gt;</code>、<code>&lt;article&gt;</code>等，更加语义化，利于SEO；</li>\n<li>HTML5 还提供了更多交互与媒体元素，如 <code>&lt;canvas&gt;</code>、<code>&lt;audio&gt;</code>、<code>&lt;video&gt;</code>。</li>\n<li>表单得到了增强，新增了颜色拾取器、数据选择器、滑动条和进度条等。</li>\n<li>还有很多新元素带着自己的 JavaScript 和 DOM API。</li>\n<li>在行为层，HTML5 规定了 DOM 中每个新元素的交互方式、以及新的 API。</li>\n<li>表现层，CSS3的多个模块囊括了高级选择器、渐变、变换，还有动画。</li>\n<li>新 JavaScript 模块还包括其他模块：Geolocation、Storage、Drap-and-Drop、Socket以及多线程。</li>\n</ul>\n<h2 id=\"Modernizr\"><a href=\"#Modernizr\" class=\"headerlink\" title=\"Modernizr\"></a>Modernizr</h2><p>HTML5 尚未普及，有很多浏览器不支持，我们可以使用 Modernizr, Modernizr 是一个开源的 JavaScript 库，利用其富特性检测功能。可对 HTML5 文档进行更好的控制。</p>\n<p>Modernizr 不会给浏览器添加不支持的特性，能做的是为你提供一些不同的 CSS 类名以及特性检测（feature-detection）属性。</p>\n<p>添加 Modernizr 之后，它会修改 <code>&lt;html&gt;</code> 的 class 属性，基于可用的 html5 特性添加额外的类名。要使用 Modernizr 编写文档，通常都要给<code>&lt;html&gt;</code> 添加一个 no-js 类，利用这个类可以在浏览器不支持 JavaScript 的情况下应用 CSS 样式：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.no-js selector &#123;</span><br><span class=\"line\">    style porperties</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后， Modernizr 会检测浏览器可能支持的各种特性，并相应地添加类名 feature 或 no-feature，例如：<code>&lt;html class=&quot;canvas&quot;&gt;</code>或<code>&lt;html class=&quot;no-canvas&quot;&gt;</code>。根据这些类名， 可在 CSS 中 定义相应的增强和退化版本，改善用户体验。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.multiplebgs article p &#123;</span><br><span class=\"line\">/* 为支持多背景浏览器编写的样式*/</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">.no-multiplebgs article p &#123;</span><br><span class=\"line\">/* 为不支持多背景浏览器编写的后备样式*/</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Modernizr 库还提供了 JavaScript 特性检测对象，可在 DOM 脚本中直接使用：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (!Modernizr.inputtypes.date) &#123;</span><br><span class=\"line\">    createDatePicker(<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'birthday'</span>));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Modernizr 还可以帮助旧式浏览器处理 HTML5 新元素 如 <code>&lt;section&gt;</code>、<code>&lt;nav&gt;</code>、<code>&lt;menu&gt;</code>、<code>&lt;header&gt;</code>、<code>&lt;footer&gt;</code>、<code>&lt;article&gt;</code> 等。为使用这些新元素，只需要指定它们为块状元素:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">article</span>,<span class=\"selector-tag\">aside</span>,<span class=\"selector-tag\">footer</span>,<span class=\"selector-tag\">header</span>,<span class=\"selector-tag\">hgroup</span>,<span class=\"selector-tag\">nav</span>,<span class=\"selector-tag\">section</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>唯一的特例是 IE 必须用 JavaScript 创建未知元素：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"article\"</span>);</span><br></pre></td></tr></table></figure>\n<p>Modernizr.js 可在 <a href=\"http://modernizr.com/\" target=\"_blank\" rel=\"external\">http://modernizr.com/</a> 下载。记住一定要把此脚本放在<code>&lt;head&gt;</code> 元素中。这样可以在加载其他标记之前先加载它，以便它在文档呈现之前能够创建好新的 HTML5 元素.</p>\n<h2 id=\"Canvas\"><a href=\"#Canvas\" class=\"headerlink\" title=\"Canvas\"></a>Canvas</h2><p><code>&lt;Canvas&gt;</code>  元素可动态创建和操作图形推向。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">canvas</span> <span class=\"attr\">id</span>=<span class=\"string\">\"draw-in-me\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"120\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"40\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Powerd By HTML5 canvas<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">canvas</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>使用 <code>&lt;Canvas&gt;</code> 画一个圆角小黑盒子，带有2像素宽的白色描边<br>效果。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">draw</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> canvas = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"draw-in-me\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (canvas.getContext) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> ctx = canvas.getContent(<span class=\"string\">'2d'</span>);</span><br><span class=\"line\">        ctx.beginPath();</span><br><span class=\"line\">        ctx.moveTo(<span class=\"number\">120.0</span>,<span class=\"number\">32.0</span>);</span><br><span class=\"line\">        ctx.bezierCurveTo(<span class=\"number\">120.0</span>,<span class=\"number\">36.4</span>,<span class=\"number\">116.4</span>,<span class=\"number\">40.0</span>,<span class=\"number\">112.0</span>,<span class=\"number\">40.0</span>);</span><br><span class=\"line\">        ctx.lineTo(<span class=\"number\">8.0</span>,<span class=\"number\">40.0</span>);</span><br><span class=\"line\">        ctx.bezierCurveTo(<span class=\"number\">3.6</span>,<span class=\"number\">40.0</span>,<span class=\"number\">0.0</span>,<span class=\"number\">36.4</span>,<span class=\"number\">0.0</span>,<span class=\"number\">32.0</span>);</span><br><span class=\"line\">        ctx.lineTo(<span class=\"number\">0.0</span>,<span class=\"number\">8.0</span>);</span><br><span class=\"line\">        ctx.bezierCurveTo(<span class=\"number\">0.0</span>,<span class=\"number\">3.6</span>,<span class=\"number\">3.6</span>,<span class=\"number\">0.0</span>,<span class=\"number\">8.0</span>,<span class=\"number\">0.0</span>);</span><br><span class=\"line\">        ctx.lineTo(<span class=\"number\">120.0</span>,<span class=\"number\">32.0</span>);</span><br><span class=\"line\">        ctx.closePath();</span><br><span class=\"line\">        ctx.fill();</span><br><span class=\"line\">        ctx.lineWidth = <span class=\"number\">2.0</span>;</span><br><span class=\"line\">        ctx.strokeStyle = <span class=\"string\">\"rgb(255,255,255)\"</span>;</span><br><span class=\"line\">        ctx.stroke();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">window</span>.onload = draw;</span><br></pre></td></tr></table></figure>\n<p>todo 缺个彩色图像变为灰色图像的例子。</p>\n<p>有了 <code>&lt;Canvas&gt;</code> ,就可以在浏览器窗口绘制任何对象、任何像素了。当然，还能通过它来操作图像，或者创建令人眼花缭乱的界面元素。值得注意的<code>&lt;Canvas&gt;</code>和 Flash 不具备可访问性。</p>\n"},{"title":"前端学习第十四天 浅谈 BR 标签[2]","url":"http://padding.me/blog/2014/11/30/前端学习第十四天 浅谈 BR 标签[2]/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-JavaScript\" target=\"_blank\" rel=\"external\">Learning-JavaScript</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-JavaScript/issues/18\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-JavaScript/issues/18</a></p>\n<p>前端学习 第十四天 浅谈 BR 标签[2]</p>\n<p>昨天了解了 <code>&lt;br&gt;</code> 的语义和正确使用场景，今天咱们来了解下  <code>&lt;br&gt;</code>在各浏览器的表现，能不能使用 CSS 样式来改变其表现，能改变哪些样式，以及为什么只能改变这些样式，以及如何改变等问题。</p>\n<h2 id=\"lt-br-gt-在各浏览器的表现\"><a href=\"#lt-br-gt-在各浏览器的表现\" class=\"headerlink\" title=\"&lt;br&gt;在各浏览器的表现\"></a><code>&lt;br&gt;</code>在各浏览器的表现</h2><p>测试代码：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"zh-cmn-Hans\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>BR DEMO<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span><br><span class=\"line\">    * &#123;</span><br><span class=\"line\">        <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>我是一段测试文字</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span> 我来测试下 br 标签各浏览器表现</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>chrome 34.0.1847.131 m<br><img src=\"http://paddingme.qiniudn.com/chrome.PNG\" alt=\"\"></p>\n<p>firefox 33.1.1<br><img src=\"http://paddingme.qiniudn.com/firefox.PNG\" alt=\"\"></p>\n<p>IE6<br><img src=\"http://paddingme.qiniudn.com/IE6.PNG\" alt=\"\"><br>IE7<br><img src=\"http://paddingme.qiniudn.com/ie7.PNG\" alt=\"\"><br>IE8<br><img src=\"http://paddingme.qiniudn.com/ie8.PNG\" alt=\"\"><br>IE9<br><img src=\"http://paddingme.qiniudn.com/IE9.PNG\" alt=\"\"></p>\n<p>IE 11<br><img src=\"http://paddingme.qiniudn.com/ie11.PNG\" alt=\"\"></p>\n<p>综上我们可以得出结论：除了在 Firefox 下 <code>&lt;br&gt;</code> 宽度为0 高度为20px,其余各浏览器均为 宽高auto。</p>\n<h2 id=\"能否使用-CSS-样式来改变其表现\"><a href=\"#能否使用-CSS-样式来改变其表现\" class=\"headerlink\" title=\"能否使用 CSS 样式来改变其表现\"></a>能否使用 CSS 样式来改变其表现</h2><p><a href=\"http://stackoverflow.com/questions/899252/can-you-target-br-with-css\" target=\"_blank\" rel=\"external\">http://stackoverflow.com/questions/899252/can-you-target-br-with-css</a></p>\n<p>BR generates a line-break and it is only a line-break. As this element has no content, there are only few styles that make sense to apply on it, like clear or position. You can set BR’s border but you won’t see it as it has no visual dimension.</p>\n<p>由于 <code>&lt;br&gt;</code> 是个空元素，没有内容，只有少数的样式可以使用 如 <code>clear</code> 和<code>position</code>。当然可以为 <code>&lt;br&gt;</code> 设置 border, 但是你看不见。</p>\n<p>If you like to visually separate two sentences, then you probably want to use the horizontal ruler which is intended for this goal. Since you cannot change the markup, I’m afraid using only CSS you cannot achieve this.</p>\n<p>It seems, it has been already discussed on other forums. Extract from Re: Setting the height of a BR element using CSS:</p>\n<p>[T]his leads to a somewhat odd status for BR in that on the one hand it is not being treated as a normal element, but instead as an instance of \\A in generated content, but on the other hand it is being treated as a normal element in that (a limited subset of) CSS properties are being allowed on it.</p>\n<blockquote>\n<p>br  的奇怪在于：一方面它没有被当作一个正常的元素,而是作为生成内容的实例,但另一方面它被视为正常的元素(有限的子集)的CSS属性被允许。</p>\n</blockquote>\n<p>I also found a clarification in the CSS 1 specification (no higher level spec mentions it):</p>\n<p>在 CSS 1 specification 中也有描述：</p>\n<p>The current CSS1 properties and values cannot describe the behavior of the ‘BR’ element. In HTML, the ‘BR’ element specifies a line break between words. In effect, the element is replaced by a line break. Future versions of CSS may handle added and replaced content, but CSS1-based formatters must treat ‘BR’ specially.<br>当前CSS1属性和值不能描述的BR元素的行为。 在HTML中,词与词之间的BR元素指定一个换行符。 实际上,取而代之的元素是一个换行符。 CSS的未来版本可能处理添加和替换内容,但CSS1-based格式器必须BR的特别对待。 </p>\n<blockquote>\n<p>现在的 CSS1 属性和值不能描述 BR 元素的值。HTML中， 在词与词之间 BR 指定一个折行。实际上其作用被一个换行符取代。CSS的未来版本可能处理添加和替换内容,但CSS1-based格式器必须对 BR 特别对待<br>Grant Wagner’s tests show that there is no way to style BR as you can do with other elements. There is also a site online where you can test the results in your browser.</p>\n</blockquote>\n<p>In theory, HTML BR elements should also be fully styleable. In other words, anything you can apply to EM should also work on BR elements!</p>\n<p>.ba { width: 32px; height: 32px; border: 10px solid lime; background: fuchsia; }</p>\n<p>Before<br>After</p>\n<p>.bb { display: none; } /<em> So should not break line! </em>/<br>Before After</p>\n<p>Note. The UA stylesheet should use something along the lines of the following to support this element.</p>\n<p>   BR:before { content: “\\A” }</p>\n"},{"title":"【前端】【学习心得】第十三天浅谈 BR 标签","url":"http://padding.me/blog/2014/11/30/【前端】【学习心得】第十三天浅谈 BR 标签/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-JavaScript\" target=\"_blank\" rel=\"external\">Learning-JavaScript</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-JavaScript/issues/17\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-JavaScript/issues/17</a></p>\n<p>HTML 标签元素中<code>&lt;br&gt;</code>应用得场景并不多，我们是否真正了解<code>&lt;br&gt;</code> 元素的语义，其正确使用场景，是否可以用 CSS 来改变其样式，用来清除浮动到底对不对？让我们慢慢剖析<code>&lt;br&gt;</code> 元素，揭开它被忽视的面纱，一睹其神秘的容颜。</p>\n<h2 id=\"br-的语义\"><a href=\"#br-的语义\" class=\"headerlink\" title=\"br 的语义\"></a>br 的语义</h2><p>，我们来看看 W3C 对 <code>&lt;br&gt;</code> 的定义。</p>\n<blockquote>\n<p>The <code>&lt;br&gt;</code> element represents a line break.<br>This element must be used only for line breaks that are actually part of the<br>content:</p>\n<ul>\n<li>poems</li>\n<li>addresses</li>\n</ul>\n</blockquote>\n<p>由上可知： <code>&lt;br&gt;</code>元素表示换行，它必须只能被使用作换行，实际上常用于是诗、地址的一部分。</p>\n<p>再来看 MDN 上的定义:</p>\n<blockquote>\n<p>The HTML <code>&lt;br&gt;</code> Element (or HTML Line Break Element) produces a line break in text (carriage-return). It is useful for writing a poem or an address, where the division of lines is significant.</p>\n<p>Do not use <code>&lt;br&gt;</code> to increase the gap between lines of text; use the CSS margin property or the <code>&lt;p&gt;</code> element.</p>\n</blockquote>\n<p>意思基本一致：  <code>&lt;br&gt;</code>元素(或 HTML 换行符元素)在文本中产生一个折行(回车)。对于写诗和地址，非常有用，行与行的划分变得明显。<strong>不要使用 <code>&lt;br&gt;</code> 来增加行与行之间的间隙</strong>，应该使用 margin 属性或者<code>&lt;p&gt;</code>元素。</p>\n<p>另值得说明的是 <br> 是个空元素，到底要不要闭合呢，答案是不需要 HTML5 规范中也推荐不闭合（待查）。</p>\n<h2 id=\"lt-br-gt-的使用场景\"><a href=\"#lt-br-gt-的使用场景\" class=\"headerlink\" title=\"&lt;br&gt; 的使用场景\"></a><code>&lt;br&gt;</code> 的使用场景</h2><h3 id=\"正确使用场景\"><a href=\"#正确使用场景\" class=\"headerlink\" title=\"正确使用场景\"></a>正确使用场景</h3><p>从上述<code>&lt;br&gt;</code>的定义中， 我们可知 <code>&lt;br&gt;</code> 元素的使用场景很明显，只适合在文本中折行，且这个折行的目的是为了文本本身的需要。例如：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    一二三四五，</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    上山打老虎。</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    老虎不在家，</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    嗯哼就是他。</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>效果是这样的，熟悉 Markdown 的同学知道如果文本想要换行可以连续打两个空格继续输入（待验证），其实这就是一个<code>&lt;br&gt;</code><br><img src=\"http://paddingme.qiniudn.com/21.PNG\" alt=\" \"></p>\n<h3 id=\"错误使用场景一：用来增加文本行之间的间隙\"><a href=\"#错误使用场景一：用来增加文本行之间的间隙\" class=\"headerlink\" title=\"错误使用场景一：用来增加文本行之间的间隙\"></a>错误使用场景一：用来增加文本行之间的间隙</h3><p>用来增加文本之间的间隙并不是它的应有用途。<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>我想离一段文字远一点<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>我是一段被远离的文字<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p><img src=\"http://paddingme.qiniudn.com/22.PNG\" alt=\"\"></p>\n<p>这样使用是不对的，我们应该用 CSS 来做到增加多个文本间的距离（”margin-botton”或“margin-top”）。</p>\n<h3 id=\"错误使用场景二-用来清除浮动\"><a href=\"#错误使用场景二-用来清除浮动\" class=\"headerlink\" title=\"错误使用场景二: 用来清除浮动\"></a>错误使用场景二: 用来清除浮动</h3><p>除了被用来增加上下文本间的间距，我们还有一个错误——用<code>&lt;br&gt;</code>来清除浮动。<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"float：left\"</span>&gt;</span>我向左浮动了<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">br</span> <span class=\"attr\">style</span>=<span class=\"string\">\"\"</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>查是谁发明了br 用来清除浮动。</p>\n<p>首先这严重不符合<code>&lt;br&gt;</code>的语义，其次当浮动元素小于<code>&lt;br&gt;</code> 在浏览器中默认的高度时会出现一定的间隙，为了说清楚这个问题，我们来看个例子：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!doctype html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span><br><span class=\"line\">    <span class=\"selector-class\">.box</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">width</span>:<span class=\"number\">100px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.clear</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">clear</span>:both;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.red</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">background-color</span>: red;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"selector-class\">.green</span>&#123;</span><br><span class=\"line\">         <span class=\"attribute\">background-color</span>: green;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"box1\"</span><span class=\"attr\">class</span>=<span class=\"string\">\"box red\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"box2\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box green\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>这里没有浮动只有一个换行符，我们可以看到效果是这样的：<br><img src=\"http://paddingme.qiniudn.com/hh.PNG\" alt=\"\"></p>\n<p>现在我们 box1 浮动；在上面代码中 设置 <code>#box1 {flat:left}</code> 看下效果：<br><img src=\"http://paddingme.qiniudn.com/bb.PNG\" alt=\"\"></p>\n<p>如上 box1 浮动导致 <code>&lt;br&gt;</code> 和 box2 都上移。</p>\n<p>我们再给<code>&lt;br&gt;</code>加上 <code>class=&quot;clear&quot;</code><br><img src=\"http://paddingme.qiniudn.com/xx.PNG\" alt=\"\"></p>\n<p>这时候<code>&lt;br&gt;</code>清除浮动 换行符去哪儿了，我猜换行符在红色下面被遮盖了，在清除浮动之前，浮动的影响还存在，<code>&lt;br&gt;</code>clear之后影响才消除，所以 box2 才在下面的位置，意思即 <code>&lt;br&gt;</code> 虽然清除了浮动但它是受到了浮动的影响的。这也是为什么用空元素进行清楚浮动的原因，以及伪元素 after 清楚浮动的原因（待验证）。</p>\n<p><code>&lt;br&gt;</code>在各浏览器有一定的高度。将浮动元素高度设定很低，box1 浮动，<code>&lt;br&gt;</code> 清除 box1 浮动。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"red\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"float:left;width:10px;height:10px\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">br</span> <span class=\"attr\">class</span>=<span class=\"string\">\"clear\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box green\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>看下效果：<br><img src=\"http://paddingme.qiniudn.com/ss.PNG\" alt=\"\"></p>\n<p><code>&lt;br&gt;</code> 清除了浮动，仍然会占据一定的位置。可见这并没有达到我们想要的效果，我们想要的是 清除浮动元素之后，之后的元素可以正常紧挨着浮动元素（按正常 margin-top 计算 如果没有则紧挨），而现在凭白多了一段 <code>&lt;br&gt;</code> 的间隙，准确的说是多了浏览器下<code>&lt;br&gt;</code> 的高度减去浮动浮动的元素。</p>\n<p>综上我们要坚决抵制用 <code>&lt;br&gt;</code> 来清除浮动，原因有三:</p>\n<ul>\n<li>增加了没有意义的标签，增加了代码量。</li>\n<li>不符合<code>&lt;br&gt;</code> 的语义</li>\n<li>浮动元素高度小于浏览器下 <code>&lt;br&gt;</code> 高度时，得不到我们想要的清除效果。</li>\n</ul>\n<p>好了今天就到这里，明天我们将来了解下  <code>&lt;br&gt;</code>在各浏览器的表现，以及能不能使用 CSS 样式来改变其表现，能改变哪些样式，以及为什么只能改变这些样式，以及如何改变。</p>\n"},{"title":"流程图工具","url":"http://padding.me/blog/2014/11/28/流程图工具/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/fex-dream\" target=\"_blank\" rel=\"external\">fex-dream</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/fex-dream/fex-dream/issues/18\" target=\"_blank\" rel=\"external\">https://github.com/fex-dream/fex-dream/issues/18</a></p>\n<ul>\n<li>一个免费的在线作图工具，可多人协作，实时保存：<a href=\"https://www.processon.com/\" target=\"_blank\" rel=\"external\">https://www.processon.com/</a></li>\n<li>在线用 markdown 画流程图：<a href=\"https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#7-流程图\" target=\"_blank\" rel=\"external\">https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#7-流程图</a></li>\n<li>svg 流程图库：<a href=\"http://adrai.github.io/flowchart.js/\" target=\"_blank\" rel=\"external\">http://adrai.github.io/flowchart.js/</a></li>\n<li>这个还更萌：<a href=\"http://asciiflow.com/\" target=\"_blank\" rel=\"external\">http://asciiflow.com/</a></li>\n<li><a href=\"http://draw.io\" target=\"_blank\" rel=\"external\">http://draw.io</a></li>\n<li>chrome浏览器商店的Gliffy Diagrams  画图也非常棒。（20150125更新）</li>\n</ul>\n"},{"title":"【JavaScript】【学习心得】学习JavaScript 第十二天","url":"http://padding.me/blog/2014/11/28/【JavaScript】【学习心得】学习JavaScript 第十二天/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-JavaScript\" target=\"_blank\" rel=\"external\">Learning-JavaScript</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-JavaScript/issues/16\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-JavaScript/issues/16</a></p>\n<p>今天学习了下 第十一章 HTML5 只是对 HTML5 做了些介绍，很快就看完了，这里就不做笔记了。刚好有时间可以来研究下 JavaScript 中 <code>typeof</code> 和 <code>instanceOf</code> 的区别，在之前的文章我们多次用 <code>typeof</code> 进行类型判断。那么 <code>typeof</code> 和 <code>instanceOf</code> 有什么区别呢？</p>\n<h2 id=\"关于typeof\"><a href=\"#关于typeof\" class=\"headerlink\" title=\"关于typeof\"></a>关于typeof</h2><p><code>typeof</code>一元运算符，用来返回操作数类型的<strong>字符串</strong>。</p>\n<p><code>typeof</code>几乎不可能得到它们想要的结果。<code>typeof</code>只有一个实际应用场景，就是<strong>用来检测一个对象是否已经定义或者是否已经赋值</strong>。而这个应用却不是来检查对象的类型。</p>\n<table>\n<thead>\n<tr>\n<th>Value</th>\n<th>Class</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>“foo”</td>\n<td>String</td>\n<td>string</td>\n</tr>\n<tr>\n<td>new String(“foo”)</td>\n<td>String</td>\n<td>object</td>\n</tr>\n<tr>\n<td>1.2</td>\n<td>Number</td>\n<td>number</td>\n</tr>\n<tr>\n<td>new Number(1.2)</td>\n<td>Number</td>\n<td>object</td>\n</tr>\n<tr>\n<td>true</td>\n<td>Boolean</td>\n<td>boolean</td>\n</tr>\n<tr>\n<td>new Boolean(true)</td>\n<td>Boolean</td>\n<td>object</td>\n</tr>\n<tr>\n<td>new Date()</td>\n<td>Date</td>\n<td>object</td>\n</tr>\n<tr>\n<td>new Error()</td>\n<td>Error</td>\n<td>object</td>\n</tr>\n<tr>\n<td>[1,2,3]</td>\n<td>Array</td>\n<td>object</td>\n</tr>\n<tr>\n<td>new Array(1, 2, 3)</td>\n<td>Array</td>\n<td>object</td>\n</tr>\n<tr>\n<td>new Function(“”)</td>\n<td>Function</td>\n<td>function</td>\n</tr>\n<tr>\n<td>/abc/g</td>\n<td>RegExp</td>\n<td>object (function in Nitro/V8)</td>\n</tr>\n<tr>\n<td>new RegExp(“meow”)</td>\n<td>RegExp</td>\n<td>object (function in Nitro/V8)</td>\n</tr>\n<tr>\n<td>{}</td>\n<td>Object</td>\n<td>object</td>\n</tr>\n<tr>\n<td>new Object()</td>\n<td>Object</td>\n<td>object</td>\n</tr>\n</tbody>\n</table>\n<p>上面表格中，Type 一列表示 typeof 操作符的运算结果。可以看到，这个值在大多数情况下都返回 “object”。</p>\n<p>Class 一列表示对象的内部属性 [[Class]] 的值。</p>\n<p>JavaScript 标准文档中定义: [[Class]] 的值只可能是下面字符串中的一个： Arguments, Array, Boolean, Date, Error, Function, JSON, Math, Number, Object, RegExp, String.<br>为了获取对象的 [[Class]]，我们需要使用定义在 Object.prototype 上的方法 toString。</p>\n<p>JavaScript 标准文档只给出了一种获取 [[Class]] 值的方法，那就是使用 Object.prototype.toString。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">is</span>(<span class=\"params\">type, obj</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> clas = <span class=\"built_in\">Object</span>.prototype.toString.call(obj).slice(<span class=\"number\">8</span>, <span class=\"number\">-1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> obj !== <span class=\"literal\">undefined</span> &amp;&amp; obj !== <span class=\"literal\">null</span> &amp;&amp; clas === type;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">is(<span class=\"string\">'String'</span>, <span class=\"string\">'test'</span>); <span class=\"comment\">// true</span></span><br><span class=\"line\">is(<span class=\"string\">'String'</span>, <span class=\"keyword\">new</span> <span class=\"built_in\">String</span>(<span class=\"string\">'test'</span>)); <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<p>上面例子中，Object.prototype.toString 方法被调用，this 被设置为了需要获取 [[Class]] 值的对象。</p>\n<p>注：Object.prototype.toString 返回一种标准格式字符串，所以上例可以通过 slice 截取指定位置的字符串，如下所示：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Object</span>.prototype.toString.call([])    <span class=\"comment\">// \"[object Array]\"</span></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.prototype.toString.call(&#123;&#125;)    <span class=\"comment\">// \"[object Object]\"</span></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.prototype.toString.call(<span class=\"number\">2</span>)    <span class=\"comment\">// \"[object Number]\"</span></span><br></pre></td></tr></table></figure>\n<p>注：这种变化可以从 IE8 和 Firefox 4 中看出区别，如下所示：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// IE8</span></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.prototype.toString.call(<span class=\"literal\">null</span>)    <span class=\"comment\">// \"[object Object]\"</span></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.prototype.toString.call(<span class=\"literal\">undefined</span>)    <span class=\"comment\">// \"[object Object]\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Firefox 4</span></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.prototype.toString.call(<span class=\"literal\">null</span>)    <span class=\"comment\">// \"[object Null]\"</span></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.prototype.toString.call(<span class=\"literal\">undefined</span>)    <span class=\"comment\">// \"[object Undefined]\"</span></span><br></pre></td></tr></table></figure>\n<p>测试为定义变量</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typeof</span> foo !== <span class=\"string\">'undefined'</span></span><br></pre></td></tr></table></figure>\n<p>上面代码会检测 foo 是否已经定义；如果没有定义而直接使用会导致 ReferenceError 的异常。 这是 typeof 唯一有用的地方。</p>\n<p><strong>结论</strong>: 为了检测一个对象的类型，强烈推荐使用 Object.prototype.toString 方法； 因为这是唯一一个可依赖的方式。正如上面表格所示，typeof 的一些返回值在标准文档中并未定义， 因此不同的引擎实现可能不同。</p>\n<p>除非为了检测一个变量是否已经定义，我们应尽量避免使用 <code>typeof</code> 操作符。</p>\n<table>\n<thead>\n<tr>\n<th>x</th>\n<th>typeof x</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>undefined</td>\n<td>“undefined”</td>\n</tr>\n<tr>\n<td>true 或false</td>\n<td>“boolean”</td>\n</tr>\n<tr>\n<td>任意数字或者NaN</td>\n<td>“number”</td>\n</tr>\n<tr>\n<td>任意字符串</td>\n<td>“string”</td>\n</tr>\n<tr>\n<td>函数对象(在ECMA-262术语中,指的是实现了[[Call]] 的对象)</td>\n<td>“function”</td>\n</tr>\n<tr>\n<td>任意内置对象（非函数）</td>\n<td>“object”  </td>\n</tr>\n<tr>\n<td>数组</td>\n<td>“obeject”</td>\n</tr>\n<tr>\n<td>null</td>\n<td>“object” </td>\n</tr>\n<tr>\n<td>宿主对象(JS引擎内置对象,而不是DOM或者其他提供的)</td>\n<td>由编译器各自实现的字符串，但不是”undefined”,”number”,”boolean”,”number”,”string”。 </td>\n</tr>\n<tr>\n<td>正则表达式</td>\n<td>各浏览器表现不一</td>\n</tr>\n</tbody>\n</table>\n<p>如果想将null和对象区分开，则必须针对特殊值显式检测。如：<code>my_value===null</code>。对于宿主对象来说，typeof 有可能并不返回 ‘object’,而返回字符串。但实际上客户端  js 中的大多数宿主对象都是 ‘object’ 类型。对于所有内置可执行对象进行 typeof 运算都将返回 “function”。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Numbers</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"number\">37</span> === <span class=\"string\">'number'</span>;</span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"number\">3.14</span> === <span class=\"string\">'number'</span>;</span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"built_in\">Math</span>.LN2 === <span class=\"string\">'number'</span>;</span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"literal\">Infinity</span> === <span class=\"string\">'number'</span>;</span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"literal\">NaN</span> === <span class=\"string\">'number'</span>; <span class=\"comment\">// 尽管NaN是\"Not-A-Number\"的缩写,意思是\"不是一个数字\"</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"built_in\">Number</span>(<span class=\"number\">1</span>) === <span class=\"string\">'number'</span>; <span class=\"comment\">// 不要这样使用!</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Strings</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"string\">\"\"</span> === <span class=\"string\">'string'</span>;</span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"string\">\"bla\"</span> === <span class=\"string\">'string'</span>;</span><br><span class=\"line\"><span class=\"keyword\">typeof</span> (<span class=\"keyword\">typeof</span> <span class=\"number\">1</span>) === <span class=\"string\">'string'</span>; <span class=\"comment\">// typeof返回的肯定是一个字符串</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"built_in\">String</span>(<span class=\"string\">\"abc\"</span>) === <span class=\"string\">'string'</span>; <span class=\"comment\">// 不要这样使用!</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Booleans</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"literal\">true</span> === <span class=\"string\">'boolean'</span>;</span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"literal\">false</span> === <span class=\"string\">'boolean'</span>;</span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"built_in\">Boolean</span>(<span class=\"literal\">true</span>) === <span class=\"string\">'boolean'</span>; <span class=\"comment\">// 不要这样使用!</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Undefined</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"literal\">undefined</span> === <span class=\"string\">'undefined'</span>;</span><br><span class=\"line\"><span class=\"keyword\">typeof</span> blabla === <span class=\"string\">'undefined'</span>; <span class=\"comment\">// 一个未定义的变量,或者一个定义了却未赋初值的变量</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Objects</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> &#123;a:<span class=\"number\">1</span>&#125; === <span class=\"string\">'object'</span>;</span><br><span class=\"line\"><span class=\"keyword\">typeof</span> [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>] === <span class=\"string\">'object'</span>; </span><br><span class=\"line\"><span class=\"comment\">// 使用Array.isArray或者Object.prototype.toString.call方法</span></span><br><span class=\"line\"><span class=\"comment\">//可以分辨出一个数组和真实的对象</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>() === <span class=\"string\">'object'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Boolean</span>(<span class=\"literal\">true</span>) === <span class=\"string\">'object'</span> <span class=\"comment\">// 令人困惑.不要这样使用</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Number</span>(<span class=\"number\">1</span>) === <span class=\"string\">'object'</span> <span class=\"comment\">// 令人困惑.不要这样使用</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"keyword\">new</span> <span class=\"built_in\">String</span>(<span class=\"string\">\"abc\"</span>) === <span class=\"string\">'object'</span>;  <span class=\"comment\">// 令人困惑.不要这样使用</span></span><br><span class=\"line\"><span class=\"comment\">// Functions</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;&#125; === <span class=\"string\">'function'</span>;</span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"built_in\">Math</span>.sin === <span class=\"string\">'function'</span>;</span><br></pre></td></tr></table></figure>\n<h2 id=\"关于instanceof\"><a href=\"#关于instanceof\" class=\"headerlink\" title=\"关于instanceof\"></a>关于instanceof</h2><p>instanceof 左操作数是一个类，右操作数是标识对象的类。如果左侧的对象是右侧类的实例，则返回true.而js中对象的类是通过初始化它们的构造函数来定义的。即 instanceof 的右操作数应当是一个函数。所有的对象都是 object 的实例。如果左操作数不是对象，则返回 false ,如果右操作数不是函数，则抛出 typeError。 </p>\n<p>instanceof 运算符是用来测试一个对象是否在其原型链原型构造函数的属性。其语法是<code>object instanceof constructor</code></p>\n<p>instanceof 操作符用来比较两个操作数的构造函数。只有在比较自定义的对象时才有意义。 如果用来比较内置类型，将会和 typeof 操作符 一样用处不大。</p>\n<p>比较自定义对象</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Foo</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Bar</span>(<span class=\"params\"></span>) </span>&#123;&#125;</span><br><span class=\"line\">Bar.prototype = <span class=\"keyword\">new</span> Foo();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">new</span> Bar() <span class=\"keyword\">instanceof</span> Bar; <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> Bar() <span class=\"keyword\">instanceof</span> Foo; <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 如果仅仅设置 Bar.prototype 为函数 Foo 本身，而不是 Foo 构造函数的一个实例</span></span><br><span class=\"line\">Bar.prototype = Foo;</span><br><span class=\"line\"><span class=\"keyword\">new</span> Bar() <span class=\"keyword\">instanceof</span> Foo; <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure>\n<p>instanceof 比较内置类型</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">String</span>(<span class=\"string\">'foo'</span>) <span class=\"keyword\">instanceof</span> <span class=\"built_in\">String</span>; <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">String</span>(<span class=\"string\">'foo'</span>) <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Object</span>; <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'foo'</span> <span class=\"keyword\">instanceof</span> <span class=\"built_in\">String</span>; <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"string\">'foo'</span> <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Object</span>; <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure>\n<p>有一点需要注意，instanceof 用来比较属于不同 JavaScript 上下文的对象（比如，浏览器中不同的文档结构）时将会出错， 因为它们的构造函数不会是同一个对象。</p>\n<p>结论:instanceof 操作符应该仅仅用来比较来自同一个 JavaScript 上下文的自定义对象。 正如 typeof 操作符一样，任何其它的用法都应该是避免的。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">C</span>(<span class=\"params\"></span>)</span>&#123;&#125; <span class=\"comment\">// 定义一个构造函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">D</span>(<span class=\"params\"></span>)</span>&#123;&#125; <span class=\"comment\">// 定义另一个构造函数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> o = <span class=\"keyword\">new</span> C();</span><br><span class=\"line\">o <span class=\"keyword\">instanceof</span> C; <span class=\"comment\">// true, 因为Object.getPrototypeOf(o) === C.prototype</span></span><br><span class=\"line\">o <span class=\"keyword\">instanceof</span> D; <span class=\"comment\">// false, D的原型不在o 的原型链上</span></span><br><span class=\"line\">o <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Object</span>; <span class=\"comment\">// true, because:</span></span><br><span class=\"line\">C.prototype <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Object</span> <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\">C.prototype = &#123;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> o2 = <span class=\"keyword\">new</span> C();</span><br><span class=\"line\">o2 <span class=\"keyword\">instanceof</span> C; <span class=\"comment\">// true</span></span><br><span class=\"line\">o <span class=\"keyword\">instanceof</span> C; <span class=\"comment\">// false, C的原型不在o 的原型链上</span></span><br><span class=\"line\"></span><br><span class=\"line\">D.prototype = <span class=\"keyword\">new</span> C(); <span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> o3 = <span class=\"keyword\">new</span> D();</span><br><span class=\"line\">o3 <span class=\"keyword\">instanceof</span> D; <span class=\"comment\">// true</span></span><br><span class=\"line\">o3 <span class=\"keyword\">instanceof</span> C; <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> myString = <span class=\"keyword\">new</span> <span class=\"built_in\">String</span>();</span><br><span class=\"line\"><span class=\"keyword\">var</span> myDate = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">myString <span class=\"keyword\">instanceof</span> <span class=\"built_in\">String</span>; <span class=\"comment\">//  true</span></span><br><span class=\"line\">myString <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Object</span>; <span class=\"comment\">//  true</span></span><br><span class=\"line\">myString <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Date</span>;   <span class=\"comment\">//  false</span></span><br><span class=\"line\"></span><br><span class=\"line\">myDate <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Date</span>;     <span class=\"comment\">//  true</span></span><br><span class=\"line\">myDate <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Object</span>;   <span class=\"comment\">//  true</span></span><br><span class=\"line\">myDate <span class=\"keyword\">instanceof</span> <span class=\"built_in\">String</span>;   <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Car</span>(<span class=\"params\">make, model, year</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.make = make;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.model = model;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.year = year;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> mycar = <span class=\"keyword\">new</span> Car(<span class=\"string\">\"Honda\"</span>, <span class=\"string\">\"Accord\"</span>, <span class=\"number\">1998</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> a = mycar <span class=\"keyword\">instanceof</span> Car;    <span class=\"comment\">// returns true</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> b = mycar <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Object</span>; <span class=\"comment\">// returns true</span></span><br></pre></td></tr></table></figure>\n"},{"title":"【JavaScript】【学习心得】学习JavaScript 第十一天","url":"http://padding.me/blog/2014/11/27/【JavaScript】【学习心得】学习JavaScript 第十一天/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-JavaScript\" target=\"_blank\" rel=\"external\">Learning-JavaScript</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-JavaScript/issues/15\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-JavaScript/issues/15</a></p>\n<h2 id=\"Ajax\"><a href=\"#Ajax\" class=\"headerlink\" title=\"Ajax\"></a>Ajax</h2><h3 id=\"Ajax-是什么\"><a href=\"#Ajax-是什么\" class=\"headerlink\" title=\"Ajax 是什么\"></a>Ajax 是什么</h3><p>Ajax 全称为 Asynchronous JavaScript and XML（异步 JavaScript 和 XML），是一种创建交互式网页应用的网页开发技术。简单点说就是以往Web 应用涉及大量的页面刷新：用户点击某个链接，请求发送回服务器，然后服务器根据用户的操作再返回新页面。尽管是网页页面一小部分的变化，也会刷新页面和重新加载整个页面，诸如页面logo,导航，footer 区域等。而使用 Ajax 就可以做到只更新页面中的一小部分，而不用刷新整个页面。</p>\n<h3 id=\"Ajax-原理\"><a href=\"#Ajax-原理\" class=\"headerlink\" title=\"Ajax 原理\"></a>Ajax 原理</h3><p>Ajax 的原理简单来说通过 XmlHttpRequest 对象来向服务器发<strong>异步请求</strong>，从服务器获得数据，然后用 JavaScript来操作 DOM 而更新页面。这其中最关键的一步就是从服务器获得请求数据。<br>以往我们浏览网页的原理是由 Client 向 Server 提交页面申请，再由 Server 将申请通过 HTTP 传回给 Client 生成浏览页面：</p>\n<p><img src=\"http://yianbin.qiniudn.com/fe-ajax-a.png\" alt=\"Ajax 原理图\"></p>\n<p>使用 Ajax 后的工作原理如下图，可见通过 Ajax 在用户交互方面有了很大改进，用户可以不用为提交了 Form 而长时间等待服务器应答，而且通过 Ajax 也可以开发出华丽的 Web 交互页面。</p>\n<p><img src=\"http://yianbin.qiniudn.com/fe-ajax-b.png\" alt=\"Ajax 原理图\"></p>\n<p>Ajax 的适用范围：它依赖 JavaScript，有可能有浏览器不支持，另搜索引擎的蜘蛛程序也不会抓取相关内容。</p>\n<h3 id=\"XMLHttpRequest\"><a href=\"#XMLHttpRequest\" class=\"headerlink\" title=\"XMLHttpRequest\"></a>XMLHttpRequest</h3><p>Ajax 技术的核心是 XMLHttpRequest 对象，它充当着浏览器中的脚本（客户端）与服务器之间的中间人的角色。</p>\n<p>由于XXX 的 IE 浏览器 实现的 XMLHttp 方式不一样，我们有必要再一次来兼容下。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getHTTPObject</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> XMLHttpRequest == <span class=\"string\">\"undefined\"</span>) &#123;</span><br><span class=\"line\">    XMLHttpRequest = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">try</span> &#123; <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> ActiveXObject(<span class=\"string\">\"Msxml2.XMLHTTP.6.0\"</span>);&#125;</span><br><span class=\"line\">        <span class=\"keyword\">catch</span> (e) &#123;&#125;</span><br><span class=\"line\">      <span class=\"keyword\">try</span> &#123; <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> ActiveXObject(<span class=\"string\">\"Msxml2.XMLHTTP.3.0\"</span>);&#125;</span><br><span class=\"line\">        <span class=\"keyword\">catch</span> (e) &#123;&#125;</span><br><span class=\"line\">      <span class=\"keyword\">try</span> &#123; <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> ActiveXObject(<span class=\"string\">\"Msxml2.XMLHTTP\"</span>);&#125;</span><br><span class=\"line\">        <span class=\"keyword\">catch</span> (e) &#123;&#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>为了模拟 Ajax 服务器请求，我们首先建立一个 HTML 页面<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"zh-cmn-Hans\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Ajax DEMO<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"new\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"addLoadEvent.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"1-7-2.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>命名为 1-7-2.html,在同级文件夹下建立一个1-7-2.txt里随便输入一些内容。</p>\n<p>XMLHttpRequest 对象常用方法为 open 方法，它用来指定服务器上将要访问的文件，指定请求类型：GET、POST 或 SEND。这个方法第三个参数用于指定请求是否以异步方式发送和处理。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getHTTPObject</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> XMLHttpRequest == <span class=\"string\">\"undefined\"</span>) &#123;</span><br><span class=\"line\">    XMLHttpRequest = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">try</span> &#123; <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> ActiveXObject(<span class=\"string\">\"Msxml2.XMLHTTP.6.0\"</span>);&#125;</span><br><span class=\"line\">        <span class=\"keyword\">catch</span> (e) &#123;&#125;</span><br><span class=\"line\">      <span class=\"keyword\">try</span> &#123; <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> ActiveXObject(<span class=\"string\">\"Msxml2.XMLHTTP.3.0\"</span>);&#125;</span><br><span class=\"line\">        <span class=\"keyword\">catch</span> (e) &#123;&#125;</span><br><span class=\"line\">      <span class=\"keyword\">try</span> &#123; <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> ActiveXObject(<span class=\"string\">\"Msxml2.XMLHTTP\"</span>);&#125;</span><br><span class=\"line\">        <span class=\"keyword\">catch</span> (e) &#123;&#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getNewContent</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> request = <span class=\"keyword\">new</span> getHTTPObject();</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (request) &#123;</span><br><span class=\"line\">    request.open(<span class=\"string\">\"GET\"</span>,<span class=\"string\">\"1-7-2.text\"</span>,<span class=\"literal\">true</span>);</span><br><span class=\"line\">    request.onreadystatechange = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (request.readyState == <span class=\"number\">4</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> para = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"p\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> txt = <span class=\"built_in\">document</span>.createTextNode(request.responseText);</span><br><span class=\"line\">        para.appendChild(txt);</span><br><span class=\"line\">        <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"new\"</span>).appendChild(para);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    request.send(<span class=\"literal\">null</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    alert (<span class=\"string\">\"对不起，您的浏览器不支持 XMLHttpRequest!\"</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">addLoadEvent(getNewContent);</span><br></pre></td></tr></table></figure>\n<p>浏览器加载 HTML 页面 没有反应，为什么呢。把它放在tomcat webapp 目录下 启动你的tomcat 然后再试试。Ajax 需要向服务器发起请求，而不是单纯的像我们之前用浏览器打开一个静态的 HTML 页面<br>如图所示：是不是很帅气的出现了。</p>\n<p><img src=\"http://paddingme.qiniudn.com/ajax.PNG\" alt=\"tomcat webapp 文件目录\"><br><img src=\"http://paddingme.qiniudn.com/demo.PNG\" alt=\"页面 demo\"></p>\n<p>其中上述的 onreadystatechange 是一个事件处理函数。它会在服务器给 XMLHttpRequest 对象送回响应时的时候被触发执行。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">request.onreadystatechange = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//处理响应</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>在你 onreadystatechange 指定函数引用是，不要在函数名后加括号（表示立即调用），我们的目的是指向把函数自身的引用（而不是函数结果）赋值给 onreadystatechange 属性。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">request.onreadystatechange = dosomething;</span><br></pre></td></tr></table></figure></p>\n<p>在指定了请求的目标之后，也明确了如何处理响应之后，用 send 方法发送请求。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">request.send(<span class=\"literal\">null</span>);</span><br></pre></td></tr></table></figure></p>\n<p>如果 浏览器不支持 XMLHttpRequest 对象 还需要做处理。</p>\n<p>服务器在向 XMLHttpRequest 对象返回响应时，该对象有许多属性可用，浏览器会在不同阶段更新 readystate 属性的值：</p>\n<ul>\n<li>0 表示未初始化</li>\n<li>1 表示正在加载</li>\n<li>2 表示加载完毕</li>\n<li>3 表示正在交互</li>\n<li>4 表示完成(此时，可以访问服务器发回来的数据了)</li>\n</ul>\n<p>访问服务器发回来的数据有两个属性：</p>\n<ul>\n<li>responseText 属性：用于保存文本字符串形式的数据；</li>\n<li>responseXML 属性：用于保存 Content-Type 头部中指定为 “text/xml” 的数据，其实为一个 DocumentFragment 对象, 可用各种 DOM 方法来处理此对象。</li>\n</ul>\n<p>在使用 Ajax 一定要注意 <strong>同源策略</strong>。 使用 XMLHttpRequest 对象发送的请求只能访问与其所在的 HTML 处于同一个域中的数据，不能向其他域发送请求。</p>\n<p>注意 Ajax 是异步请求，异步请求很容易忽略其异步性——脚本的执行不会等 send 的响应，而是会继续执行。</p>\n<h3 id=\"渐进增强的使用-Ajax\"><a href=\"#渐进增强的使用-Ajax\" class=\"headerlink\" title=\"渐进增强的使用 Ajax\"></a>渐进增强的使用 Ajax</h3><p><strong>Ajax 应用主要依赖于服务器端处理，而非客户端处理</strong>，实际上是服务器端的脚本完成了绝大部分工作。XMLHttpRequest 对象作为浏览器与服务器之间的“中间人”，它只是负责传递和响应。如果把它拿掉，浏览器与服务器之间的请求和响应应该继续完成，只不过需要的时间可能会长点。<br>构建 Ajax 网站的最好方法是先构建一个常规的网站，然后渐进增强的使用 Ajax（Hijax）。</p>\n<p>p.s.:其中部分内容引自：<a href=\"https://github.com/infp/Front-end-Interview/blob/master/source/javascript.md#21%E8%AF%B7%E5%B0%BD%E5%8F%AF%E8%83%BD%E8%AF%A6%E5%B0%BD%E7%9A%84%E8%A7%A3%E9%87%8A-ajax-%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86\" target=\"_blank\" rel=\"external\">AJAX 的工作原理</a></p>\n"},{"title":"【前端】【学习心得】如何学习前端之菜鸟愚见第十天","url":"http://padding.me/blog/2014/11/26/【前端】【学习心得】如何学习前端之菜鸟愚见第十天/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-JavaScript\" target=\"_blank\" rel=\"external\">Learning-JavaScript</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-JavaScript/issues/14\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-JavaScript/issues/14</a></p>\n<p>首先感谢楼上各位的同学老师的评论和鼓励。关于赵老师所说，后期我会分享我的一些学习经验、遇到问题的解决方法和解决方式。</p>\n<p>好吧，今天就先扯上一点吧。</p>\n<p>我学前端不久，目前还是一个菜鸟。现在CSS HTML 算是入门了，自己的JavaScript 以致于错过了很多很好的机会。刚好看到 Imooc 的90天慕女神助力计划，这正是一个再好不过的计划，一直喜欢 imooc， 也看过 imooc 的不少视频，视频都做得非常用心，不论从选聘的讲师还是后期编辑都棒棒哒。当然我不是一个那么纯粹的人，一方面想参加这个活动，养成一个良好的学习习惯，可以借助这个机会啃下 JavaScript 这块烂骨头，另一方面不是还有很多灰常昂贵而我又灰常想买的好书再等着，再者，一个人孤军奋战往往会被自己的惰性打败，一群人抱团取暖，相互促进就不一样了，会有种让你越战越勇的激情，即使是现在每天工作很久，晚上回来还要写一堆论文，我还是会坚持拿出1个小时到1个半小时来学习到这里更新笔记，然后熬夜写论文到夜里一点多。所以我和朋友说过，如果我是Imooc 的老板，我得给想出“90天慕女神助力计划” 的产品长工资，这是件非常好的事，帮助更多的同学养成学习的习惯，也给Imooc 带来更多的 pv，和长久稳定的用户群。另一方面也和 Imooc 的运营同学提过很多意见，相信攻城师同学也在奋夜加班，期待一个更好的 阅读体验 和 编辑体验的Imooc（一定要支持 markdown 语法啊！）。</p>\n<p>好了前面是废话。作为和我一样的想学前端的新手，我有一些自己的哦经验可以分享给大家。</p>\n<ol>\n<li><p>HTML CSS JavaScript 我先学哪门？不用想了，当然一起学了。前面的文章中，一直有着一个概念叫做结构、表现、行为分离。结构即是 HTML ,CSS 可以更改页面样式，即是表现，而页面的动态交互部分即行为交给 JavaScript，他们三个是相辅相成的，是必须都要努力掌握的。如果你看过很多前端招聘，通常都会说 只会html，css可是不行的，或者是 只会 Jquery （一种 JavaScript框架）不会 JavaScript 也是不行的。</p>\n<p><strong>前端入门容易</strong>，可能花不了多长时间你也可以切页面做一个看上去像模像样的网站，但是当你觉得自己一只脚踏入前端大门的大门，打开另一个世界的时候，你会看到这个世界是一篇汪洋大海，就说 HTML，你是否知道 每个 HTML 标签的语义，正确的使用场景吗？你会 HTML5 吗，HTML5 里又可以做游戏 有N 多API等着你。然后 JavaScript 学完了，学 Jquery，AngularJs?还有前端工程化，自动化部署。性能优化等着你，Grunt，bower，fis 等等。<br>CSS 学完 CSS2 还有CSS3等着你，还有 SVG 等着你可以做各种各样酷炫的效果。哦，别忘了，作为一个前端攻城师，你还要和IE 打交道，兼容性会让你头痛。<br><strong>前端要学的东西太多，知识更新特别快。</strong></p>\n<p>那我们是不是应该怕了，如果你想从事前端，决心做好前端，让你做的页面一级棒，有着完美的交互体验，你喜欢接受新知识，你喜欢克服困难，那真没什么怕的。“既然选择了远方，便只顾风雨兼程。” 我们首先要做的就是 <strong>打好基础</strong>，学好 CSS,HTML,JavaScript。其他的等你学好这些再找个自己感兴趣的方向继续努力学下去吧。</p>\n</li>\n<li><p>我是看视频学还是看书学。个人感觉还是先看书，书中的知识体系更具体更连贯。视频多是技术性较强的技能学习。当然因人而异，选择适合你的学习方式。推荐的书， CSS 推荐 《CSS 权威指南》，后期可以看 《CSS 禅意花园》和大漠的《CSS3 图解》,《写给大家看的设计书》也是作为一个切图仔必看的书哦。HTML 目前没什么推荐的,如果一点前端基础都没有的话，可以看《Head First HTML》系列，浅显易懂还很有趣。JavaScript 可以先看 《JavaScript DOM 编程艺术》掌握基本的 DOM 基础，非常棒的一本书，其次开始看 《JavaScript JavaScript 高级程序设计》 ，《JavaScript 语言精粹》（非常薄的一本书，也是JavaScript必看的书），还有就是犀牛书了《JavaScript 权威指南》（大部头，可以当字典来看 哈哈），这几本书可以反复看，交叉着看。当然看书的同时，<strong>多敲代码</strong>是非常非常有必要的，眼过千遍，不如手敲一遍！这个过程中会让你积累很多编码经验和 debug 能力。</p>\n</li>\n<li><p>掌握一个编辑器，自然首推 sublime, 学会他让你健步如飞，敲代码神采飞扬。</p>\n</li>\n<li><p>写博客，读很多书，只是输入，要擅于总结归纳，把所学的知识输出，写博客，读书笔记无疑是最好的输出。等一定积累了，就可以写一些属于自己的高大上的东西了。写博客，自然推荐掌握 markdown 语法，写起博客来也是倍儿爽。至于在哪儿写博客，要不要建自己的网站都是个人爱好，选择你喜欢的方式，可以在 imooc，segmentfault.com,简书，github 等等都可以。</p>\n</li>\n<li><p>掌握 Github，github 现在已然成为程序员的简历了，不信你去看各种程序员招聘，通常会写有 github 加分。<br>当然这里指的 有 github 不是有 github 账号，是你有在 github 在记录下些什么，可以是你的代码，你的博客，等等。</p>\n</li>\n</ol>\n<p>恩，就写这么多，往高了写我也不会了。以上都是个人愚见，如有不对，欢迎讨论。一起学习，相互进步。看到在imooc  QQ群里的讨论，深以为然，好好珍惜在学校里的时光努力学习，找到自己以后想要一直做到事。加油，-。-</p>\n<p>今天就不更新学习笔记了，待回还得写论文。但是我会看完再睡的。笔记明天继续，以后我会多分享一些经验，问题和解决方法的。</p>\n"},{"title":"【JavaScript】【学习心得】学习JavaScript 第九天","url":"http://padding.me/blog/2014/11/25/【JavaScript】【学习心得】学习JavaScript 第九天/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-JavaScript\" target=\"_blank\" rel=\"external\">Learning-JavaScript</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-JavaScript/issues/13\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-JavaScript/issues/13</a></p>\n<h1 id=\"用-JavaScript-实现动画效果\"><a href=\"#用-JavaScript-实现动画效果\" class=\"headerlink\" title=\"用 JavaScript 实现动画效果\"></a>用 JavaScript 实现动画效果</h1><h2 id=\"动画的基础知识\"><a href=\"#动画的基础知识\" class=\"headerlink\" title=\"动画的基础知识\"></a>动画的基础知识</h2><p>如前文所说，如果我们想随着时间的变化而不断改变某个元素的样式，目前 CSS 尚且无能为力，只能使用 JavaScript。JavaScript 能够按照预定的时间间隔重复调用一个函数，而这意味着我们可以随着世家的推移而不断改变某个某个元素的样式。</p>\n<p>动画是样式随时间变化的完美例子之一，简单的说，动画就是让元素的位置随着时间而不断的发生变化。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">id</span>=<span class=\"string\">\"message\"</span>&gt;</span>Whee!<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">positionMessage</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!<span class=\"built_in\">document</span>.getElementById) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"message\"</span>)) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> elem = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"message\"</span>);</span><br><span class=\"line\">  elem.style.position = <span class=\"string\">\"absolute\"</span>;</span><br><span class=\"line\">  elem.style.left = <span class=\"string\">\"50px\"</span>;</span><br><span class=\"line\">  elem.style.top = <span class=\"string\">\"100px\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">addLoadEvent(positionMessage);</span><br></pre></td></tr></table></figure>\n<p>加载之后立刻发生变化。</p>\n<h3 id=\"时间\"><a href=\"#时间\" class=\"headerlink\" title=\"时间\"></a>时间</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setTimeout(<span class=\"string\">\"function\"</span>,interval);<span class=\"comment\">// \"function\" 为函数名，interval 为以毫秒为单位的时间</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">moveMessage</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"built_in\">document</span>.getElementById) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"message\"</span>)) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> elem = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"message\"</span>);</span><br><span class=\"line\">    elem.style.left = <span class=\"string\">\"500px\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">positionMessage</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!<span class=\"built_in\">document</span>.getElementById) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"message\"</span>)) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> elem = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"message\"</span>);</span><br><span class=\"line\">  elem.style.position = <span class=\"string\">\"absolute\"</span>;</span><br><span class=\"line\">  elem.style.left = <span class=\"string\">\"250px\"</span>;</span><br><span class=\"line\">  elem.style.top = <span class=\"string\">\"100px\"</span>;</span><br><span class=\"line\">  movement = setTimeout(<span class=\"string\">\"moveMessage()\"</span>,<span class=\"number\">5000</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">addLoadEvent(positionMessage);</span><br></pre></td></tr></table></figure>\n<p>取消某个正在排队等待执行的函数：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> variable = setTimeout(<span class=\"string\">\"function\"</span>,interval);</span><br><span class=\"line\">clearTimeout(variable);</span><br></pre></td></tr></table></figure>\n<p>在线 DEMO: <a href=\"http://codepen.io/paddingme/pen/jEPBqg\" target=\"_blank\" rel=\"external\">http://codepen.io/paddingme/pen/jEPBqg</a></p>\n<h2 id=\"实用的动画\"><a href=\"#实用的动画\" class=\"headerlink\" title=\"实用的动画\"></a>实用的动画</h2><p>看完实用的动画一节之后，发现这里的其实和我之前学习的 imooc 的视频教程<a href=\"http://www.imooc.com/learn/65\" target=\"_blank\" rel=\"external\">回到顶部效果</a> 是一样的。建议大家观看学习，<br>这里记录下我学这节课的笔记，供大家参考：</p>\n<p>在浏览网页时我们会发现很多页面太长，需要通过拖动滚动条才能回到顶部，这个用户体验并不好，所以很多网站会在窗口右下角出现一个回到<strong>回到顶部</strong>的按钮，点击它便会回到顶部。怎么制作回到顶部这个效果呢，可以通过两种方法。</p>\n<ul>\n<li>使用<strong>锚连接</strong>，使用<code>&lt;a href=&quot;#&quot;&gt;&lt;/a&gt;</code>标签默认返回顶部。这种使用锚链接回到顶部效果:<ul>\n<li>优点：简单快速，没有任何兼容性问题;</li>\n<li>缺点：视觉上不够直观（会突然快速回到页面顶部），用户体验不好。</li>\n</ul>\n</li>\n<li>用JavaScript来实现</li>\n</ul>\n<p>我们主要来学习如何使用JavaScript实现。如何实现呢，我们在脑海里演绎这个场景：当我们打开一个页面，鼠标向下滚动到一定程度，会出现“回到顶部”这个按钮，我们点击按钮，页面会由快到慢滚动到顶部，最后停留在顶部。这里涉及到的知识点有：</p>\n<ul>\n<li>DOM操作：<ul>\n<li><code>document.getElementById</code>  根据ID获取标签元素</li>\n<li><code>document.documentElement.scrollTop</code> 滚动条的数值，可读写</li>\n</ul>\n</li>\n<li>事件运用：<ul>\n<li><code>window.onload</code> 页面加载完毕后触发</li>\n<li><code>onclick</code> 鼠标点击后触发</li>\n<li><code>window.onscroll</code> 滚动条滚动触发</li>\n</ul>\n</li>\n<li>定时器<ul>\n<li><code>setInterval()</code> 设置定时器，需传2个参数</li>\n<li><code>clearInterval()</code> 关闭定时器，需传一个参数</li>\n</ul>\n</li>\n</ul>\n<p>好了，根据以上知识点，首先在html中增加按钮</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"javascript:;\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"btn\"</span> <span class=\"attr\">title</span>=<span class=\"string\">\"回到顶部\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>然后在层叠样式表里添加</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#btn</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>:<span class=\"number\">38px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">38px</span>;<span class=\"comment\">/*按钮大片大小*/</span></span><br><span class=\"line\">  <span class=\"attribute\">display</span>: none;</span><br><span class=\"line\">  <span class=\"comment\">/*在一个屏幕的可见范围内没必要显示“回到顶部”按钮，所以默认不显示*/</span></span><br><span class=\"line\">  <span class=\"comment\">/*再通过当滚动条滚动超过一个屏幕时再用JavaScript显示按钮*/</span></span><br><span class=\"line\">  <span class=\"attribute\">position</span>: fixed;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>:<span class=\"number\">50%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">bottom</span>:<span class=\"number\">30px</span>;<span class=\"comment\">/*固定定位，相对于屏幕的可见范围位置*/</span></span><br><span class=\"line\">  <span class=\"attribute\">background</span>:<span class=\"built_in\">url</span>(http://paddingme.qiniudn.com/top.png) no-repeat;<span class=\"attribute\">margin-left</span>: <span class=\"number\">25%</span>;</span><br><span class=\"line\">  <span class=\"comment\">/*按钮背景图片，这里我用的是bootstrap官网的scrolltop图片*/</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>好了重点是JavaScript可以这样写：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.onload=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> obtn=<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"btn\"</span>); <span class=\"comment\">//取得标签元素</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> clientHeight=<span class=\"built_in\">document</span>.documentElement.clientHeight;</span><br><span class=\"line\">    <span class=\"comment\">//获得一个屏幕的高度即可视区域高度</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> timer=<span class=\"literal\">null</span>;<span class=\"comment\">//设置计时器</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> isTop=<span class=\"literal\">true</span>;<span class=\"comment\">//见最后注释</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">window</span>.onscroll=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"comment\">//滚动条滚动时触发</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> osTop=<span class=\"built_in\">document</span>.documentElement.scrollTop||<span class=\"built_in\">document</span>.body.scrollTop;</span><br><span class=\"line\">        <span class=\"comment\">//获得滚动条到顶部的高度，document.documentElement.scrollTop取得IE高度，</span></span><br><span class=\"line\">        <span class=\"comment\">//document.body.scrollTop取得chrome高度</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(osTop&gt;=clientHeight)&#123;</span><br><span class=\"line\">        <span class=\"comment\">//滚动条到顶部的高度大于等于一个屏幕高度时，显示“回到顶部”按钮</span></span><br><span class=\"line\">            obtn.style.display=<span class=\"string\">\"block\"</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            obtn.style.display=<span class=\"string\">\"none\"</span>;<span class=\"comment\">//否则隐藏按钮</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//下面为了实现当回到顶部的时候，用户想要停下来观看页面，</span></span><br><span class=\"line\">        <span class=\"comment\">//滚动滚动条可以停下来中断回到顶部的效果。</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!isTop) clearInterval(timer);</span><br><span class=\"line\">        <span class=\"comment\">//如果没有到顶部，滚动条滚动，则关闭计时器，见最后注释</span></span><br><span class=\"line\">            isTop=<span class=\"literal\">false</span>; <span class=\"comment\">//置未到顶部，见最后注释</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    obtn.onclick= <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        timer = setInterval(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;<span class=\"comment\">//setInterval，30ms执行一次函数</span></span><br><span class=\"line\">            <span class=\"keyword\">var</span> osTop=<span class=\"built_in\">document</span>.documentElement.scrollTop||<span class=\"built_in\">document</span>.body.scrollTop;</span><br><span class=\"line\">            <span class=\"comment\">//获得滚动条到顶部的高度</span></span><br><span class=\"line\">            <span class=\"keyword\">var</span> ispeed=<span class=\"built_in\">Math</span>.floor(-osTop/<span class=\"number\">5</span>);<span class=\"comment\">//速度</span></span><br><span class=\"line\">            <span class=\"built_in\">document</span>.documentElement.scrollTop=<span class=\"built_in\">document</span>.body.scrollTop=osTop+ispeed;</span><br><span class=\"line\">            <span class=\"comment\">//越来越小，写滚动条到顶部的高度，实现回到顶部由快到慢的效果。</span></span><br><span class=\"line\"></span><br><span class=\"line\">            isTop=<span class=\"literal\">true</span>;<span class=\"comment\">//见最后注释</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(osTop==<span class=\"number\">0</span>)<span class=\"comment\">//到达顶部关闭计时器</span></span><br><span class=\"line\">                clearInterval(timer);</span><br><span class=\"line\">        &#125;,<span class=\"number\">30</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//如何实现当回到顶部时候，想突然中断呢？首先设置全局变量var isTop=true;</span></span><br><span class=\"line\"><span class=\"comment\">//则obtn.onclick事件中置isTop为true,</span></span><br><span class=\"line\"><span class=\"comment\">//当点击按钮，则滚动条开始想顶部滚动，触发window.onscroll事件，</span></span><br><span class=\"line\"><span class=\"comment\">//这里!istop为false不执行clearInterval(timer);</span></span><br><span class=\"line\"><span class=\"comment\">//但是下面的isTop=false;再将isTop置为false。</span></span><br><span class=\"line\"><span class=\"comment\">//这时候你人为滚动鼠标，则再次触发window.onscroll 事件，</span></span><br><span class=\"line\"><span class=\"comment\">//此时！istop为true 执行clearInterval(timer);则滚动条停下来。</span></span><br></pre></td></tr></table></figure>\n<p>看看效果，啧啧啧，用户体验灰常到位，想停就停，不想停则由快到慢回到顶部，让用户有一个适应的心理预期，还可能看到想看的风景停下来驻足欣赏。所以你心动没，赶紧打开<a href=\"http://www.imooc.com/learn/65\" target=\"_blank\" rel=\"external\">回到顶部效果</a> 学习一下，涨涨姿势。</p>\n<p>今天暂时学习到这里，我还是乖乖的滚去写论文了。</p>\n"},{"title":"【JavaScript】【学习心得】学习JavaScript 第八天","url":"http://padding.me/blog/2014/11/24/【JavaScript】【学习心得】学习JavaScript 第八天/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-JavaScript\" target=\"_blank\" rel=\"external\">Learning-JavaScript</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-JavaScript/issues/12\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-JavaScript/issues/12</a></p>\n<p>已经坚持了一周的学习，学到了不少 DOM 的基础知识，对一些基本概念也有了深入里概念，今天主要学习如何利用 DOM 技术去获取（读）和设置（写）CSS 信息。</p>\n<h2 id=\"三位一体的网页\"><a href=\"#三位一体的网页\" class=\"headerlink\" title=\"三位一体的网页\"></a>三位一体的网页</h2><ul>\n<li>结构层（ structural layer） ：由 HTML 或 XHTML 之类的标记语言负责创建。标签（ tag ）,也就是那些出现在尖括号里的单词，对网页内容的语义含义做出了描述。</li>\n<li>行为层（ presentation layer）：由 CSS 负责完成。 CSS 描述页面内容应该如何呈现。</li>\n<li>表现层（ behavior layer）：负责内容应该如何响应事件这一问题，这是 JavaScript 语言 和 DOM 主宰的领域。</li>\n</ul>\n<p>===》结构、行为、表现 分离。</p>\n<h2 id=\"style-属性\"><a href=\"#style-属性\" class=\"headerlink\" title=\"style 属性\"></a>style 属性</h2><p>文档中的每个元素都是一个对象，每个对象由着各种各样的属性。</p>\n<ul>\n<li>有一些属性告诉我们元素在节点树上的位置信息，即各节点之间关系信息：<code>parentNode</code>,<code>nextSibling</code>,<code>previousSibling</code>,<code>childNodes</code>,<code>firstChild</code>,<code>lastChild</code> 等;</li>\n<li>包含元素本身的信息：<code>nodeType</code>,<code>nodeName</code>;</li>\n<li><p>style 属性包含着元素的样式。查询这个属性将返回一个对象。样式都存放在这个 style 对象的属性里。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">element.style.property</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"获取样式\"><a href=\"#获取样式\" class=\"headerlink\" title=\"获取样式\"></a>获取样式</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">element.style.color;<span class=\"comment\">//获取element 的颜色</span></span><br><span class=\"line\">element.style.font-family;<span class=\"comment\">// xx 应该是：</span></span><br><span class=\"line\">element.style.fontFamily;</span><br></pre></td></tr></table></figure>\n<p>DOM 在表示样式属性时采用的单位并不总是与它们在 CSS 样式表里的设置相同。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">id</span>=<span class=\"string\">\"example\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"color:#999999\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> example = <span class=\"built_in\">document</span>.getElementById(example);</span><br><span class=\"line\">    alert(example.style.color);<span class=\"comment\">//在某些浏览器里会弹出 rgb(153,153,153)</span></span><br><span class=\"line\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>对于其他单位 em、px，DOM 能正确解析。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">id</span>=<span class=\"string\">\"example\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"font:12px 'Apral',sans-serif\"</span>&gt;</span>我行，我行，我行行行！<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> example = <span class=\"built_in\">document</span>.getElementById(example);</span><br><span class=\"line\">    alert(example.style.fontSize);<span class=\"comment\">//能正确打印出 12px</span></span><br><span class=\"line\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>DOM style 属性只能检测内嵌样式,不能用来检测在外部 CSS 文件里声明的样式，在head 头里的样式也是不能检测到</strong></p>\n<h3 id=\"设置样式\"><a href=\"#设置样式\" class=\"headerlink\" title=\"设置样式\"></a>设置样式</h3><p>style 对象的各个属性都是可读写的。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">document</span>.style.property = value;<span class=\"comment\">// value 的值必须放在引号内</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"何时该用-DOM-脚本设置样式\"><a href=\"#何时该用-DOM-脚本设置样式\" class=\"headerlink\" title=\"何时该用 DOM 脚本设置样式\"></a>何时该用 DOM 脚本设置样式</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"zh-cmn-Hans\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Man bites dog<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hold the front page<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>This first paragraph leads you in.<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Now you get  the nitty-gritty of th story.<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>The most improtant information is delivered first.<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Extra! Extra!<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Further developements are unfolding.<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>You can read all about it here.<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"addLoadEvent.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"1-9.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">styleHeaderSiblings</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!<span class=\"built_in\">document</span>.getElementsByTagName) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> headers = <span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">\"h1\"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> elem;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = headers.length - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">    elem = getNextElement(headers[i].nextSibling);</span><br><span class=\"line\">    elem.style.fontWeight = <span class=\"string\">\"bold\"</span>;</span><br><span class=\"line\">    elem.style.fontSize = <span class=\"string\">\"1.2em\"</span>;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getNextElement</span>(<span class=\"params\">node</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (node.nodeType == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> node;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> getNextElement(node.nextSibling);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">addLoadEvent(styleHeaderSiblings);<span class=\"comment\">//请见上篇文章</span></span><br></pre></td></tr></table></figure>\n<p>在线 DEMO：<a href=\"http://codepen.io/paddingme/pen/ogXjyB\" target=\"_blank\" rel=\"external\">http://codepen.io/paddingme/pen/ogXjyB</a></p>\n<h3 id=\"根据某种条件反复设置某种样式\"><a href=\"#根据某种条件反复设置某种样式\" class=\"headerlink\" title=\"根据某种条件反复设置某种样式\"></a>根据某种条件反复设置某种样式</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"zh-cmn-Hans\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Cities<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"1-9-2.css\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">caption</span>&gt;</span>Itinerary<span class=\"tag\">&lt;/<span class=\"name\">caption</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>When<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>Where<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>June 9th<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Protlan, <span class=\"tag\">&lt;<span class=\"name\">abbr</span> <span class=\"attr\">title</span>=<span class=\"string\">\"Oregon\"</span>&gt;</span>OR<span class=\"tag\">&lt;/<span class=\"name\">abbr</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>June 10th<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Seattle, <span class=\"tag\">&lt;<span class=\"name\">abbr</span> <span class=\"attr\">title</span>=<span class=\"string\">\"Washington\"</span>&gt;</span>WA<span class=\"tag\">&lt;/<span class=\"name\">abbr</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>June 12th<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>Sacramento, <span class=\"tag\">&lt;<span class=\"name\">abbr</span> <span class=\"attr\">title</span>=<span class=\"string\">\"California\"</span>&gt;</span>CA<span class=\"tag\">&lt;/<span class=\"name\">abbr</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"addLoadEvent.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"1-9-2.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-family</span>: <span class=\"string\">\"Helvatica\"</span>,<span class=\"string\">\"Aprial\"</span>,sans-serif;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#000</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">table</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: auto;</span><br><span class=\"line\">    <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#699</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">caption</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>:auto;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: .<span class=\"number\">2em</span>;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">1.2em</span>;</span><br><span class=\"line\">    <span class=\"attribute\">font-weight</span>: bold;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">th</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-weight</span>: normal;</span><br><span class=\"line\">    <span class=\"attribute\">font-style</span>: italic;</span><br><span class=\"line\">    <span class=\"attribute\">text-align</span>: left;</span><br><span class=\"line\">    <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> dotted <span class=\"number\">#699</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"number\">#9cc</span>;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#000</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">th</span>,<span class=\"selector-tag\">td</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">10em</span>;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: .<span class=\"number\">5em</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*css3 选择器 在低级浏览器无法使用我们用 DOM 来解决它*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*tr:nth-child(odd) &#123;</span><br><span class=\"line\">    background-color: #ffc;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">tr:nth-child(even) &#123;</span><br><span class=\"line\">    background-color: #fff;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">*/</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">stripeTables</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!<span class=\"built_in\">document</span>.getElementsByTagName) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> tables = <span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">\"table\"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> odd, rows;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; tables.length; i++) &#123;</span><br><span class=\"line\">    odd = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    rows = tables[i].getElementsByTagName(<span class=\"string\">\"tr\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> j = <span class=\"number\">0</span>; j &lt; rows.length; j++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (odd == <span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">            rows[j].style.backgroundColor = <span class=\"string\">\"#ffc\"</span>;</span><br><span class=\"line\">            odd = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            odd = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">displayAbbreviations</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"built_in\">document</span>.getElementsByTagName) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"built_in\">document</span>.createElement) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"built_in\">document</span>.createTextNode) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"comment\">//取得所有缩略词</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> abbreviations = <span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">\"abbr\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (abbreviations.length &lt; <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> defs = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>();</span><br><span class=\"line\">    <span class=\"comment\">//遍历这些缩略词</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; abbreviations.length; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> current_abbr = abbreviations[i];</span><br><span class=\"line\">        <span class=\"comment\">//如果当前元素没有子节点，就立刻开始下一次循环。</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (current_abbr.childNodes.length &lt; <span class=\"number\">1</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> definition = current_abbr.getAttribute(<span class=\"string\">\"title\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> key = current_abbr.lastChild.nodeValue;</span><br><span class=\"line\">        defs[key] = definition;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//创建定义列表</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> dlist = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"dl\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">//遍历定义</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (key <span class=\"keyword\">in</span> defs) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> definition = defs[key];</span><br><span class=\"line\">        <span class=\"comment\">//创建定义标题</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> dtitle = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"dt\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> dtitle_text = <span class=\"built_in\">document</span>.createTextNode(key);</span><br><span class=\"line\">        dtitle.appendChild(dtitle_text);</span><br><span class=\"line\">        <span class=\"comment\">//创建定义描述</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> ddesc = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"dd\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> ddesc_text = <span class=\"built_in\">document</span>.createTextNode(definition);</span><br><span class=\"line\">        ddesc.appendChild(ddesc_text);</span><br><span class=\"line\">        <span class=\"comment\">//把它们添加到定义列表</span></span><br><span class=\"line\">        dlist.appendChild(dtitle);</span><br><span class=\"line\">        dlist.appendChild(ddesc);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//对于 dl 没有任何子节点，则立即退出 displayAbbreviations。</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (dlist.childNodes.length &lt; <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 创建标题</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> header = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"h2\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> headerText = <span class=\"built_in\">document</span>.createTextNode(<span class=\"string\">\"Abbreviations\"</span>);</span><br><span class=\"line\">    header.appendChild(headerText);</span><br><span class=\"line\">    <span class=\"comment\">//把标题页添加到页面主体</span></span><br><span class=\"line\">    <span class=\"built_in\">document</span>.body.appendChild(header);</span><br><span class=\"line\">    <span class=\"comment\">//把定义列表添加到页面主体</span></span><br><span class=\"line\">    <span class=\"built_in\">document</span>.body.appendChild(dlist);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">addLoadEvent(stripeTables);</span><br><span class=\"line\">addLoadEvent(displayAbbreviations);</span><br></pre></td></tr></table></figure>\n<p>在线 demo:<a href=\"http://codepen.io/paddingme/pen/vEOLyr\" target=\"_blank\" rel=\"external\">http://codepen.io/paddingme/pen/vEOLyr</a></p>\n<h3 id=\"响应事件\"><a href=\"#响应事件\" class=\"headerlink\" title=\"响应事件\"></a>响应事件</h3><p>对于<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">tr</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-weight</span>: bold;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>部分浏览器不支持（尚未做测试）可以使用 DOM 来做。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function highlightRows() &#123;</span><br><span class=\"line\">    if (!document.getElementsByTagName) return false;</span><br><span class=\"line\">    var rows = document.getElementsByTagName(&quot;tr&quot;);</span><br><span class=\"line\">    for (var i = 0; i &lt; rows.length; i++) &#123;</span><br><span class=\"line\">        rows[i].onmouseover = function() &#123;</span><br><span class=\"line\">            this.style.fontWeight = &quot;bold&quot;;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        rows[i].onmouseout = function() &#123;</span><br><span class=\"line\">            this.style.fontWeight = &quot;normal&quot;;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在这一类场合中，需要决定是采用纯粹的 CSS 来解决，还是利用 DOM 来设置样式，需要考虑如下要素：</p>\n<ul>\n<li>这个问题最简单的解决方式是什么？</li>\n<li>那种解决方案会得到更多浏览器的支持？</li>\n</ul>\n<p>这就要求我们对 CSS 和 DOM 技术有足够深入的了解。</p>\n<p>如果你想改变某个元素的呈现效果，请用 CSS；如果你想改变某个元素的行为，使用 DOM，如果你想根据某个元素的行为去改变它的呈现效果，请运用你的智慧。</p>\n<h2 id=\"className-属性\"><a href=\"#className-属性\" class=\"headerlink\" title=\"className 属性\"></a>className 属性</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">elem.className = value;<span class=\"comment\">// 这里是替换 class 而不是追加 class</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">addClass</span>(<span class=\"params\">element,value</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!element.className) &#123;</span><br><span class=\"line\">        element.className = value;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        newClassName = element.className;</span><br><span class=\"line\">        newClassName += <span class=\"string\">\" \"</span>;</span><br><span class=\"line\">        newClassName += value;</span><br><span class=\"line\">        element.className = newClassName;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样的话现在是通过 CSS 而不是 DOM 去设置样式。 JavaScript 函数现在更新的是 className 属性，根本没碰 style属性。 这确保了网页的表示层和行为层分离得更加彻底。</p>\n<p><strong>对函数进行抽象</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">styleHeaderSiblings</span>(<span class=\"params\">tag.theClass</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!<span class=\"built_in\">document</span>.getElementsByTagName) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> elems = <span class=\"built_in\">document</span>.getElementsByTagName(tag);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> elem;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = headers.length - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">    elem = getNextElement(elems[i].nextSibling);</span><br><span class=\"line\">    addClass(elem,theClass);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这一章我们使用 JavaScript 入侵了 CSS 领地。我们这么做的理由无非：</p>\n<ol>\n<li>CSS 无法让我们找到想要处理的目标元素；</li>\n<li>CSS寻找目标元素的哦方法还未得到广泛的支持。</li>\n</ol>\n<p>虽然未来 CSS 会让我们远离这种“不务正业” 的DOM 脚本编程技术。但有一种应用 CSS 大概永远也无法与 DOM 竞争： JavaScript 脚本能定时重复执行一组操作。</p>\n<p>好了 晚安，我还要去写论文TNT。</p>\n"},{"title":"display:inline-block兼容ie6-7的写法","url":"http://padding.me/blog/2014/11/24/display:inline-block兼容ie6-7的写法/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-HTML-CSS\" target=\"_blank\" rel=\"external\">Learning-HTML-CSS</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-HTML-CSS/issues/20\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-HTML-CSS/issues/20</a></p>\n<p><a href=\"http://www.phpvar.com/archives/2211.html\" target=\"_blank\" rel=\"external\">display:inline-block兼容ie6/7的写法</a></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">div &#123;</span><br><span class=\"line\">  display:inline-block;</span><br><span class=\"line\">  *display:inline; </span><br><span class=\"line\">  *zoom:1;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"【JavaScript】【学习心得】学习JavaScript 第七天","url":"http://padding.me/blog/2014/11/23/【JavaScript】【学习心得】学习JavaScript 第七天/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-JavaScript\" target=\"_blank\" rel=\"external\">Learning-JavaScript</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-JavaScript/issues/11\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-JavaScript/issues/11</a></p>\n<p>眼看着七天马上就要结束。这个周末你有没有好好休息，有没有 get 什么新技能呢？<br>如果没有的话，我们快来抓紧时间学点有用的吧。</p>\n<p>在上一章中我们已经学习了如何动态的创建标记，今天我们来学习如何充实文档的内容。</p>\n<h1 id=\"充实文档的内容\"><a href=\"#充实文档的内容\" class=\"headerlink\" title=\"充实文档的内容\"></a>充实文档的内容</h1><h2 id=\"不应该做什么\"><a href=\"#不应该做什么\" class=\"headerlink\" title=\"不应该做什么\"></a>不应该做什么</h2><h3 id=\"渐进增强（progressive-enhancement）\"><a href=\"#渐进增强（progressive-enhancement）\" class=\"headerlink\" title=\"渐进增强（progressive enhancement）\"></a>渐进增强（progressive enhancement）</h3><p>从核心的部分开始，即从内容开始。根据内容实现良好的结构，再逐步增强这些内容。<br>可以通过 CSS 改进呈现效果，通过 DOM 添加各种行为。核心内容应该在刚开始时<br>编写文档时就成为文档的组成部分。</p>\n<h3 id=\"平稳退化（graceful-degradation）\"><a href=\"#平稳退化（graceful-degradation）\" class=\"headerlink\" title=\"平稳退化（graceful degradation）\"></a>平稳退化（graceful degradation）</h3><p>渐进增强的实现必然支持平稳退化。如果你按照渐进增强的原则去充实内容，你为内容添加的样式和行为就自然支持平稳退化，那些缺乏必要的 CSS 和 DOM 支持的访问者可以访问到你的核心内容。</p>\n<h2 id=\"把“不可见”变为“可见”\"><a href=\"#把“不可见”变为“可见”\" class=\"headerlink\" title=\"把“不可见”变为“可见”\"></a>把“不可见”变为“可见”</h2><p>alt 属性原本的作用是：在图片不可用（无法显示）时用一段描述文字来解释这个位置的图片。</p>\n<h2 id=\"内容\"><a href=\"#内容\" class=\"headerlink\" title=\"内容\"></a>内容</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>What is the Document Object Model<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    The <span class=\"tag\">&lt;<span class=\"name\">abbr</span> <span class=\"attr\">title</span>=<span class=\"string\">\"World Wide Web Consortium\"</span>&gt;</span>W3C<span class=\"tag\">&lt;/<span class=\"name\">abbr</span>&gt;</span> defines the <span class=\"tag\">&lt;<span class=\"name\">abbr</span> <span class=\"attr\">title</span>=<span class=\"string\">\"Document Object Model\"</span>&gt;</span>DOM<span class=\"tag\">&lt;/<span class=\"name\">abbr</span>&gt;</span> as:</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">blockquote</span> <span class=\"attr\">cite</span>=<span class=\"string\">\"http://www.w3.org/DOM\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        A platform- and language-neutral interface that will allow programs and scripts to dynamically access and update the content,structure and style of documents.</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">blockquote</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>It is an <span class=\"tag\">&lt;<span class=\"name\">abbr</span> <span class=\"attr\">title</span>=<span class=\"string\">\"Application Programming Interface\"</span>&gt;</span>API<span class=\"tag\">&lt;/<span class=\"name\">abbr</span>&gt;</span></span><br><span class=\"line\">that cam be used to navigate <span class=\"tag\">&lt;<span class=\"name\">abbr</span> <span class=\"attr\">title</span>=<span class=\"string\">\"HyperText Markup Language\"</span>&gt;</span>HTML<span class=\"tag\">&lt;/<span class=\"name\">abbr</span>&gt;</span> and <span class=\"tag\">&lt;<span class=\"name\">abbr</span> <span class=\"attr\">title</span>=<span class=\"string\">\"eXtensible Markup Language\"</span>&gt;</span>XML<span class=\"tag\">&lt;/<span class=\"name\">abbr</span>&gt;</span> documents.</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><code>&lt;abbr&gt;</code> 标签的含义是“缩略语(abbreviation)”，它是对单词或短语的简写形式的统称。<br><code>&lt;acronym&gt;</code> 标签的含义是被当成一个单词来读的“首字母缩写词”。为避免混淆，在 HTML5中 <code>&lt;acronym&gt;</code> 已被 <code>&lt;abbr&gt;</code> 取代。</p>\n<h3 id=\"HTML-XHTML-HTML5\"><a href=\"#HTML-XHTML-HTML5\" class=\"headerlink\" title=\"HTML?XHTML?HTML5\"></a>HTML?XHTML?HTML5</h3><p>XHTML 语法更严格，标签字母必须全小写，不可以省略结束标签，所有的标签都必须闭合。</p>\n<h3 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-family</span>: <span class=\"string\">\"Helvetica\"</span>,<span class=\"string\">\"Arial\"</span>,sans-serif;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">10pt</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">abbr</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">text-decoration</span>: none;</span><br><span class=\"line\">    <span class=\"attribute\">border</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">font-style</span>: normal;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"JavaScript\"><a href=\"#JavaScript\" class=\"headerlink\" title=\"JavaScript\"></a>JavaScript</h3><p>可以用 DOM 改变浏览器的默认行为。</p>\n<h2 id=\"显示-“缩略语列表”\"><a href=\"#显示-“缩略语列表”\" class=\"headerlink\" title=\"显示 “缩略语列表”\"></a>显示 “缩略语列表”</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">displayAbbreviations</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> abbreviations = <span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">\"abbr\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (abbreviations.length &lt; <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> defs = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>; i&lt;abbreviations.length; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> current_abbr =  abbreviations[i];</span><br><span class=\"line\">        <span class=\"keyword\">var</span> definition = current_abbr.getAttribute(<span class=\"string\">\"title\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> key = current_abbr.lastChild.nodeValue;</span><br><span class=\"line\">        defs[key] = definition;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建标记\"><a href=\"#创建标记\" class=\"headerlink\" title=\"创建标记\"></a>创建标记</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dl</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dt</span>&gt;</span>Title 1<span class=\"tag\">&lt;/<span class=\"name\">dt</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dd</span>&gt;</span>Description1<span class=\"tag\">&lt;/<span class=\"name\">dd</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dt</span>&gt;</span>Title 2<span class=\"tag\">&lt;/<span class=\"name\">dt</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dd</span>&gt;</span>Description2<span class=\"tag\">&lt;/<span class=\"name\">dd</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dl</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> dlist = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"dl\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (key <span class=\"keyword\">in</span> defs) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> definition = defs[key];</span><br><span class=\"line\">    <span class=\"keyword\">var</span> dtitle = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"dt\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> dtitle_text = <span class=\"built_in\">document</span>.createTextNode(key);</span><br><span class=\"line\">    dtitle.appendChild(dtitle_text);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> ddesc = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"dd\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> ddesc_text = <span class=\"built_in\">document</span>.createTextNode(definition);</span><br><span class=\"line\">    ddesc.appendChild(ddesc_text);</span><br><span class=\"line\">    dlist.appendChild(dtitle);</span><br><span class=\"line\">    dlist.appendChild(ddesc);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> header = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"h2\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> headerText = <span class=\"built_in\">document</span>.createTextNode(<span class=\"string\">\"Abbreviations\"</span>);</span><br><span class=\"line\">header.appendChild(headerText);</span><br></pre></td></tr></table></figure>\n<p>引用 DOM 标签：</p>\n<ul>\n<li><p>DOM Core</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">document.getElementsByTagName(&quot;body&quot;)[0]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>HTML-DOM</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">document.body</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">document.body.appendChild(dlist);</span><br></pre></td></tr></table></figure>\n<p><code>displayAbbreviations</code> 函数：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">displayAbbreviations</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> abbreviations = <span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">\"abbr\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (abbreviations.length &lt; <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> defs = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>; i&lt;abbreviations.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> current_abbr =  abbreviations[i];</span><br><span class=\"line\">            <span class=\"keyword\">var</span> definition = current_abbr.getAttribute(<span class=\"string\">\"title\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">var</span> key = current_abbr.lastChild.nodeValue;</span><br><span class=\"line\">            defs[key] = definition;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> dlist = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"dl\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (key <span class=\"keyword\">in</span> defs) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> definition = defs[key];</span><br><span class=\"line\">            <span class=\"keyword\">var</span> dtitle = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"dt\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">var</span> dtitle_text = <span class=\"built_in\">document</span>.createTextNode(key);</span><br><span class=\"line\">            dtitle.appendChild(dtitle_text);</span><br><span class=\"line\">            <span class=\"keyword\">var</span> ddesc = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"dd\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">var</span> ddesc_text = <span class=\"built_in\">document</span>.createTextNode(definition);</span><br><span class=\"line\">            ddesc.appendChild(ddesc_text);</span><br><span class=\"line\">            dlist.appendChild(dtitle);</span><br><span class=\"line\">            dlist.appendChild(ddesc);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">var</span> header = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"h2\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> headerText = <span class=\"built_in\">document</span>.createTextNode(<span class=\"string\">\"Abbreviations\"</span>);</span><br><span class=\"line\">        header.appendChild(headerText);</span><br><span class=\"line\">        <span class=\"built_in\">document</span>.body.appendChild(header);</span><br><span class=\"line\">        <span class=\"built_in\">document</span>.body.appendChild(dlist);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"一个浏览器“地雷”\"><a href=\"#一个浏览器“地雷”\" class=\"headerlink\" title=\"一个浏览器“地雷”\"></a>一个浏览器“地雷”</h3><p>IE 浏览器直到 IE7 才支持 <code>abbr</code>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; abbreviations.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> current_abbr = abbreviations[i];</span><br><span class=\"line\">    <span class=\"comment\">//如果当前元素没有子节点，就立刻开始下一次循环。</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (current_abbr.childNodes.length &lt; <span class=\"number\">1</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> definition = current_abbr.getAttribute(<span class=\"string\">\"title\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> key = current_abbr.lastChild.nodeValue;</span><br><span class=\"line\">    defs[key] = definition;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//创建定义列表</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> dlist = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"dl\"</span>);</span><br><span class=\"line\"><span class=\"comment\">//遍历定义</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (key <span class=\"keyword\">in</span> defs) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> definition = defs[key];</span><br><span class=\"line\">    <span class=\"comment\">//创建定义标题</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> dtitle = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"dt\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> dtitle_text = <span class=\"built_in\">document</span>.createTextNode(key);</span><br><span class=\"line\">    dtitle.appendChild(dtitle_text);</span><br><span class=\"line\">    <span class=\"comment\">//创建定义描述</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> ddesc = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"dd\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> ddesc_text = <span class=\"built_in\">document</span>.createTextNode(definition);</span><br><span class=\"line\">    ddesc.appendChild(ddesc_text);</span><br><span class=\"line\">    <span class=\"comment\">//把它们添加到定义列表</span></span><br><span class=\"line\">    dlist.appendChild(dtitle);</span><br><span class=\"line\">    dlist.appendChild(ddesc);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//对于 dl 没有任何子节点，则立即退出 displayAbbreviations。</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (dlist.childNodes.length &lt; <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"显示“文献来源连接表”\"><a href=\"#显示“文献来源连接表”\" class=\"headerlink\" title=\"显示“文献来源连接表”\"></a>显示“文献来源连接表”</h3><p>如上只能处理让不识别 <code>abbr</code> 的低版本 IE 浏览器 不报错，却不显示我们的自定义列表，肿么办呢？<br>我们让文献以链接形式显示出来。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">displayCitations</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"built_in\">document</span>.getElementsByTagName || !<span class=\"built_in\">document</span>.createElement || !<span class=\"built_in\">document</span>.createTextNode) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//取得所有引用</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> quotes = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"blockquote\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">//遍历所有引用</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>; i&lt;quotes.length; i++) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//如果没有 cite 属性，继续循环</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!qutotes[i].getAttribute(<span class=\"string\">\"cite\"</span>)) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        <span class=\"comment\">//保存 cite  属性</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> url = quotes[i].getAttribute(<span class=\"string\">\"cite\"</span>);</span><br><span class=\"line\">        <span class=\"comment\">//取得引用中的所有元素节点</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> quoteElements = quotes[i].getElementsByTagName(<span class=\"string\">\"*\"</span>);</span><br><span class=\"line\">        <span class=\"comment\">//如果没有元素节点，继续循环</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (quoteElements.length &lt; <span class=\"number\">1</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        <span class=\"comment\">//取得引用中最后一个元素节点</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> elem = quoteElements[quoteElements.length<span class=\"number\">-1</span>];</span><br><span class=\"line\">        <span class=\"comment\">//创建标记</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> link = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"a\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> link_text = <span class=\"built_in\">document</span>.createTextNode(<span class=\"string\">\"source\"</span>);</span><br><span class=\"line\">        link.appendChild(link_text);</span><br><span class=\"line\">        link.setAttribute(<span class=\"string\">\"href\"</span>,url);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> siperscript = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"sup\"</span>);</span><br><span class=\"line\">        siperscript.appendChild(link);</span><br><span class=\"line\">        <span class=\"comment\">//把标记添加到引用中的最后一个元素节点</span></span><br><span class=\"line\">        elem.appendChild(siperscript);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"显示快捷键菜单\"><a href=\"#显示快捷键菜单\" class=\"headerlink\" title=\"显示快捷键菜单\"></a>显示快捷键菜单</h2><p>access 属性可以把一个元素(如链接)与肩哦按上的某个特定按键关联在一起，一般来说，在适应于 Winodws 的系统的浏览器里，快捷键的用法是在键盘上同时按下 Alt 键和特定按键，在适用于 Mac 系统的浏览器里，快捷键的用法是同时按下 Ctrl 键和特定按键。</p>\n<blockquote>\n<p>设置太多的快捷键会适得其反，他们会与浏览器内建的快捷方式发生冲突</p>\n</blockquote>\n<p>一些基本的快捷键都有约定俗成的设置方法，详细的可参考: <a href=\"http://www.clagnut.com/blog/193/\" target=\"_blank\" rel=\"external\">http://www.clagnut.com/blog/193/</a></p>\n<ul>\n<li>accesskey=”1”对应着一个 “返回到本网站主页” 的链接；</li>\n<li>accesskey=”2”对应着一个 “后退到前一个页面” 的链接；</li>\n<li>accesskey=”4”对应着一个 “打开本网站的搜索表单/页面” 的链接；</li>\n<li>accesskey=”9”对应着一个 “本网站联系方法” 的链接；</li>\n<li>accesskey=”0”对应着一个 “查看本网站的快捷键清单” 的链接；</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">\"navigation\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"index.html\"</span> <span class=\"attr\">accesskey</span>=<span class=\"string\">\"1\"</span>&gt;</span>Home<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"search.html\"</span> <span class=\"attr\">accesskey</span>=<span class=\"string\">\"4\"</span>&gt;</span>Search<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"contact.html\"</span> <span class=\"attr\">accesskey</span>=<span class=\"string\">\"9\"</span>&gt;</span>Contact<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>来创建一份快捷键清单</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">displayAccesskeys</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"built_in\">document</span>.getElementsByTagName || !<span class=\"built_in\">document</span>.createTextNode || !<span class=\"built_in\">document</span>.createElement) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"comment\">//取得文章当中的所有链接</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> links = <span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">\"a\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">//创建一个数组，保存快捷键</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> akeys = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>();</span><br><span class=\"line\">    <span class=\"comment\">//遍历链接</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>; i&lt;links.length; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> current_link = links[i];</span><br><span class=\"line\">        <span class=\"comment\">//如果没有 accesskey 属性，继续循环</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!links[i].getAttribute(<span class=\"string\">\"accesskey\"</span>)) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        <span class=\"comment\">//取得 accesskey 的值</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> key = current_link.getAttribute(<span class=\"string\">\"accesskey\"</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 取得链接文本</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> text = current_link.lastChild.nodeValue;</span><br><span class=\"line\">        <span class=\"comment\">//添加到数组</span></span><br><span class=\"line\">        akeys[key] = text;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//创建列表</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> list = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"ul\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">//遍历快捷键</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> ( key <span class=\"keyword\">in</span> akeys) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> text = akeys[key];</span><br><span class=\"line\">        <span class=\"comment\">//创建放到列表中的字符串</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> str = key + <span class=\"string\">\":\"</span> +text;</span><br><span class=\"line\">        <span class=\"comment\">//创建列表象</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> item = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"li\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> item_text = <span class=\"built_in\">document</span>.createTextNode(str);</span><br><span class=\"line\">        item.appendChild(item_text);</span><br><span class=\"line\">        <span class=\"comment\">//把列表创建到列表中</span></span><br><span class=\"line\">        list.appendChild(item);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//创建标题</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> header = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"h1\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> header_text = <span class=\"built_in\">document</span>.createTextNode(<span class=\"string\">\"Acceskeys\"</span>);</span><br><span class=\"line\">    header.appendChild(header_text);</span><br><span class=\"line\">    <span class=\"comment\">//把标题添加到主体上</span></span><br><span class=\"line\">    <span class=\"built_in\">document</span>.body.appendChild(header);</span><br><span class=\"line\">    <span class=\"comment\">//把列表放到主体上</span></span><br><span class=\"line\">    <span class=\"built_in\">document</span>.body.appendChild(list);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">addLoadEvent(displayAccesskeys);</span><br></pre></td></tr></table></figure>\n<p>在线 DEMO 地址：<a href=\"http://codepen.io/paddingme/pen/XJJGjv\" target=\"_blank\" rel=\"external\">codepen</a> or <a href=\"https://github.com/paddingme/Learning-JavaScript/blob/master/Demo/1-8.html\" target=\"_blank\" rel=\"external\">github</a>。</p>\n<p>好了，今天的学习就到了，明天周一了，请记得定闹钟！</p>\n"},{"title":"fex-dream之初衷","url":"http://padding.me/blog/2014/11/23/fex-dream之初衷/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/fex-dream\" target=\"_blank\" rel=\"external\">fex-dream</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/fex-dream/fex-dream/issues/10\" target=\"_blank\" rel=\"external\">https://github.com/fex-dream/fex-dream/issues/10</a></p>\n<p>事情要从 @XfLoops 的<a href=\"http://weibo.com/3972591163/BwlQo8vMc?type=repost\" target=\"_blank\" rel=\"external\">一条微博</a>说起：</p>\n<blockquote>\n<p>@<a href=\"http://weibo.com/yahoo2651/\" target=\"_blank\" rel=\"external\">臭臭手抽抽</a> 虽然我不知道你叫什么名字，但我们是同道中人，我也想进 fex。 最近在 GitHub 上 fork 了一个有关前端的很全面的 repository，推荐给你。<a href=\"http://t.cn/zHdP9uR\" target=\"_blank\" rel=\"external\">http://t.cn/zHdP9uR</a> 加油！加油！</p>\n</blockquote>\n<p>当天早上看见这条微博，晃神了半天，虽然一直都很关注着 <a href=\"http://fex.baidu.com\" target=\"_blank\" rel=\"external\">fex</a>，但很少向别人提及我想进 fex， 我要进 fex。没想到通过我留在 GitHub 上、微博上的一些蛛丝马迹竟然被 @XfLoops 发现了。 除了感动更感叹互联网时代的伟大，让志同道合的陌生人惺惺相惜。</p>\n<p>之前我自己建立了个个人repo<a href=\"https://github.com/fex-dream\" target=\"_blank\" rel=\"external\">fex-dream</a>，想着要不成立一个组织得了，邀请一样的同学加入。</p>\n<p><img src=\"https://cloud.githubusercontent.com/assets/5771087/5219745/3eb8dd92-7696-11e4-9194-21391c2418db.PNG\" alt=\"fex\"></p>\n<p>于是便在 GitHub 上建立了 <a href=\"https://github.com/fex-dream\" target=\"_blank\" rel=\"external\">fex-dream</a>，邀请了 @XfLoops 一起加入。本来只想建立一个私有的组织，不是有句话这样说吗：</p>\n<blockquote>\n<p>Dont tell people your dream ,show them!</p>\n</blockquote>\n<p>但是自己的学生账号只能建私有项目，建私有组织也需要收费，所以不得已这成为了一个公开组织(还不是因为穷 :sob: :sob: :sob:)。</p>\n<p>建立 <a href=\"https://github.com/fex-dream\" target=\"_blank\" rel=\"external\">FEX-Dream</a> 没多久，便有两名同学 star 了。今天看了下，没想到<a href=\"https://github.com/f2er\" target=\"_blank\" rel=\"external\">@情封</a> 还 Watch 了。前些天加了 @情封 的微信公众号：前端早读课（id:FeZaoDuKe），@情封 通过我的博客到我的 GitHub 留言给我：挺有理想的。虽然我曾是一个理想主义者，但也越来越认识到理想不能当饭吃，志存高远可以，脚踏实地才是最重要的。</p>\n<p>感谢这些同学关注这个组织和项目，不知道未来有多远，会不会来。但踏实走好今天的路才是最重要的。如 <a href=\"http://weibo.com/pegong\" target=\"_blank\" rel=\"external\">peng_gong</a> 在 <a href=\"http://zh.lucida.me/blog/on-the-keynote-of-t-one/\" target=\"_blank\" rel=\"external\">关于锤子手机和锤子手机发布会</a>中说的：</p>\n<blockquote>\n<p>在锤子手机发布会上，我看到的是一个人在不断的强调自己有多努力多认真，但我也知道当某人不断的给你强调他有多努力（effort）时，事实往往是他还没有获得任何实质性成果（progress），简而言之，effort 不等于 progress。</p>\n</blockquote>\n<hr>\n<blockquote>\n<p><strong>不忘初心，方得始终。</strong></p>\n</blockquote>\n"},{"title":"html、body宽度的问题","url":"http://padding.me/blog/2014/11/22/html、body宽度的问题/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-HTML-CSS\" target=\"_blank\" rel=\"external\">Learning-HTML-CSS</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-HTML-CSS/issues/18\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-HTML-CSS/issues/18</a></p>\n<p><code>html</code> 和 <code>body</code> 的 width 和 height 默认为 100%，为整个视窗的高度和宽度。<br><code>html</code> 的 <code>width:100%</code> 占据整个视窗，而 <code>body</code>的<code>width:100%</code>是根据<code>html</code>的 width*100% 计算的。</p>\n<blockquote>\n<p>The percentage is calculated with respect to the height of the generated box’s containing block. If the height of the containing block is not specified explicitly (i.e., it depends on content height), and this element is not absolutely positioned, the value computes to ‘auto’. A percentage height on the root element is relative to the initial containing block.</p>\n<p>所述百分比的计算相对于所生成的框的包含块的高度。如果没有明确指定的包含块的高度（即，它取决于内容的高度），而这个元素没有绝对定位，价值计算为“自动”。根元素上的百分比高度是相对于初始包含块。</p>\n</blockquote>\n<p>参考： <a href=\"http://stackoverflow.com/questions/11995392/height-and-width-on-html-and-body-elements\" target=\"_blank\" rel=\"external\">height and width on html and body elements</a></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"wrapper\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"container\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>Lots of pragraphs here<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#wrapper &#123;width:1200px;&#125;</span><br></pre></td></tr></table></figure>\n<p>想要 <code>body</code> 在各分辨率下均包裹 <code>#wrapper</code> 可设置 <code>body {min-width:1200px}</code></p>\n<p>今天发现一篇好文章 <a href=\"http://www.zhangxinxu.com/wordpress/?p=259\" target=\"_blank\" rel=\"external\">html与body的一些研究与理解</a><br>又发现一片：<a href=\"http://blog.moocss.com/code-snippets/html-css-code-snippets/1617.html\" target=\"_blank\" rel=\"external\">DIV 高度100%</a></p>\n"},{"title":"Emmet语法速查表","url":"http://padding.me/blog/2014/11/22/Emmet语法速查表/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-HTML-CSS\" target=\"_blank\" rel=\"external\">Learning-HTML-CSS</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-HTML-CSS/issues/17\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-HTML-CSS/issues/17</a></p>\n<p>Emmet 是高效、快速编写 HTML 和 CSS 代码的一种插件，如果还不了解，请戳<a href=\"http://docs.emmet.io/\" target=\"_blank\" rel=\"external\">Emmet — the essential toolkit for web-developers</a>,再根据你使用的编辑器（sublime 或 vim 等）下载对应的 Emmet 插件，让你的代码快步如飞吧。下面我记录下常用的 Emmet 语法和快捷键。代码区里的均指在编辑器里输入的字符，然后按 “Tab” 键便会生成代码。<br>例如 输入<code>!</code> 然后按 “tab” 会得到如下所示的HTML文档初始机构，再也不用一个字母一个字母敲了，是不是很简单呢？</p>\n<p><img src=\"https://cloud.githubusercontent.com/assets/5771087/5154271/3a62e56a-728d-11e4-8259-1c09201c5b7f.gif\" alt=\"initializers\" title=\"图片来自http://www.smashingmagazine.com/2013/03/26/goodbye-zen-coding-hello-emmet/\"></p>\n<h2 id=\"HTML-编写\"><a href=\"#HTML-编写\" class=\"headerlink\" title=\"HTML 编写\"></a>HTML 编写</h2><ol>\n<li>生成HTML文档初始机构</li>\n</ol>\n<ul>\n<li><p><code>html:5</code> 或者 <code>!</code> 生成 HTML5 结构</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=&quot;zh-CN&quot;&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class=\"line\">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>html:xt</code> 生成 HTML4 过渡型</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;</span><br><span class=\"line\">&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; xml:lang=&quot;zh-cmn-Hans&quot;&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=UTF-8&quot;&gt;</span><br><span class=\"line\">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>html:4s</code> 生成 HTML4 严格型</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01//EN&quot; &quot;http://www.w3.org/TR/html4/strict.dtd&quot;&gt;</span><br><span class=\"line\">&lt;html lang=&quot;zh-cmn-Hans&quot;&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=UTF-8&quot;&gt;</span><br><span class=\"line\">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ol>\n<li><p>任意一个 html 标签输入都会生成完整的闭合标签。<br>例如输入 <code>p</code> 按 <code>tab</code> 则 生成：<code>&lt;p&gt;&lt;/p&gt;</code></p>\n</li>\n<li><p>生成带有 id 、class 的 HTML 标签: <code>#</code>为 id，<code>.</code> 为 class。<br>例如输入 <code>div#header.section</code> 则生成 <code>&lt;div id=&quot;header&quot; class=&quot;section&quot;&gt;&lt;/div&gt;</code></p>\n</li>\n<li><p>生成后代：<code>&gt;</code><br>例如输入<code>p&gt;span</code> 则生成 <code>&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;</code></p>\n</li>\n<li><p>生成兄弟标签：<code>+</code><br>例如输入<code>p+div</code> 则生成 <code>&lt;p&gt;&lt;/p&gt;&lt;div&gt;&lt;/div&gt;</code></p>\n</li>\n<li><p>生成上级标签： <code>^</code><br>例如输入<code>ul&gt;li&gt;a^div</code> 则生成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;ul&gt;</span><br><span class=\"line\">  &lt;li&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">  &lt;div&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>\n<p>也可以使用多个 <code>^</code>,<br>例如输入<code>ul&gt;li&gt;a^^div</code> 则生成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;ul&gt;</span><br><span class=\"line\">    &lt;li&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br><span class=\"line\">&lt;div&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>重复生成多个标签 <code>*</code><br>例如输入<code>ul&gt;li*5</code> 则生成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;ul&gt;</span><br><span class=\"line\">    &lt;li&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li&gt;&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>生成分组的标签: <code>()</code><br>例如输入<code>ul&gt;(li&gt;a)*5</code> 则生成</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;ul&gt;</span><br><span class=\"line\">    &lt;li&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>\n<p> 注意和<code>ul&gt;li&gt;a*5</code> 生成是不一样的</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;ul&gt;</span><br><span class=\"line\">    &lt;li&gt;</span><br><span class=\"line\">        &lt;a href=&quot;&quot;&gt;&lt;/a&gt;</span><br><span class=\"line\">        &lt;a href=&quot;&quot;&gt;&lt;/a&gt;</span><br><span class=\"line\">        &lt;a href=&quot;&quot;&gt;&lt;/a&gt;</span><br><span class=\"line\">        &lt;a href=&quot;&quot;&gt;&lt;/a&gt;</span><br><span class=\"line\">        &lt;a href=&quot;&quot;&gt;&lt;/a&gt;</span><br><span class=\"line\">    &lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>生成自定义属性：<code>[]</code><br>例如输入<code>img[https://octodex.github.com/images/codercat.jpg][alt=octcat]</code> 则生成</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;img src=&quot;https://octodex.github.com/images/codercat.jpg&quot; alt=&quot;octcat&quot; /&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>生成递增的属性标签等: <code>$</code><br>例如输入<code>ul&gt;li.item$*5</code> 则生成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;ul&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item1&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item2&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item3&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item4&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item5&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>生成多位递增的呢：<code>$$$</code><br>例如输入<code>ul&gt;li.item$$$*5</code> 则生成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;ul&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item001&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item002&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item003&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item004&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item005&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>\n<p>想生成几位输入几个<code>$</code></p>\n</li>\n<li><p>要生成递减的呢：<code>@-</code><br>例如输入<code>ul&gt;li.item$@-*5</code> 则生成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;ul&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item5&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item4&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item3&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item2&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item1&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>想要从某个特定的顺序开始呢：<code>@N</code><br>例如输入<code>ul&gt;li.item$@10*5</code> 则生成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;ul&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item10&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item11&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item12&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item13&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item14&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>逆序生成到某个数：<code>@-</code><br>例如输入<code>ul&gt;li.item$@-10*5</code> 则生成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;ul&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item14&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item13&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item12&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item11&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item10&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>生成文本内容：<code>{}</code><br>例如输入<code>p{我是paddingme}</code> 则生成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;p&gt;我是paddingme&lt;/p&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>缺省元素:</p>\n<ul>\n<li><p>声明一个带class的div 可以不用输入div；<br><code>.header+.footer</code> 则生成:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div class=&quot;header&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;div class=&quot;footer&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Emmet 还会根据父标签进行判定<br>例如输入<code>ul&gt;.item*3</code> 则生成：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;ul&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>下面是所有的隐式标签名称：</p>\n<ul>\n<li>li：用于 ul 和 ol 中</li>\n<li>tr：用于 table、tbody、thead 和 tfoot 中</li>\n<li>td：用于 tr 中</li>\n<li>option：用于 select 和 optgroup 中</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"CSS-编写\"><a href=\"#CSS-编写\" class=\"headerlink\" title=\"CSS 编写\"></a>CSS 编写</h2><p>首先，Sublime Text3 已经提供了比较强大的 CSS 样式所写方法来提高 CSS 编写效率。例如编写 <code>position: absolute</code>; 这一个属性，我们只需要输入 posa 这四个字母即可。可以在平时书写过程中，留意一下 ST3 提供了哪些属性的缩写方法，这样就可以提高一定的效率了。但是 Emmet 提供了更多的功能，请往下看。</p>\n<ol>\n<li><p>简写属性和属性值<br>比如要定义元素的宽度，只需输入w100，即可生成：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">width: 100px;</span><br></pre></td></tr></table></figure>\n<p>Emmet 的默认设置 w 是 width 的缩写，后面紧跟的数字就是属性值。默认的属性值单位是 px ，你可以在值的后面紧跟字符生成单位，可以是任意字符。例如，<code>w100foo</code> 会生成：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">width:100foo;</span><br></pre></td></tr></table></figure>\n<p>同样也可以简写属性单位，如果你紧跟属性值后面的字符是<code>p</code>，那么将会生成：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">width:100%;</span><br></pre></td></tr></table></figure>\n<p>下面是单位别名列表：</p>\n<ul>\n<li>p 表示%</li>\n<li>e 表示 em</li>\n<li>x 表示 ex</li>\n</ul>\n<p>像 margin 这样的属性，可能并不是一个属性值，生成多个属性值需要用横杠（-）连接两个属性值，因为 Emmet 的指令中是不允许空格的。例如使用 <code>m10-20</code> 可以生成：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">margin: 10px 20px;</span><br></pre></td></tr></table></figure>\n<p>如果你想生成负值，多加一条横杠即可。例如：<code>m10--20</code> 可以生成：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">margin: 10px -20px;</span><br></pre></td></tr></table></figure>\n<p>需要注意的是，如果你对每个属性都指定了单位，那么不需要使用横杠分割。例如使用  m10e20e 可以生成：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">margin: 10em 20em;</span><br></pre></td></tr></table></figure>\n<p>如果使用了横杠分割，那么属性值就变成负值了。例如使用 <code>m10e-20e</code> 就生成：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">margin: 10em -20em;</span><br></pre></td></tr></table></figure>\n<p>如果你想一次生成多条语句，可以使用 “+” 连接两条语句，例如使用 h10p+m5e  可以生成：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">height: 10%;</span><br><span class=\"line\">margin: 5em;</span><br></pre></td></tr></table></figure>\n<p>颜色值也是可以快速生成的，例如 <code>c#3</code> 生成<code>color: #333</code>;，更复杂一点的，使用  <code>bd5#0s</code> 可以生成 <code>border: 5px #000 solid</code>;。<br>下面是颜色值生成规则：</p>\n<ul>\n<li>‘# 1’ → #111111</li>\n<li>‘#e0’ → #e0e0e0</li>\n<li>‘#fc0’ → #ffcc00<br>生成 <code>!important</code> 这条语句也当然很简单，只需要一个 “!” 就可以了。</li>\n</ul>\n</li>\n<li><p>附加属性<br>使用 <code>@f</code> 即可生成 CSS3 中的 font-face 的代码结构：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@font-face &#123;</span><br><span class=\"line\">    font-family:;</span><br><span class=\"line\">    src:url();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>但是这个结构太简单，不包含一些其他的 font-face 的属性，诸如 background-image、border-radius、font、@font-face、 text-outline、 text-shadow 等属性，我们可以在生成的时候输入 “+” 生成增强的结构，例如我们可以输入 <code>@f+</code>  命令，即可输出选项增强版的 font-face 结构：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@font-face &#123;</span><br><span class=\"line\">    font-family: &apos;FontName&apos;;</span><br><span class=\"line\">    src: url(&apos;FileName.eot&apos;);</span><br><span class=\"line\">    src: url(&apos;FileName.eot?#iefix&apos;) format(&apos;embedded-opentype&apos;),</span><br><span class=\"line\">         url(&apos;FileName.woff&apos;) format(&apos;woff&apos;),</span><br><span class=\"line\">         url(&apos;FileName.ttf&apos;) format(&apos;truetype&apos;),</span><br><span class=\"line\">         url(&apos;FileName.svg#FontName&apos;) format(&apos;svg&apos;);</span><br><span class=\"line\">    font-style: normal;</span><br><span class=\"line\">    font-weight: normal;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>模糊匹配<br>如果有些缩写你拿不准，Emmet 会根据你的输入内容匹配最接近的语法，比如输入 <code>ov:h</code>、<code>ov-h</code>、<code>ovh</code> 和 <code>oh</code>，生成的代码是相同的：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">overflow: hidden;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>供应商前缀<br>CSS3 等现在还没有出正式的 W3C 规范，但是很多浏览器已经实现了对应的功能，仅作为测试只用，所以在属性前面加上自己独特的供应商前缀，不同的浏览器只会识别带有自己规定前缀的样式。然而为了实现兼容性，我们不得不编写大量的冗余代码，而且要加上对应的前缀。使用 Emmet 可以快速生成带有前缀的 CSS3 属性。<br>在任意字符前面加上一条横杠（-），即可生成该属性的带前缀代码，例如输入 <code>-foo-</code>css，会生成：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-webkit-foo-css: ;</span><br><span class=\"line\">-moz-foo-css: ;</span><br><span class=\"line\">-ms-foo-css: ;</span><br><span class=\"line\">-o-foo-css: ;</span><br><span class=\"line\">foo-css: ;</span><br></pre></td></tr></table></figure>\n<p>虽然 foo-css 并不是什么属性，但是照样可以生成。此外，你还可以详细的控制具体生成哪几个浏览器前缀或者先后顺序，使用 <code>-wm-trf</code> 即可生成：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-webkit-transform: ;</span><br><span class=\"line\">-moz-transform: ;</span><br><span class=\"line\">transform: ;</span><br></pre></td></tr></table></figure>\n<p>可想而知，w 就是 webkit 前缀的缩写，m 是 moz 前缀缩写，s 是 ms 前缀缩写，o  就是 opera 浏览器前缀的缩写。如果使用 <code>-osmw-abc</code> 即可生成：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-o-abc: ;</span><br><span class=\"line\">-ms-abc: ;</span><br><span class=\"line\">-moz-abc: ;</span><br><span class=\"line\">-webkit-abc: ;</span><br><span class=\"line\">abc: ;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>渐变背景<br>CSS3 中新增加了一条属性 <code>linear-gradient</code> 使用这个属性可以直接制作出渐变的效果。但是这个属性的参数比较复杂，而且需要添加实验性前缀，无疑需要生成大量代码。而 在 Emmet 中使用 <code>lg()</code>指令即可快速生成，例如：使用 <code>lg(left,#fff,50%,#000)</code>可以直接生成：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">background-image: -webkit-gradient(linear, 0 0, 100% 0, color-stop(0.5, #fff),  to(#000));</span><br><span class=\"line\">background-image: -webkit-linear-gradient(left, #fff 50%, #000);</span><br><span class=\"line\">background-image: -moz-linear-gradient(left, #fff 50%, #000);</span><br><span class=\"line\">background-image: -o-linear-gradient(left, #fff 50%, #000);</span><br><span class=\"line\">background-image: linear-gradient(left, #fff 50%, #000);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>附加功能<br>生成Lorem ipsum文本<br>Lorem ipsum 指一篇常用于排版设计领域的拉丁文文章，主要目的是测试文章或文字在不同字型、版型下看起来的效果。通过 Emmet，你只需输入 lorem 或 lipsum 即可生成这些文字。还可以指定文字的个数，比如 <code>lorem10</code>，将生成：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Explicabo, esse,  provident, nihil laudantium vitae quam natus a earum assumenda ex vel  consectetur fugiat eveniet minima veritatis blanditiis molestiae harum est!</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"定制\"><a href=\"#定制\" class=\"headerlink\" title=\"定制\"></a>定制</h2><p>你还可以定制Emmet插件：</p>\n<ul>\n<li>添加新缩写或更新现有缩写，可修改 snippets.json 文件</li>\n<li>更改Emmet过滤器和操作的行为，可修改 preferences.json 文件</li>\n<li>定义如何生成HTML或XML代码，可修改 syntaxProfiles.json 文件<br>如何自定义 Emmet 语法可参考：<a href=\"http://qianduanblog.com/post/sublime-text-3-custom-emmet-output-bootstrap-widget.html\" target=\"_blank\" rel=\"external\">http://qianduanblog.com/post/sublime-text-3-custom-emmet-output-bootstrap-widget.html</a>;github 上 一丝的 <a href=\"https://github.com/yisibl/emmet-plus\" target=\"_blank\" rel=\"external\">Emment-plus</a> 也推荐</li>\n</ul>\n<h2 id=\"快捷键\"><a href=\"#快捷键\" class=\"headerlink\" title=\"快捷键\"></a>快捷键</h2><ul>\n<li>Ctrl+,: 展开缩写</li>\n<li>Ctrl+M: 匹配对</li>\n<li>Ctrl+H: 使用缩写包括</li>\n<li>Shift+Ctrl+M: 合并行</li>\n<li>Ctrl+Shift+?: 上一个编辑点</li>\n<li>Ctrl+Shift+?: 下一个编辑点</li>\n<li>Ctrl+Shift+?: 定位匹配对</li>\n</ul>\n<p>Emmet 的官方 API 列表在<a href=\"http://docs.emmet.io/cheat-sheet/\" target=\"_blank\" rel=\"external\">这里</a>，有一个图片版本可以<a href=\"http://bubkoo.qiniudn.com/emmet-api.jpg\" target=\"_blank\" rel=\"external\">点此下载</a></p>\n<p>CSS 部分转自<a href=\"http://bubkoo.com/2014/01/04/emmet-a-toolkit-for-improving-html-css-workflow/\" target=\"_blank\" rel=\"external\">HTML/CSS 速写神器：Emmet</a>,因为写着写着发现 bubkoo 差不多给我要写的写完了。所以就摘抄下（不要打我），</p>\n<p>其余参考：<a href=\"http://docs.emmet.io/cheat-sheet/\" target=\"_blank\" rel=\"external\">Emmet官方文档</a>。</p>\n"},{"title":"【JavaScript】【学习心得】学习JavaScript 第六天","url":"http://padding.me/blog/2014/11/22/【JavaScript】【学习心得】学习JavaScript 第六天/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-JavaScript\" target=\"_blank\" rel=\"external\">Learning-JavaScript</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-JavaScript/issues/10\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-JavaScript/issues/10</a></p>\n<h1 id=\"动态创建标记\"><a href=\"#动态创建标记\" class=\"headerlink\" title=\"动态创建标记\"></a>动态创建标记</h1><h2 id=\"一些传统方法\"><a href=\"#一些传统方法\" class=\"headerlink\" title=\"一些传统方法\"></a>一些传统方法</h2><h3 id=\"document-write\"><a href=\"#document-write\" class=\"headerlink\" title=\"document.write\"></a><code>document.write</code></h3><p>为什么不使用 <code>document.write</code>?</p>\n<p><code>document.write</code> 的最大缺点是它违背了“行为应该与结构分离”的原则。<br>MIME 类型 application/xhtml+xml 与之不兼容，不会被执行。</p>\n<h3 id=\"innerHTML-属性\"><a href=\"#innerHTML-属性\" class=\"headerlink\" title=\"innerHTML 属性\"></a><code>innerHTML</code> 属性</h3><p>支持读取和写入。</p>\n<h2 id=\"DOM-方法\"><a href=\"#DOM-方法\" class=\"headerlink\" title=\"DOM 方法\"></a>DOM 方法</h2><h3 id=\"createElement-方法\"><a href=\"#createElement-方法\" class=\"headerlink\" title=\"createElement 方法\"></a><code>createElement</code> 方法</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">document</span>.createElement(nodeName);</span><br></pre></td></tr></table></figure>\n<h3 id=\"appendChild-方法\"><a href=\"#appendChild-方法\" class=\"headerlink\" title=\"appendChild 方法\"></a><code>appendChild</code> 方法</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">parent.appendChild(child);</span><br></pre></td></tr></table></figure>\n<h3 id=\"createTextNode-方法\"><a href=\"#createTextNode-方法\" class=\"headerlink\" title=\"createTextNode 方法\"></a><code>createTextNode</code> 方法</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">document</span>.createTextNode(text);</span><br></pre></td></tr></table></figure>\n<h3 id=\"在已有元素前插入一个新元素\"><a href=\"#在已有元素前插入一个新元素\" class=\"headerlink\" title=\"在已有元素前插入一个新元素\"></a>在已有元素前插入一个新元素</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">parentElement.insertBefore(newElement,tagetElement);</span><br></pre></td></tr></table></figure>\n<p>我们不必关心父元素到底是谁，因为 targetElement 的 parentNode 就是。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> gallery = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"gallery\"</span>);</span><br><span class=\"line\">gallery.parentNode.insertBefore(<span class=\"string\">\"p\"</span>,gallery);</span><br></pre></td></tr></table></figure>\n<h3 id=\"在现有元素后插入一个新元素\"><a href=\"#在现有元素后插入一个新元素\" class=\"headerlink\" title=\"在现有元素后插入一个新元素\"></a>在现有元素后插入一个新元素</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">insertAfter</span>(<span class=\"params\">newElement,targetElement</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> parent = targetElement.parentNode;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(parent.lastChild == targetElement)&#123;</span><br><span class=\"line\">        parent.appendChild(newElement);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        parent.insertBefore(newElement,targetElement.nextSibling);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>为了更好做到行为结构表现分离，我们应该去掉在上篇文章我们的代码结构中的<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;img id=&quot;placeholder&quot;  src=&quot;images/codercat.jpg&quot; alt=&quot;&quot;&gt;</span><br><span class=\"line\">&lt;p id=&quot;decription&quot;&gt;请选择一张图片&lt;/p&gt;</span><br></pre></td></tr></table></figure></p>\n<p>让我们来动态创建它们。下面是完成的代码，仔细体会实现下。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"zh-cmn-Hans\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>1-4 案例研究： JavaScript 图片库<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">           <span class=\"attribute\">margin</span>: <span class=\"number\">1em</span> <span class=\"number\">10%</span>;</span><br><span class=\"line\">           <span class=\"attribute\">color</span>: <span class=\"number\">#333</span>;</span><br><span class=\"line\">           <span class=\"attribute\">background-color</span>: <span class=\"number\">#ccc</span>;</span><br><span class=\"line\">           <span class=\"attribute\">font-family</span>: <span class=\"string\">\"Helvetica\"</span>,<span class=\"string\">\"Arial\"</span>,serif;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"selector-tag\">h1</span> &#123;</span><br><span class=\"line\">            <span class=\"attribute\">color</span>: <span class=\"number\">#333</span>;</span><br><span class=\"line\">            <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgba</span>(0, 0, 0, 0);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">            <span class=\"attribute\">color</span>: <span class=\"number\">#c60</span>;</span><br><span class=\"line\">            <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgba</span>(0, 0, 0, 0);</span><br><span class=\"line\">            <span class=\"attribute\">font-weight</span>: bold;</span><br><span class=\"line\">            <span class=\"attribute\">text-decoration</span>: none;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"selector-tag\">ul</span> &#123;</span><br><span class=\"line\">            <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">            <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">            <span class=\"attribute\">padding</span>: <span class=\"number\">1em</span>;</span><br><span class=\"line\">            <span class=\"attribute\">list-style-type</span>: none;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"selector-tag\">img</span> &#123;</span><br><span class=\"line\">            <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">            <span class=\"attribute\">clear</span>: both;</span><br><span class=\"line\">            <span class=\"attribute\">width</span>: <span class=\"number\">424px</span>;</span><br><span class=\"line\">            <span class=\"attribute\">height</span>: <span class=\"number\">424px</span>;</span><br><span class=\"line\">            <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#ccc</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Snapshots<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">id</span>=<span class=\"string\">\"image-gallery\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"images/codercat.jpg\"</span>  <span class=\"attr\">title</span>=<span class=\"string\">\"This is codercat.jpg.\"</span>&gt;</span>codercat<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"images/inspectocat.jpg\"</span> <span class=\"attr\">title</span>=<span class=\"string\">\"This is inspectocat.jpg.\"</span>&gt;</span>inspectocat<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"images/maxtocat.gif\"</span> <span class=\"attr\">title</span>=<span class=\"string\">\"This is maxtocat.gif.\"</span>&gt;</span>maxtocat<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"images/yaktocat.png\"</span> <span class=\"attr\">title</span>=<span class=\"string\">\"This is yaktocat.png.\"</span>&gt;</span>yaktocat<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"images/octobiwan.jpg\"</span> <span class=\"attr\">title</span>=<span class=\"string\">\"This isoctobiwan.jpg.\"</span>&gt;</span>octobiwan<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"1-7.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">addLoadEvent</span>(<span class=\"params\">func</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> oldonload = <span class=\"built_in\">window</span>.onload;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> oldonload != <span class=\"string\">'function'</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">window</span>.onload = func;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            oldonload();</span><br><span class=\"line\">            func();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">insertAfter</span>(<span class=\"params\">newElement, targetElement</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> parent = targetElement.parentNode;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (parent.lastChild == targetElement) &#123;</span><br><span class=\"line\">        parent.appendChild(newElement);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        parent.insertBefore(newElement, targetElement.nextSlibing);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">preparePlaceholder</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"built_in\">document</span>.createElement) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"built_in\">document</span>.createTextNode) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"built_in\">document</span>.getElementById) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"image-gallery\"</span>)) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> placeholder = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"img\"</span>);</span><br><span class=\"line\">    placeholder.setAttribute(<span class=\"string\">\"id\"</span>, <span class=\"string\">\"placeholder\"</span>);</span><br><span class=\"line\">    placeholder.setAttribute(<span class=\"string\">\"src\"</span>, <span class=\"string\">\"images/codercat.jpg\"</span>);</span><br><span class=\"line\">    placeholder.setAttribute(<span class=\"string\">\"alt\"</span>, <span class=\"string\">\"my image gallery\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> description = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"p\"</span>);</span><br><span class=\"line\">    description.setAttribute(<span class=\"string\">\"id\"</span>, <span class=\"string\">\"description\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> desctext = <span class=\"built_in\">document</span>.createTextNode(<span class=\"string\">\"choose an image\"</span>);</span><br><span class=\"line\">    description.appendChild(desctext);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> gallery = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"image-gallery\"</span>);</span><br><span class=\"line\">    insertAfter(placeholder,gallery);</span><br><span class=\"line\">    insertAfter(description,gallery);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">prepareGallery</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"built_in\">document</span>.getElementsByTagName) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"built_in\">document</span>.getElementById) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"image-gallery\"</span>)) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> gallery = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"image-gallery\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> links = gallery.getElementsByTagName(<span class=\"string\">\"a\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; links.length; i++) &#123;</span><br><span class=\"line\">        links[i].onclick = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> showPic(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        links[i].onkeypress = links[i].onclick;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">showPic</span>(<span class=\"params\">whichpic</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"placeholder\"</span>)) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> source = whichpic.getAttribute(<span class=\"string\">\"href\"</span>);</span><br><span class=\"line\">    placeholder.setAttribute(<span class=\"string\">\"src\"</span>, source);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"description\"</span>)) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (whichpic.getAttribute(<span class=\"string\">\"title\"</span>)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> text = whichpic.getAttribute(<span class=\"string\">\"title\"</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> text = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> description = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"description\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (description.firstChild.nodeType == <span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">        description.firstChild.nodeValue = text;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">addLoadEvent(preparePlaceholder);</span><br><span class=\"line\">addLoadEvent(prepareGallery);</span><br></pre></td></tr></table></figure>\n<p>demo：<a href=\"http://codepen.io/paddingme/pen/jEERab\" target=\"_blank\" rel=\"external\">codepen</a></p>\n<h2 id=\"AJAX\"><a href=\"#AJAX\" class=\"headerlink\" title=\"AJAX\"></a>AJAX</h2><p>AJAX 依赖 JavaScript, 故可能有浏览器不支持他，而搜索引擎的蜘蛛程序也不会抓取到有关内容。</p>\n<p>AJAX 技术的核心是 XMLHttpRequest 对象。</p>\n"},{"title":"【JavaScript】【学习心得】学习JavaScript 第五天","url":"http://padding.me/blog/2014/11/21/【JavaScript】【学习心得】学习JavaScript 第五天/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-JavaScript\" target=\"_blank\" rel=\"external\">Learning-JavaScript</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-JavaScript/issues/9\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-JavaScript/issues/9</a></p>\n<p>经过昨天的学习，我们掌握了 JavaScript 的一些最佳实践，还记得之前我们所作的<br>那个简单的 JavaScript 图片库吗，DEMO 地址请戳<a href=\"http://codepen.io/paddingme/pen/qCuDo\" target=\"_blank\" rel=\"external\">这里</a>,什么？ DEMO 都懒的戳，好吧我给贴出来吧。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"images/codercat.jpg\"</span>  <span class=\"attr\">title</span>=<span class=\"string\">\"This is codercat.jpg.\"</span> <span class=\"attr\">onclick</span>=<span class=\"string\">\"showPic(this);return false;\"</span>&gt;</span>codercat<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"images/inspectocat.jpg\"</span> <span class=\"attr\">title</span>=<span class=\"string\">\"This is inspectocat.jpg.\"</span> <span class=\"attr\">onclick</span>=<span class=\"string\">\"showPic(this);return false;\"</span>&gt;</span>inspectocat<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"images/maxtocat.gif\"</span> <span class=\"attr\">title</span>=<span class=\"string\">\"This is maxtocat.gif.\"</span> <span class=\"attr\">onclick</span>=<span class=\"string\">\"showPic(this);return false;\"</span>&gt;</span>maxtocat<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"images/yaktocat.png\"</span> <span class=\"attr\">title</span>=<span class=\"string\">\"This is yaktocat.png.\"</span> <span class=\"attr\">onclick</span>=<span class=\"string\">\"showPic(this);return false;\"</span>&gt;</span>yaktocat<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"images/octobiwan.jpg\"</span> <span class=\"attr\">title</span>=<span class=\"string\">\"This isoctobiwan.jpg.\"</span> <span class=\"attr\">onclick</span>=<span class=\"string\">\"showPic(this);return false;\"</span>&gt;</span>octobiwan<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">id</span>=<span class=\"string\">\"placeholder\"</span>  <span class=\"attr\">src</span>=<span class=\"string\">\"images/codercat.jpg\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">id</span>=<span class=\"string\">\"decription\"</span>&gt;</span>请选择一张图片<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">showPic</span>(<span class=\"params\">whichpic</span>)</span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">var</span> source = whichpic.getAttribute(<span class=\"string\">'href'</span>);</span><br><span class=\"line\">     <span class=\"keyword\">var</span> placeholder = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'placeholder'</span>);</span><br><span class=\"line\">     placeholder.setAttribute(<span class=\"string\">'src'</span>,source);</span><br><span class=\"line\">     <span class=\"keyword\">var</span> text = whichpic.getAttribute(<span class=\"string\">'title'</span>);</span><br><span class=\"line\">     <span class=\"keyword\">var</span> decription = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'decription'</span>);</span><br><span class=\"line\">     decription.firstChild.nodeValue = text;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n<p>下面我们来根据昨天学的最佳实践考虑以下问题：</p>\n<h2 id=\"它支持平稳退化吗？\"><a href=\"#它支持平稳退化吗？\" class=\"headerlink\" title=\"它支持平稳退化吗？\"></a>它支持平稳退化吗？</h2><p>如果用户浏览器不支持 JavaScript 会怎么样？</p>\n<h2 id=\"它的-JavaScript-与-HTML-标记是否分离？\"><a href=\"#它的-JavaScript-与-HTML-标记是否分离？\" class=\"headerlink\" title=\"它的 JavaScript 与 HTML 标记是否分离？\"></a>它的 JavaScript 与 HTML 标记是否分离？</h2><p><strong>如果你想用 JavaScript 给某个网页添加一些行为，就不应该让  JavaScript 代码对这个网页的结构有任何依赖。</strong></p>\n<p>不符合， <code>a</code> 标签嵌入了大量的 click 事件, HTML 应该改写为：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;ul id=\"image-gallery\"&gt;</span><br><span class=\"line\">    &lt;li&gt;</span><br><span class=\"line\">        &lt;a href=\"images/codercat.jpg\"  title=\"This is codercat.jpg.\"&gt;codercat&lt;/a&gt;</span><br><span class=\"line\">    &lt;/li&gt;</span><br><span class=\"line\">    &lt;li&gt;</span><br><span class=\"line\">        &lt;a href=\"images/inspectocat.jpg\" title=\"This is inspectocat.jpg.\"&gt;inspectocat&lt;/a&gt;</span><br><span class=\"line\">    &lt;/li&gt;</span><br><span class=\"line\">    &lt;li&gt;</span><br><span class=\"line\">        &lt;a href=\"images/maxtocat.gif\" title=\"This is maxtocat.gif.\"maxtocat&lt;/a&gt;</span><br><span class=\"line\">    &lt;/li&gt;</span><br><span class=\"line\">    &lt;li&gt;</span><br><span class=\"line\">        &lt;a href=\"images/yaktocat.png\" title=\"This is yaktocat.png.\"&gt;yaktocat&lt;/a&gt;</span><br><span class=\"line\">    &lt;/li&gt;</span><br><span class=\"line\">    &lt;li&gt;</span><br><span class=\"line\">        &lt;a href=\"images/octobiwan.jpg\" title=\"This isoctobiwan.jpg.\"&gt;octobiwan&lt;/a&gt;</span><br><span class=\"line\">    &lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;img id=\"placeholder\"  src=\"images/codercat.jpg\" alt=\"\"&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;p id=\"decription\"&gt;请选择一张图片&lt;/p&gt;</span><br></pre></td></tr></table></figure>\n<p>JavaScript 则改写为：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">prepareGallery</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"built_in\">document</span>.getElementsByTagName) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"built_in\">document</span>.getElementById) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"built_in\">document</span>.getElementsById(<span class=\"string\">\"image-gallery\"</span>)) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> gallery = <span class=\"built_in\">document</span>.getElementsById(<span class=\"string\">\"image-gallery\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> links = gallery.getElementsByTagName(<span class=\"string\">\"a\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>;i &lt; links.length;i++) &#123;</span><br><span class=\"line\">        links[i].onclick = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            showPic(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"共享-onload-事件\"><a href=\"#共享-onload-事件\" class=\"headerlink\" title=\"共享 onload 事件\"></a>共享 onload 事件</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.onload = firstFunction;</span><br><span class=\"line\"><span class=\"built_in\">window</span>.onload = secondFunction;</span><br></pre></td></tr></table></figure>\n<p>这里只会执行 <code>secondFunction</code>。如果想要在网页加载完毕同时执行这两个函数可以写：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    firstFunction();</span><br><span class=\"line\">    secondFunction();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>还有一种 方法 <code>addLoadEvent</code>:</p>\n<ul>\n<li>把现有的 window.onload 事件处理函数的值存入变量 oldonload；</li>\n<li>若在这个处理函数上还没有绑定任何函数，就像平时那样把新函数添加给它；</li>\n<li>若在这个处理函数上已经绑定了一些函数，就把新函数追加到现有指令的末尾。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">addLoadEvent</span>(<span class=\"params\">func</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> oldonload = <span class=\"built_in\">window</span>.onload;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">typeof</span> <span class=\"built_in\">window</span>.onload != <span class=\"string\">'function'</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">window</span>.onload = func;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            oldonload();</span><br><span class=\"line\">            func();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">addLoadEvent(firstFunction);</span><br><span class=\"line\">addLoadEvent(secondFunction);</span><br></pre></td></tr></table></figure>\n<p>对于图片库，咱们可以使用 <code>addLoadEvent(prepareGallery)</code>。</p>\n<h2 id=\"不要做太多的假设\"><a href=\"#不要做太多的假设\" class=\"headerlink\" title=\"不要做太多的假设\"></a>不要做太多的假设</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">prepareGallery</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"built_in\">document</span>.getElementsByTagName) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"built_in\">document</span>.getElementById) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"image-gallery\"</span>)) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> gallery = <span class=\"built_in\">document</span>.getElementsById(<span class=\"string\">\"image-gallery\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> links = gallery.getElementsByTagName(<span class=\"string\">\"a\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>;i &lt; links.length;i++) &#123;</span><br><span class=\"line\">        links[i].onclick = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> !showPic(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">showPic</span>(<span class=\"params\">whichpic</span>) </span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">if</span>(!<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'placeholder'</span>)) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">     <span class=\"keyword\">var</span> placeholder = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'placeholder'</span>);</span><br><span class=\"line\">     <span class=\"keyword\">var</span> source = whichpic.getAttribute(<span class=\"string\">'href'</span>);</span><br><span class=\"line\">     placeholder.setAttribute(<span class=\"string\">'src'</span>,source);</span><br><span class=\"line\">     <span class=\"keyword\">if</span>(<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'decription'</span>))&#123;</span><br><span class=\"line\">         <span class=\"keyword\">var</span> text = whichpic.getAttribute(<span class=\"string\">'title'</span>);</span><br><span class=\"line\">         <span class=\"keyword\">var</span> decription = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'decription'</span>);</span><br><span class=\"line\">         decription.firstChild.nodeValue = text;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"优化\"><a href=\"#优化\" class=\"headerlink\" title=\"优化\"></a>优化</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">showPic</span>(<span class=\"params\">whichpic</span>) </span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">if</span>(!<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'placeholder'</span>)) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">     <span class=\"keyword\">var</span> source = whichpic.getAttribute(<span class=\"string\">'href'</span>);</span><br><span class=\"line\">     <span class=\"keyword\">var</span> placeholder = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'placeholder'</span>);</span><br><span class=\"line\">     <span class=\"keyword\">if</span>(placeholder.nodeName != <span class=\"string\">\"IMG\"</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>; <span class=\"comment\">//nodeName 属性总返回大写字母的值</span></span><br><span class=\"line\">     placeholder.setAttribute(<span class=\"string\">'src'</span>,source);</span><br><span class=\"line\">     <span class=\"keyword\">if</span>(<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'decription'</span>))&#123;</span><br><span class=\"line\">         <span class=\"keyword\">var</span> text = whichpic.getAttribute(<span class=\"string\">'title'</span>) ? whichpic.getAttribute(<span class=\"string\">'title'</span>) : <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">         <span class=\"keyword\">var</span> decription = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'decription'</span>);</span><br><span class=\"line\">         <span class=\"keyword\">if</span>(decription.firstChild.nodeValue == <span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">          decription.firstChild.nodeValue= text;</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"键盘访问\"><a href=\"#键盘访问\" class=\"headerlink\" title=\"键盘访问\"></a>键盘访问</h2><p><code>onkeypress</code> 事件会在键盘按键被按下并释放一个键时发生。最好不要使用 <code>onkeypress</code> 处理函数，因为在几乎所有的浏览器里，用 tab 键移动到某个链接然后按下回车键的动作也会触发 <code>onclick</code>事件。</p>\n<p>综上，咱们的改进版的 JavaScript 图片库就出来了, 在线 DEMO 地址：<a href=\"http://codepen.io/paddingme/pen/MYYzWZ\" target=\"_blank\" rel=\"external\">http://codepen.io/paddingme/pen/MYYzWZ</a></p>\n"},{"title":"【JavaScript】【学习心得】学习JavaScript 第四天","url":"http://padding.me/blog/2014/11/20/【JavaScript】【学习心得】学习JavaScript 第四天/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-JavaScript\" target=\"_blank\" rel=\"external\">Learning-JavaScript</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-JavaScript/issues/7\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-JavaScript/issues/7</a></p>\n<p>经过了三天的持续学习，咱们的第一个 js 网页你有没有做出来呢？这个简单的 <a href=\"http://codepen.io/paddingme/pen/qCuDo\" target=\"_blank\" rel=\"external\">JavaScript 图片库</a> 它是否完美？今天我们来学习一些最佳实践，来完善我们的这个 JavaScript 图片库。</p>\n<h2 id=\"质疑一切\"><a href=\"#质疑一切\" class=\"headerlink\" title=\"质疑一切\"></a>质疑一切</h2><p>若要使用 JavaScript 就要确认：这么做会对用户的浏览体验产生怎样的影响？还有个更重要的问题：如果用户的浏览器不支持 JavaScript 该怎么办？这些都是我们需要考虑的。</p>\n<h2 id=\"平稳退化（graceful-degradation）\"><a href=\"#平稳退化（graceful-degradation）\" class=\"headerlink\" title=\"平稳退化（graceful degradation）\"></a>平稳退化（graceful degradation）</h2><p>禁止使用弹窗，这是一个体验非常糟糕的应用，在读屏软件上不一定能弹出（可访问性），可以用其他手段实现同样的效果，例如说朦态窗。</p>\n<h2 id=\"window-open-url-name-features\"><a href=\"#window-open-url-name-features\" class=\"headerlink\" title=\"window.open(url,name,features)\"></a><code>window.open(url,name,features)</code></h2><ul>\n<li>url 一个可选的字符串，声明了要在新窗口中显示的文档的 url 。如果省略了这个参数，或者它的值是空字符串，那么新窗口就不会显示任何文档。</li>\n<li>name 一个可选的字符串，该字符串是一个由逗号分隔的特征列表，其中包括数字、字母和下划线，该字符声明了新窗口的名称。这个名称可以用作标记 <a> 和 <form> 的属性 target 的值。如果该参数指定了一个已经存在的窗口，那么 open() 方法就不再创建一个新窗口，而只是返回对指定窗口的引用。在这种情况下，features 将被忽略。</form></a></li>\n<li>features 一个可选的字符串，声明了新窗口要显示的标准浏览器的特征。如果省略该参数，新窗口将具有所有标准特征。在窗口特征这个表格中，我们对该字符串的格式进行了详细的说明。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">popUp</span>(<span class=\"params\">winURL</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">window</span>.open(winURL,<span class=\"string\">\"popup\"</span>,<span class=\"string\">\"width=320,height=480\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"JavaScript-伪协议\"><a href=\"#JavaScript-伪协议\" class=\"headerlink\" title=\"JavaScript 伪协议\"></a>JavaScript 伪协议</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"JavaScript:popUp('http://padding.me')\"</span>&gt;</span>Example<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>这条语句在支持 “JavaScript:” 伪协议的浏览器中正常运行，较老的浏览器则会去尝试打开那个链接但失败，支持这种伪协议但禁用了 JavaScript 功能的浏览器则会什么也不做。<br>“JavaScript:” 伪协议调用 JavaScript 代码的做法非常不好。</p>\n<h2 id=\"内嵌的事件处理函数\"><a href=\"#内嵌的事件处理函数\" class=\"headerlink\" title=\"内嵌的事件处理函数\"></a>内嵌的事件处理函数</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span> <span class=\"attr\">onclick</span>=<span class=\"string\">\"popUp('http://padding.me');return false;\"</span>&gt;</span>Example<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>这样的做法同样操作，不能进行平稳退化。若用户禁用 JavaScript 功能，这样的链接毫无作用。</p>\n<p>做到平稳退化，应该将”#”换为真实的 url。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"http://paddingme\"</span> <span class=\"attr\">onclick</span>=<span class=\"string\">\"popUp('http://padding.me');return false;\"</span>&gt;</span>Example<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"http://paddingme\"</span> <span class=\"attr\">onclick</span>=<span class=\"string\">\"popUp(this.getAttribute('href'));return false;\"</span>&gt;</span>Example<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"http://paddingme\"</span> <span class=\"attr\">onclick</span>=<span class=\"string\">\"popUp(this.href);return false;\"</span>&gt;</span>Example<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"渐进增强\"><a href=\"#渐进增强\" class=\"headerlink\" title=\"渐进增强\"></a>渐进增强</h2><p>CSS的出现，有了 HTML 结构与样式的分离。这也是一种渐进增强，如果禁用了 CSS，网页还是能展现基本的文档内容。</p>\n<h2 id=\"分离-JavaScript\"><a href=\"#分离-JavaScript\" class=\"headerlink\" title=\"分离  JavaScript\"></a>分离  JavaScript</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"http://paddingme\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"popUp\"</span>&gt;</span>Example<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.onload = prepareLinks;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">prepareLinks</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"built_in\">document</span>.getElementsByTagName) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> links = <span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">\"a\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>;i &lt; links.length;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(links[i].getAttribute(<span class=\"string\">\"class\"</span>) == <span class=\"string\">\"popUp\"</span>)&#123;</span><br><span class=\"line\">            links[i].onclick = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">                popUp(<span class=\"keyword\">this</span>.getAttribute(<span class=\"string\">\"href\"</span>));</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"性能考虑\"><a href=\"#性能考虑\" class=\"headerlink\" title=\"性能考虑\"></a>性能考虑</h2><h3 id=\"尽量少访问-DOM-和尽量减少标记\"><a href=\"#尽量少访问-DOM-和尽量减少标记\" class=\"headerlink\" title=\"尽量少访问 DOM 和尽量减少标记\"></a>尽量少访问 DOM 和尽量减少标记</h3><p>不管是什么时候，只要是查询 DOM 中的某些元素，浏览器都会搜索整个 DOM 树，从中查找可能匹配的元素。</p>\n<p>而过多不必要的元素标记只会增加 DOM 树的规模，进而增加遍历 DOM 树以查找特定元素的时间。</p>\n<h3 id=\"合并和放置脚本\"><a href=\"#合并和放置脚本\" class=\"headerlink\" title=\"合并和放置脚本\"></a>合并和放置脚本</h3><p>将多个脚本合并为一个脚本，以减少浏览器向服务器端发送求，将脚本放在 <code>&lt;/body&gt;</code>之前，为什么呢？这样 DOM 操作可以在浏览器将网页全部加载渲染完毕之后开始进行，以减少浏览器对网页的重绘，提升网页加载速度和性能。</p>\n<h3 id=\"压缩脚本\"><a href=\"#压缩脚本\" class=\"headerlink\" title=\"压缩脚本\"></a>压缩脚本</h3><p>将脚本压缩减小脚本体积，减缓带宽压力，更快的将脚本下载下来。</p>\n<p>OK，今天学了这些最佳实践，明天我们根据这些最佳实践来重构我们的 JavaScript 图片库。</p>\n"},{"title":"CSS居中到底哪家强？","url":"http://padding.me/blog/2014/11/20/CSS居中到底哪家强？/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-HTML-CSS\" target=\"_blank\" rel=\"external\">Learning-HTML-CSS</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-HTML-CSS/issues/16\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-HTML-CSS/issues/16</a></p>\n<p>题目：<a href=\"http://weibo.com/2878451190/Bx9mz6sVE\" target=\"_blank\" rel=\"external\">@我是LowLow君 的问题</a> </p>\n<blockquote>\n<p>前几天被阿里的面试官问到如果一个元素是fixed定位，不定宽，不定高，如果只利用css实现页面居中显示。思考良久也没有答案[吃惊]大神们求解释。</p>\n</blockquote>\n<ol>\n<li>@w3cplus： 不知道这里能否帮助你找到思路：<a href=\"http://t.cn/zQ85WB2\" target=\"_blank\" rel=\"external\">http://t.cn/zQ85WB2</a></li>\n<li>@zenoven： top: 50%; left: 50%; transform: translate(-50%,-50%);</li>\n<li>@winter：line-height，flexbox，transform，tablecell之类的都可以做到</li>\n<li>@仅愚：提供一种简单的思路,without css3：<a href=\"http://t.cn/RzwOsHH\" target=\"_blank\" rel=\"external\">http://t.cn/RzwOsHH</a> </li>\n</ol>\n<p>这里 大漠整理了各种居中的文章，<a href=\"http://www.w3cplus.com/collective-5.html\" target=\"_blank\" rel=\"external\">周刊5# 居中之美</a></p>\n<p>我就暂先不整理了。</p>\n"},{"title":"【JavaScript】【学习心得】学习JavaScript 第三天","url":"http://padding.me/blog/2014/11/19/【JavaScript】【学习心得】学习JavaScript 第三天/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-JavaScript\" target=\"_blank\" rel=\"external\">Learning-JavaScript</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-JavaScript/issues/6\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-JavaScript/issues/6</a></p>\n<p>艾玛，昨天的 <a href=\"http://www.imooc.com/wenda/detail/235873\" target=\"_blank\" rel=\"external\">【JavaScript】【学习心得】学习 JavaScript 第三天</a>被运营同学推荐置顶了，并且推荐编辑器支持 markdown 语法也注意到了，imooc 超棒的。好的，咱们继续学习 JavaScript 吧。</p>\n<p>先回顾下昨天学的知识吧，主要学习了常用的几个 DOM 操作方法：</p>\n<ul>\n<li><code>document.getElementById(id)</code>；</li>\n<li><code>document.getElementsByTagName(tag)</code>；</li>\n<li><code>document.getElementsByClassName(class)</code>,注意旧的浏览器不支持，需要重写；</li>\n<li><code>object.getAttribute(attribute)</code></li>\n<li><code>object.setAttribute(attribute,value)</code></li>\n</ul>\n<p>好了今天咱们学习《第四章  案例研究： JavaScript 图片库》 来动起手来，咱们一起来写一个简单的 JavaScript 图片库，至于细节方面大家可以翻下下仔细研读下，我就不搬运了，我怕作者来打我。</p>\n<p>好了，我们首先来掌握下我们需要知道的知识点：</p>\n<ol>\n<li><p>事件处理函数(event handler)的作用是：在特定事件发生时调用特定的 JavaScript 代码。</p>\n</li>\n<li><p>如何禁止点击事件之后，链接继续跳转。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;a href=&quot;images/codercat.jpg&quot;  onclick=&quot;showPic(this);return false;&quot;&gt;codercat&lt;/a&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>childNodes</code>  属性返回包含被选节点的子节点的 NodeList。<br>如果选定的节点没有子节点，则该属性返回不包含节点的 NodeList。文档里几乎每一样东西都是一个节点，甚至连空格和换行符都会被解释为节点，而它们也全部包含在 <code>childNodes</code> 属性所返回的数组当中。</p>\n</li>\n<li><p><code>nodeType</code> 属性可返回节点的节点类型。<br><code>nodeType</code> 属性总共有 12 种可能值，但其中仅有 3 种具有使用价值：</p>\n<ul>\n<li>元素节点的 <code>nodeType</code> 属性值为 1；</li>\n<li>属性节点的 <code>nodeType</code> 属性值为 2；</li>\n<li>文本节点的 <code>nodeType</code> 属性值为 3；</li>\n</ul>\n</li>\n<li><p><code>nodeValue</code> 属性可设置或返回某节点的值，根据其类型。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;p id=&quot;decription&quot;&gt;请选择一张图片&lt;/p&gt;</span><br></pre></td></tr></table></figure>\n<p><code>document.getElementById(&#39;decription&#39;).nodevalue</code> 为空，其文本内容应该是第一个字节点。</p>\n<p>应该是 <code>document.getElementById(&#39;decription&#39;).childNodes[0].nodevalue</code></p>\n<ol>\n<li><code>firstChild</code> 属性返回被选节点的第一个子节点。<code>lastChild</code> 属性返回被选节点的最后一个子节点。<br>如果它们选定的节点没有子节点，则该属性返回 NULL。</li>\n</ol>\n</li>\n</ol>\n<p>好的 我们来看下代码结构：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=&quot;zh-cmn-Hans&quot;&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class=\"line\">    &lt;title&gt;1-4 案例研究： JavaScript 图片库&lt;/title&gt;</span><br><span class=\"line\">    &lt;style&gt;</span><br><span class=\"line\">        body &#123;</span><br><span class=\"line\">           margin: 1em 10%;</span><br><span class=\"line\">           color: #333;</span><br><span class=\"line\">           background-color: #ccc;</span><br><span class=\"line\">           font-family: &quot;Helvetica&quot;,&quot;Arial&quot;,serif;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        h1 &#123;</span><br><span class=\"line\">            color: #333;</span><br><span class=\"line\">            background-color: rgba(0, 0, 0, 0);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        a &#123;</span><br><span class=\"line\">            color: #c60;</span><br><span class=\"line\">            background-color: rgba(0, 0, 0, 0);</span><br><span class=\"line\">            font-weight: bold;</span><br><span class=\"line\">            text-decoration: none;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        ul &#123;</span><br><span class=\"line\">            padding: 0;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        li &#123;</span><br><span class=\"line\">            float: left;</span><br><span class=\"line\">            padding: 1em;</span><br><span class=\"line\">            list-style-type: none;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        img &#123;</span><br><span class=\"line\">            display: block;</span><br><span class=\"line\">            clear: both;</span><br><span class=\"line\">            width: 424px;</span><br><span class=\"line\">            height: 424px;</span><br><span class=\"line\">            border: 1px solid #ccc;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &lt;/style&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">    &lt;h1&gt;Snapshots&lt;/h1&gt;</span><br><span class=\"line\">    &lt;ul&gt;</span><br><span class=\"line\">        &lt;li&gt;&lt;a href=&quot;images/codercat.jpg&quot;  title=&quot;This is codercat.jpg.&quot; onclick=&quot;showPic(this);return false;&quot;&gt;codercat&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">        &lt;li&gt;&lt;a href=&quot;images/inspectocat.jpg&quot; title=&quot;This is inspectocat.jpg.&quot; onclick=&quot;showPic(this);return false;&quot;&gt;inspectocat&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">        &lt;li&gt;&lt;a href=&quot;images/maxtocat.gif&quot; title=&quot;This is maxtocat.gif.&quot; onclick=&quot;showPic(this);return false;&quot;&gt;maxtocat&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">        &lt;li&gt;&lt;a href=&quot;images/yaktocat.png&quot; title=&quot;This is yaktocat.png.&quot; onclick=&quot;showPic(this);return false;&quot;&gt;yaktocat&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">        &lt;li&gt;&lt;a href=&quot;images/octobiwan.jpg&quot; title=&quot;This isoctobiwan.jpg.&quot; onclick=&quot;showPic(this);return false;&quot;&gt;octobiwan&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;/ul&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;img id=&quot;placeholder&quot;  src=&quot;images/codercat.jpg&quot; alt=&quot;&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;p id=&quot;decription&quot;&gt;请选择一张图片&lt;/p&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;script&gt;</span><br><span class=\"line\">        function showPic(whichpic)&#123;</span><br><span class=\"line\">            var source = whichpic.getAttribute(&apos;href&apos;);</span><br><span class=\"line\">            var placeholder = document.getElementById(&apos;placeholder&apos;);</span><br><span class=\"line\">            placeholder.setAttribute(&apos;src&apos;,source);</span><br><span class=\"line\">            //placeholder.src = source;</span><br><span class=\"line\">            var text = whichpic.getAttribute(&apos;title&apos;);</span><br><span class=\"line\">            var decription = document.getElementById(&apos;decription&apos;);</span><br><span class=\"line\">            decription.firstChild.nodeValue = text;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<p>你掌握了吗，自己敲出来看看。 是不是很棒哦，哦 对了，这里的图片我选的很萌很萌的 github　的那些猫。 </p>\n<h3 id=\"DEMO-地址-codepen-或者1-4-html\"><a href=\"#DEMO-地址-codepen-或者1-4-html\" class=\"headerlink\" title=\"DEMO 地址:codepen 或者1-4.html\"></a>DEMO 地址:<a href=\"http://codepen.io/paddingme/pen/qCuDo\" target=\"_blank\" rel=\"external\">codepen</a> 或者<a href=\"https://github.com/paddingme/Learning-JavaScript/blob/master/Demo/1-4.html\" target=\"_blank\" rel=\"external\">1-4.html</a></h3>"},{"title":"解析url","url":"http://padding.me/blog/2014/11/18/解析url/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-JavaScript\" target=\"_blank\" rel=\"external\">Learning-JavaScript</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-JavaScript/issues/4\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-JavaScript/issues/4</a></p>\n<p>http:// sub.example.com:8023/home/?foo=bar&amp;ciao=cc#hash </p>\n<p>soulteary: 不考虑不“正确”的多个井和错误的query string 在hash后，split井后split&amp;就好；或者match正则／#(\\w+)&amp;?／g;再或者给a标签href赋值，取hash, iframe的话，在onload回调取location…</p>\n<p>小麻昵称被抢了:var link = document.createElement(‘a’); link.href = “http:// sub.example.com:8023/home/?foo=bar&amp;ciao=cc#hash”; console.log(link.hostname) …..</p>\n<p>flyyang_:from: <a href=\"http://t.cn/8FfJGf7\" target=\"_blank\" rel=\"external\">http://t.cn/8FfJGf7</a> var parser = document.createElement(‘a’); parser.href = “<a href=\"http://t.cn/R7SCuf6\" target=\"_blank\" rel=\"external\">http://t.cn/R7SCuf6</a>“; parser.protocol; //</p>\n"},{"title":"【JavaScript】【学习心得】学习JavaScript 第二天","url":"http://padding.me/blog/2014/11/18/【JavaScript】【学习心得】学习JavaScript 第二天/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-JavaScript\" target=\"_blank\" rel=\"external\">Learning-JavaScript</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-JavaScript/issues/5\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-JavaScript/issues/5</a></p>\n<p>【JavaScript】【学习心得】学习 JavaScript 第二天</p>\n<p>昨天 JavaScript 第一天，洋洋洒洒三千字，但是 <a href=\"http://www.imooc.com/wenda/detail/235627\" target=\"_blank\" rel=\"external\">imooc</a> 上竟然没有小伙伴而围观, 让我的心拔凉拔凉的，我这儿可是有满满的干货，还附赠逗比属性。另外 imooc 的编辑器竟然不支持 markdown，满地打滚要求 imooc 的攻城狮火速支持 markdown。好了废话不多说，治病看疗效，我还是踏踏实实的继续练习 JavaScript 吧。</p>\n<p>昨天咱们已经学习了《JavaScript DOM 编程艺术》第一章——JavaScript 简史 和 第二章——语法，咱们紧接着学习《第三章 DOM》，重点来了。</p>\n<h2 id=\"节点\"><a href=\"#节点\" class=\"headerlink\" title=\"节点\"></a>节点</h2><ul>\n<li>元素节点</li>\n<li>文本节点</li>\n<li>属性节点</li>\n</ul>\n<h2 id=\"获取元素\"><a href=\"#获取元素\" class=\"headerlink\" title=\"获取元素\"></a>获取元素</h2><ol>\n<li><p><code>getElementById()</code> 方法可返回对拥有指定 ID 的第一个对象的引用;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">document</span>.getElementById(id);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>getElementsByTagName</code> 方法可返回带有指定名称的对象的集合;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">document</span>.getElementsByTagName(tag);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>getElementsByClassName</code> 方法可返回带有指定标签名的对象的集合。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">document</span>.getElementsByClassName(<span class=\"class\"><span class=\"keyword\">class</span>)</span>; <span class=\"comment\">//(HTML5 DOM 新增)</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>id 属性为 purchase 的元素包括这多少个元素节点：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> shopping = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"purchase\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> items = shopping.getElementByTagName(<span class=\"string\">\"*\"</span>);</span><br><span class=\"line\">alert(items.length);</span><br></pre></td></tr></table></figure>\n<p>新老浏览器实现 <code>getElementByClassName</code> (不支持多类名):</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getElementsByClassName</span>(<span class=\"params\">node,classname</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(node.getElementsByClassName)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> node.getElementsByClassName(classname);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> results = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>();</span><br><span class=\"line\">        <span class=\"keyword\">var</span> elems = node.getElementsByTagName(<span class=\"string\">\"*\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>; i&lt;elems.length; i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(elems[i].className.indexOf(className) != <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">                results[results.length]=elems[i];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> results;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>indexOf()</code> 方法可返回某个指定的字符串值在字符串中首次出现的位置。<br><code>stringObject.indexOf(searchvalue,fromindex)</code><br>该方法将从头到尾地检索字符串 stringObject，看它是否含有子串 searchvalue。开始检索的位置在字符串的 fromindex 处或字符串的开头（没有指定 fromindex 时）。如果找到一个 searchvalue，则返回 searchvalue 的第一次出现的位置。stringObject 中的字符位置是从 0 开始的。</p>\n<h2 id=\"总结下\"><a href=\"#总结下\" class=\"headerlink\" title=\"总结下\"></a>总结下</h2><ul>\n<li>一份文档就是一棵节点树；</li>\n<li>节点分为不同的类型：元素节点，属性节点，文本节点等；</li>\n<li><code>getElementById</code> 将返回一个对象，该对象对应着文档里的一个特定的元素节点；</li>\n<li><code>getElementsByTagName</code> 和 <code>getElementsByClassName</code> 将返回一个对象数组，他们分别对应着文档里的一组特定的元素节点；</li>\n<li>每个节点都是一个对象。</li>\n</ul>\n<h2 id=\"getAttribute\"><a href=\"#getAttribute\" class=\"headerlink\" title=\"getAttribute\"></a><code>getAttribute</code></h2><p><code>object.getAttribute(attribute)</code></p>\n<p><code>getAttribute</code> 是一个函数，只有一个参数——你打算查询的属性的名字。</p>\n<p><code>getAttrubute</code> 方法不属于 document 对象，所以不能通过 document 对象调用。它只能通过元素节点对象调用。</p>\n<h2 id=\"setAttribute\"><a href=\"#setAttribute\" class=\"headerlink\" title=\"setAttribute\"></a><code>setAttribute</code></h2><p><code>object.setAttribute(attribute,value)</code></p>\n<p><code>setAttribute</code> 也只能用于节点元素对象，主要用于对属性值做出修改。<code>setAttribute</code>做出的修改不会反映在文档本身的源代码里。</p>\n<p>这种表里不一的现象源自 DOM 的工作模式： 先加载文档的静态内容，再动态刷新，动态刷新不影响文档的静态内容。 这正是 DOM 的真正威力：对页面内容进行刷新却不需要在浏览器里刷新页面。</p>\n<p>好了，今天就学习到这里了，好好消化理解，see you tomorrow。</p>\n"},{"title":"【JavaScript】【学习心得】学习JavaScript 第一天","url":"http://padding.me/blog/2014/11/17/【JavaScript】【学习心得】学习JavaScript 第一天/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-JavaScript\" target=\"_blank\" rel=\"external\">Learning-JavaScript</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-JavaScript/issues/1\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-JavaScript/issues/1</a></p>\n<p>【写在前面】多少次咬牙坚持决心将 JavaScript 进行到底，却又半途而废。古语有云，只想做一个安静的切图仔不是一个好的前端汪。前端一直或多或少被人弊病，甚至被后端鄙视，前端入门易，上手快，在整个生态环境中前端的分量常被忽视，后端同学随手 google 下也能写出可以用的页面，前端存在的意义在哪儿？幸好 HTML5 来了， NodeJS 来了，前端的意义也越来越被多数公司认可重视，这是一个最好的时代，前端的春天仿佛真的来了。那么我们还要安心的做一个安静的美（cut）男子(boy)吗?答案显然是 NO！咳咳，安静还是必须的，我们可以志存高远，向着全栈工程师的党项努力，另一方面更要脚踏实地，夯实基础，这样才能精通各种奇淫技巧，不论是 nodejs 还是 fibjs 都能为我所用，才能做到手中无刀，心中有刀，无刀胜有刀。感谢 <a href=\"http://www.imooc.com/wenda/detail/234205\" target=\"_blank\" rel=\"external\">90 天慕女神助力计划</a>,让我们找到了学习的欲望和借口，大奖在哪儿,大奖在哪儿？？？90 天，你能坚持下去吗，90天你会收获什么吗？大浪淘沙，优胜劣汰，这个看脸的世界，还好，还有进化论这样伟大的意义存在。</p>\n<p>想我打小骨骼惊奇，便是百年难遇的练武奇才，人在江湖飘，不怀揣几本武林秘籍怎么行走江湖。早已坐拥《JavaScript DOM 编程艺术》，《JavaScript 高级程序设计》，《JavaScript 语言精粹》，《JavaScript 权威指南》好几本大部头宝典呢。艾玛好多，九十天能练成盖世武功吗？轻轻抽出看上去最艺术的《JavaScript DOM 编程艺术》，对！就是你了，我喜欢艺术，无论是xx艺术还是xx艺术。拍拍胸脯，告诉自己我行我行我行行行(牛皮已经吹成这样了，不坚持下去实在是太脸了，还怎么好意思在前端圈混下去？)。</p>\n<p>言归正传，我在 github 上也维护了一个 repo：<a href=\"https://github.com/paddingme/Learning-JavaScript\" target=\"_blank\" rel=\"external\">Learning-JavaScript</a>，如果你也和我一样，基础不太好，想要努力啃下 JavaScript 这块烂骨头，欢迎一起维护，一起学习。</p>\n<p>我将从《JavaScript DOM 编程艺术》-&gt;《JavaScript 高级程序设计》-&gt;《JavaScript 语言精粹》-&gt;《JavaScript 权威指南》的路线进行学习，记录下一路学到的重要知识点，并进行不断的 review 和对相关知识点的总结。</p>\n<p>那我们开始就先从《JavaScript DOM 编程艺术》吧。</p>\n<h1 id=\"第一章-JavaScript-简史\"><a href=\"#第一章-JavaScript-简史\" class=\"headerlink\" title=\"第一章 JavaScript 简史\"></a>第一章 JavaScript 简史</h1><p>JavaScript 的另一个名字叫 ECMAScript。我们通常所说的 BOM(Browser Object Model)是指浏览器对象模型，而 DOM(Document Object Model)则是指文档对象模型。</p>\n<h2 id=\"什么是-DOM-？\"><a href=\"#什么是-DOM-？\" class=\"headerlink\" title=\"什么是 DOM ？\"></a>什么是 DOM ？</h2><p>简单地说，DOM 是一套对文档的内容进行抽象和概念化的方法；<br>DOM 是一种 API。API 简单地说是一组已经得到有关各方共同认可的基本约定。</p>\n<p>W3C 对 DOM 的定义是：</p>\n<blockquote>\n<p>一个与系统平台和编程语言无关的接口，程序和脚本可以通过这个接口动态地访问和修改文档的内容、结构和样式。</p>\n</blockquote>\n<h2 id=\"浏览器内核\"><a href=\"#浏览器内核\" class=\"headerlink\" title=\"浏览器内核\"></a>浏览器内核</h2><ul>\n<li>IE: trident 内核</li>\n<li>Firefox：gecko 内核</li>\n<li>Safari/chrome: webkit 内核</li>\n</ul>\n<p>浏览器内核更正确的应该叫 “Rendering Engine”，即渲染引擎。更多的关于浏览器内核的知识可以参加如下文章：</p>\n<ul>\n<li><a href=\"http://baike.baidu.com/view/1369399.htm\" target=\"_blank\" rel=\"external\">浏览器内核</a></li>\n<li><a href=\"http://www.baike.com/wiki/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%86%85%E6%A0%B8\" target=\"_blank\" rel=\"external\">浏览器内核</a></li>\n<li><a href=\"http://www.iplaysoft.com/browsers-engine.html\" target=\"_blank\" rel=\"external\">关于浏览器内核的一些小知识</a></li>\n</ul>\n<p> JavaScript 的来龙去脉，对 JavaScript 的学习会更有好处，至少会有更多的感性认识。如果你想了解更详尽的 Javascript  的诞生，可以参考阮一峰写的 <a href=\"http://www.ruanyifeng.com/blog/2011/06/birth_of_javascript.html\" target=\"_blank\" rel=\"external\">Javascript诞生记</a>,这里摘抄下重点：</p>\n<blockquote>\n<p>网景公司动了心，决定与 Sun 公司结成联盟。它不仅允许 Java 程序以 applet （小程序）的形式，直接在浏览器中运行；甚至还考虑直接将 Java 作为脚本语言嵌入网页，只是因为这样会使HTML网页过于复杂，后来才不得不放弃。<br>总之，当时的形势就是，网景公司的整个管理层，都是Java语言的信徒，Sun公司完全介入网页脚本语言的决策。因此，Javascript 后来就是网景和 Sun 两家公司一起携手推向市场的，这种语言被命名为” Java+script “并不是偶然的。<br>此时，34岁的系统程序员 Brendan Eich 登场了。1995年4月，网景公司录用了他。<br>仅仅一个月之后，1995年5月，网景公司做出决策，未来的网页脚本语言必须”看上去与 Java 足够相似”，但是比 Java 简单，使得非专业的网页作者也能很快上手。这个决策实际上将 Perl、Python、Tcl、Scheme 等非面向对象编程的语言都排除在外了。<br>Brendan Eich 被指定为这种”简化版 Java 语言”的设计师。</p>\n</blockquote>\n<h1 id=\"第二章-语法\"><a href=\"#第二章-语法\" class=\"headerlink\" title=\"第二章 语法\"></a>第二章 语法</h1><ol>\n<li><p><code>&lt;script&gt;</code> 标签不需要包含 <code>type=&quot;text/javascript&quot;</code>，因为脚本默认是 JavaScript。</p>\n</li>\n<li><p>JAVA 属于编译型语言，需要编译器，而 JavaScript 属于解释型语言，在 互联网环境中， Web 浏览器负责完成 JavaScript 有关的解释和执行工作。</p>\n<p>用编译型语言编写的代码有错误，这些错误在代码编译阶段就能被发现。而解释型语言代码中的错误只能等到解释器执行到有关代码时才能被发现。</p>\n<p>在面试的时候如果面试官要问你 JAVA 和 JavaScript，不要再说是子集什么的（TNT），他们是雷锋和雷峰塔的区别啊。详细请戳 <a href=\"https://www.java.com/zh_CN/download/faq/java_javascript.xml\" target=\"_blank\" rel=\"external\">JavaScript 与 Java 有什么不同？</a></p>\n</li>\n<li><p>JavaScript 中也可以使用　HTML 风格注释，如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 这是 JavaScript 的注释，不必在结尾加上--&gt;。</span><br></pre></td></tr></table></figure>\n<p>但为了区分，应使用 <code>//</code> 注释单行，<code>/* */</code> 注释多行。</p>\n</li>\n<li><p>JavaScript 允许直接赋值而无需声明。</p>\n<p>JavaScript 语法不允许变量名中包含空格或标点符号（“$” 除外）。</p>\n<p>JavaScript  变量名允许包含字母、数字、美元符号和下划线（但第一个字符不允许是数字）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> myMood = <span class=\"string\">\"happy\"</span>;</span><br></pre></td></tr></table></figure>\n<p>上述代码中 “happy” 是 JavaScript 中的一个字面量(literal), 亦即可以直接在 JavaScript 代码中写出来的数据。</p>\n</li>\n<li><p>JavaScript 不需要进行类型声明， 是一种弱类型( weakly typed)语言，意味着可以在任何阶段改变变量的数据类型。</p>\n</li>\n<li><p>数组:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> beatles = <span class=\"built_in\">Array</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> beatles = <span class=\"built_in\">Array</span>(<span class=\"number\">4</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">beatles[<span class=\"number\">0</span>] = <span class=\"string\">\"John\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> beatles = <span class=\"built_in\">Array</span>(<span class=\"string\">\"John\"</span>,<span class=\"string\">\"Paul\"</span>,<span class=\"string\">\"George\"</span>,<span class=\"string\">\"Ringo\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> beatles = [<span class=\"string\">\"John\"</span>,<span class=\"string\">\"Paul\"</span>,<span class=\"string\">\"George\"</span>,<span class=\"string\">\"Ringo\"</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> lennon = [<span class=\"string\">\"John\"</span>,<span class=\"number\">1940</span>,<span class=\"literal\">false</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//不推荐如下的关联数组：</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> lennon = <span class=\"built_in\">Array</span>();</span><br><span class=\"line\">lennon[<span class=\"string\">\"name\"</span>] = <span class=\"string\">\"John\"</span>;</span><br></pre></td></tr></table></figure>\n<p>在  JavaScript 中，所有的变量都是某种类型的对象，你感受下。理想情况下，你不应该改修改 Array 对象的属性， 而应该使用通用的对象（object）。</p>\n</li>\n<li><p>对象：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> lennon = <span class=\"built_in\">Object</span>();</span><br><span class=\"line\">lennon.name = <span class=\"string\">\"John\"</span>;</span><br><span class=\"line\">lennon.year = <span class=\"number\">1940</span>;</span><br><span class=\"line\">lennon.living = <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> leenon = &#123; <span class=\"string\">\"name\"</span>:<span class=\"string\">\"John\"</span>, year:<span class=\"number\">1940</span>, living:<span class=\"literal\">false</span> &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> beatles = &#123;&#125;;</span><br><span class=\"line\">beatles.vocalist = lennon;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在命名变量时，可以用下划线来分割单词。在函数命令时，可使用驼峰法命名。</p>\n</li>\n<li><p>如果在某个函数中使用了 <code>var</code>, 则那个变量将被视为一个局部变量，它只存在这个函数的上下文中；反之如果没有使用 <code>var</code>，那个变量将被视为全局变量，若脚本里已经存在一个与之同名的全局变量，则这个函数将会改变那个变量的值。</p>\n</li>\n<li><p>对象是自包含的数据集合，包含在对象里的数据可以通过两种形式来访问——属性（property） 和方法 （method）：</p>\n<ul>\n<li>属性是隶属于某个特定对象的变量；</li>\n<li>方法是只有某个特定对象才能调用的函数。</li>\n</ul>\n<p>对象就是由一些属性和方法组合在一起而构成的一个数据实体。</p>\n</li>\n</ol>\n<ol>\n<li>对象：<ul>\n<li>自定义对象(用户自己创建的对象)</li>\n<li>内建对象( JavaScript 提供的一系列预先定义好的对象，可以拿来就用)</li>\n<li>宿主对象(由 JavaScript 运行环境提供的对象，对于web应用，运行环境即是浏览器，由浏览器提供的预定义对象即为宿主对象，宿主对象包括 Form、Image 、Element和 Document 等 )</li>\n</ul>\n</li>\n</ol>\n<p>好了今天就学习到这里，咱们明天再见。</p>\n<blockquote>\n<p>习武之人，务必沉心静气，切忌浮躁，小心走火入魔哦。</p>\n</blockquote>\n"},{"title":"Emmet 语法笔记","url":"http://padding.me/blog/2014/11/12/emmet-syntax-notes/","content":"<p>Emmet 是高效、快速编写 HTML 和 CSS 代码的一种插件，如果还不了解，请戳 <a href=\"http://docs.emmet.io/\" target=\"_blank\" rel=\"external\">Emmet — the essential toolkit for web-developers</a>, 再根据你使用的编辑器（sublime 或 vim 等）下载对应的 Emmet 插件，让你的代码快步如飞吧。下面我记录下常用的 Emmet 语法和快捷键。代码区里的均指在编辑器里输入的字符，然后按 “Tab” 键便会生成代码。<br>例如 输入<code>!</code> 然后按 “tab” 会得到如下所示的HTML文档初始机构，再也不用一个字母一个字母敲了，是不是很简单呢？</p>\n<p><img src=\"http://paddingme.qiniudn.com/emmet.gif\" title=\"图片来自http://www.smashingmagazine.com/2013/03/26/goodbye-zen-coding-hello-emmet/\"></p>\n<h2 id=\"HTML-编写\"><a href=\"#HTML-编写\" class=\"headerlink\" title=\"HTML 编写\"></a>HTML 编写</h2><ol>\n<li><p>生成HTML文档初始机构</p>\n<ul>\n<li><p><code>html:5</code> 或者 <code>!</code> 生成 HTML5 结构</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=&quot;zh-CN&quot;&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class=\"line\">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>html:xt</code> 生成 HTML4 过渡型</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;</span><br><span class=\"line\">&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; xml:lang=&quot;zh-cmn-Hans&quot;&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=UTF-8&quot;&gt;</span><br><span class=\"line\">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>html:4s</code> 生成 HTML4 严格型</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01//EN&quot; &quot;http://www.w3.org/TR/html4/strict.dtd&quot;&gt;</span><br><span class=\"line\">&lt;html lang=&quot;zh-cmn-Hans&quot;&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=UTF-8&quot;&gt;</span><br><span class=\"line\">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>任意一个 html 标签输入都会生成完整的闭合标签。<br>例如输入 <code>p</code> 按 <code>tab</code> 则 生成：<code>&lt;p&gt;&lt;/p&gt;</code></p>\n</li>\n<li><p>生成带有 id 、class 的 HTML 标签: <code>#</code>为 id，<code>.</code> 为 class。<br>例如输入 <code>div#header.section</code> 则生成 <code>&lt;div id=&quot;header&quot; class=&quot;section&quot;&gt;&lt;/div&gt;</code></p>\n</li>\n<li><p>生成后代：<code>&gt;</code><br>例如输入<code>p&gt;span</code> 则生成 <code>&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;</code></p>\n</li>\n<li><p>生成兄弟标签：<code>+</code><br>例如输入<code>p+div</code> 则生成 <code>&lt;p&gt;&lt;/p&gt;&lt;div&gt;&lt;/div&gt;</code></p>\n</li>\n<li><p>生成上级标签： <code>^</code><br>例如输入<code>ul&gt;li&gt;a^div</code> 则生成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;ul&gt;</span><br><span class=\"line\">  &lt;li&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">  &lt;div&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>\n<p>也可以使用多个 <code>^</code>,<br>例如输入<code>ul&gt;li&gt;a^^div</code> 则生成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;ul&gt;</span><br><span class=\"line\">    &lt;li&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br><span class=\"line\">&lt;div&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>重复生成多个标签 <code>*</code><br>例如输入<code>ul&gt;li*5</code> 则生成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;ul&gt;</span><br><span class=\"line\">    &lt;li&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li&gt;&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>生成分组的标签: <code>()</code><br>例如输入<code>ul&gt;(li&gt;a)*5</code> 则生成</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;ul&gt;</span><br><span class=\"line\">    &lt;li&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>\n<p>  注意和<code>ul&gt;li&gt;a*5</code> 生成是不一样的</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;ul&gt;</span><br><span class=\"line\">    &lt;li&gt;</span><br><span class=\"line\">        &lt;a href=&quot;&quot;&gt;&lt;/a&gt;</span><br><span class=\"line\">        &lt;a href=&quot;&quot;&gt;&lt;/a&gt;</span><br><span class=\"line\">        &lt;a href=&quot;&quot;&gt;&lt;/a&gt;</span><br><span class=\"line\">        &lt;a href=&quot;&quot;&gt;&lt;/a&gt;</span><br><span class=\"line\">        &lt;a href=&quot;&quot;&gt;&lt;/a&gt;</span><br><span class=\"line\">    &lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>生成自定义属性：<code>[]</code><br>例如输入<code>img[https://octodex.github.com/images/codercat.jpg][alt=octcat]</code> 则生成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;img src=&quot;https://octodex.github.com/images/codercat.jpg&quot; alt=&quot;octcat&quot; /&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>生成递增的属性标签等: <code>$</code><br>例如输入<code>ul&gt;li.item$*5</code> 则生成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;ul&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item1&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item2&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item3&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item4&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item5&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>生成多位递增的呢：<code>$$$</code><br>例如输入<code>ul&gt;li.item$$$*5</code> 则生成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;ul&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item001&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item002&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item003&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item004&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item005&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>\n<p>想生成几位输入几个<code>$</code></p>\n</li>\n<li><p>要生成递减的呢：<code>@-</code><br>例如输入<code>ul&gt;li.item$@-*5</code> 则生成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;ul&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item5&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item4&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item3&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item2&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item1&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>想要从某个特定的顺序开始呢：<code>@N</code><br>例如输入<code>ul&gt;li.item$@10*5</code> 则生成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;ul&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item10&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item11&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item12&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item13&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item14&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>逆序生成到某个数：<code>@-</code><br>例如输入<code>ul&gt;li.item$@-10*5</code> 则生成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;ul&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item14&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item13&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item12&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item11&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;item10&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>生成文本内容：<code>{}</code><br>例如输入<code>p{我是paddingme}</code> 则生成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;p&gt;我是paddingme&lt;/p&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>缺省元素:</p>\n<ul>\n<li><p>声明一个带class的div 可以不用输入div；<br><code>.header+.footer</code> 则生成:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div class=&quot;header&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;div class=&quot;footer&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Emmet 还会根据父标签进行判定<br>例如输入<code>ul&gt;.item*3</code> 则生成：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;ul&gt;</span><br><span class=\"line\">   &lt;li class=&quot;item&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">   &lt;li class=&quot;item&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">   &lt;li class=&quot;item&quot;&gt;&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>\n<p>下面是所有的隐式标签名称：</p>\n<ul>\n<li>li：用于 ul 和 ol 中</li>\n<li>tr：用于 table、tbody、thead 和 tfoot 中</li>\n<li>td：用于 tr 中</li>\n<li>option：用于 select 和 optgroup 中</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"CSS-编写\"><a href=\"#CSS-编写\" class=\"headerlink\" title=\"CSS 编写\"></a>CSS 编写</h2><p>首先，Sublime Text3 已经提供了比较强大的 CSS 样式所写方法来提高 CSS 编写效率。例如编写 <code>position: absolute</code>; 这一个属性，我们只需要输入 posa 这四个字母即可。可以在平时书写过程中，留意一下 ST3 提供了哪些属性的缩写方法，这样就可以提高一定的效率了。但是 Emmet 提供了更多的功能，请往下看。</p>\n<ol>\n<li><p>简写属性和属性值<br>比如要定义元素的宽度，只需输入w100，即可生成：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">width: 100px;</span><br></pre></td></tr></table></figure>\n<p> Emmet 的默认设置 w 是 width 的缩写，后面紧跟的数字就是属性值。默认的属性值单位是 px ，你可以在值的后面紧跟字符生成单位，可以是任意字符。例如，<code>w100foo</code> 会生成：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">width:100foo;</span><br></pre></td></tr></table></figure>\n<p> 同样也可以简写属性单位，如果你紧跟属性值后面的字符是<code>p</code>，那么将会生成：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">width:100%;</span><br></pre></td></tr></table></figure>\n<p> 下面是单位别名列表：</p>\n<ul>\n<li>p 表示%</li>\n<li>e 表示 em</li>\n<li><p>x 表示 ex</p>\n<p>像 margin 这样的属性，可能并不是一个属性值，生成多个属性值需要用横杠（-）连接两个属性值，因为 Emmet 的指令中是不允许空格的。例如使用 <code>m10-20</code> 可以生成：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">margin: 10px 20px;</span><br></pre></td></tr></table></figure>\n<p>如果你想生成负值，多加一条横杠即可。例如：<code>m10--20</code> 可以生成：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">margin: 10px -20px;</span><br></pre></td></tr></table></figure>\n<p>需要注意的是，如果你对每个属性都指定了单位，那么不需要使用横杠分割。例如使用  m10e20e 可以生成：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">margin: 10em 20em;</span><br></pre></td></tr></table></figure>\n<p>如果使用了横杠分割，那么属性值就变成负值了。例如使用 <code>m10e-20e</code> 就生成：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">margin: 10em -20em;</span><br></pre></td></tr></table></figure>\n<p>如果你想一次生成多条语句，可以使用 “+” 连接两条语句，例如使用 h10p+m5e  可以生成：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">height: 10%;</span><br><span class=\"line\">margin: 5em;</span><br></pre></td></tr></table></figure>\n<p>颜色值也是可以快速生成的，例如 <code>c#3</code> 生成<code>color: #333</code>;，更复杂一点的，使用  <code>bd5#0s</code> 可以生成 <code>border: 5px #000 solid</code>;。<br>下面是颜色值生成规则：</p>\n</li>\n<li><p>‘# 1’ → #111111</p>\n</li>\n<li>‘#e0’ → #e0e0e0</li>\n<li><p>‘#fc0’ → #ffcc00</p>\n<p>生成 <code>!important</code> 这条语句也当然很简单，只需要一个 “!” 就可以了。</p>\n</li>\n</ul>\n</li>\n<li><p>附加属性<br>使用 <code>@f</code> 即可生成 CSS3 中的 font-face 的代码结构：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@font-face &#123;</span><br><span class=\"line\">    font-family:;</span><br><span class=\"line\">    src:url();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>但是这个结构太简单，不包含一些其他的 font-face 的属性，诸如 background-image、border-radius、font、@font-face、 text-outline、 text-shadow 等属性，我们可以在生成的时候输入 “+” 生成增强的结构，例如我们可以输入 <code>@f+</code>  命令，即可输出选项增强版的 font-face 结构：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@font-face &#123;</span><br><span class=\"line\">    font-family: &apos;FontName&apos;;</span><br><span class=\"line\">    src: url(&apos;FileName.eot&apos;);</span><br><span class=\"line\">    src: url(&apos;FileName.eot?#iefix&apos;) format(&apos;embedded-opentype&apos;),</span><br><span class=\"line\">         url(&apos;FileName.woff&apos;) format(&apos;woff&apos;),</span><br><span class=\"line\">         url(&apos;FileName.ttf&apos;) format(&apos;truetype&apos;),</span><br><span class=\"line\">         url(&apos;FileName.svg#FontName&apos;) format(&apos;svg&apos;);</span><br><span class=\"line\">    font-style: normal;</span><br><span class=\"line\">    font-weight: normal;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>模糊匹配<br>如果有些缩写你拿不准，Emmet 会根据你的输入内容匹配最接近的语法，比如输入 <code>ov:h</code>、<code>ov-h</code>、<code>ovh</code> 和 <code>oh</code>，生成的代码是相同的：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">overflow: hidden;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>供应商前缀<br>CSS3 等现在还没有出正式的 W3C 规范，但是很多浏览器已经实现了对应的功能，仅作为测试只用，所以在属性前面加上自己独特的供应商前缀，不同的浏览器只会识别带有自己规定前缀的样式。然而为了实现兼容性，我们不得不编写大量的冗余代码，而且要加上对应的前缀。使用 Emmet 可以快速生成带有前缀的 CSS3 属性。<br>在任意字符前面加上一条横杠（-），即可生成该属性的带前缀代码，例如输入 <code>-foo-</code>css，会生成：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-webkit-foo-css: ;</span><br><span class=\"line\">-moz-foo-css: ;</span><br><span class=\"line\">-ms-foo-css: ;</span><br><span class=\"line\">-o-foo-css: ;</span><br><span class=\"line\">foo-css: ;</span><br></pre></td></tr></table></figure>\n<p>虽然 foo-css 并不是什么属性，但是照样可以生成。此外，你还可以详细的控制具体生成哪几个浏览器前缀或者先后顺序，使用 <code>-wm-trf</code> 即可生成：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-webkit-transform: ;</span><br><span class=\"line\">-moz-transform: ;</span><br><span class=\"line\">transform: ;</span><br></pre></td></tr></table></figure>\n<p>可想而知，w 就是 webkit 前缀的缩写，m 是 moz 前缀缩写，s 是 ms 前缀缩写，o  就是 opera 浏览器前缀的缩写。如果使用 <code>-osmw-abc</code> 即可生成：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-o-abc: ;</span><br><span class=\"line\">-ms-abc: ;</span><br><span class=\"line\">-moz-abc: ;</span><br><span class=\"line\">-webkit-abc: ;</span><br><span class=\"line\">abc: ;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>渐变背景<br>CSS3 中新增加了一条属性 <code>linear-gradient</code> 使用这个属性可以直接制作出渐变的效果。但是这个属性的参数比较复杂，而且需要添加实验性前缀，无疑需要生成大量代码。而 在 Emmet 中使用 <code>lg()</code>指令即可快速生成，例如：使用 <code>lg(left,#fff,50%,#000)</code>可以直接生成：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">background-image: -webkit-gradient(linear, 0 0, 100% 0, color-stop(0.5, #fff),  to(#000));</span><br><span class=\"line\">background-image: -webkit-linear-gradient(left, #fff 50%, #000);</span><br><span class=\"line\">background-image: -moz-linear-gradient(left, #fff 50%, #000);</span><br><span class=\"line\">background-image: -o-linear-gradient(left, #fff 50%, #000);</span><br><span class=\"line\">background-image: linear-gradient(left, #fff 50%, #000);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>附加功能<br>生成Lorem ipsum文本<br>Lorem ipsum 指一篇常用于排版设计领域的拉丁文文章，主要目的是测试文章或文字在不同字型、版型下看起来的效果。通过 Emmet，你只需输入 lorem 或 lipsum 即可生成这些文字。还可以指定文字的个数，比如 <code>lorem10</code>，将生成：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Explicabo, esse,  provident, nihil laudantium vitae quam natus a earum assumenda ex vel  consectetur fugiat eveniet minima veritatis blanditiis molestiae harum est!</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"定制\"><a href=\"#定制\" class=\"headerlink\" title=\"定制\"></a>定制</h2><p>你还可以定制Emmet插件：</p>\n<ul>\n<li>添加新缩写或更新现有缩写，可修改 snippets.json 文件</li>\n<li>更改Emmet过滤器和操作的行为，可修改 preferences.json 文件</li>\n<li>定义如何生成HTML或XML代码，可修改 syntaxProfiles.json 文件<br>如何自定义 Emmet 语法可参考：<a href=\"http://qianduanblog.com/post/sublime-text-3-custom-emmet-output-bootstrap-widget.html\" target=\"_blank\" rel=\"external\">http://qianduanblog.com/post/sublime-text-3-custom-emmet-output-bootstrap-widget.html</a>;github 上 一丝的 <a href=\"https://github.com/yisibl/emmet-plus\" target=\"_blank\" rel=\"external\">Emment-plus</a> 也推荐</li>\n</ul>\n<h2 id=\"快捷键\"><a href=\"#快捷键\" class=\"headerlink\" title=\"快捷键\"></a>快捷键</h2><ul>\n<li>Ctrl+,: 展开缩写</li>\n<li>Ctrl+M: 匹配对</li>\n<li>Ctrl+H: 使用缩写包括</li>\n<li>Shift+Ctrl+M: 合并行</li>\n<li>Ctrl+Shift+?: 上一个编辑点</li>\n<li>Ctrl+Shift+?: 下一个编辑点</li>\n<li>Ctrl+Shift+?: 定位匹配对</li>\n</ul>\n<p>Emmet 的官方 API 列表在<a href=\"http://docs.emmet.io/cheat-sheet/\" target=\"_blank\" rel=\"external\">这里</a>，有一个图片版本可以<a href=\"http://bubkoo.qiniudn.com/emmet-api.jpg\" target=\"_blank\" rel=\"external\">点此下载</a></p>\n<p>CSS 部分转自 <a href=\"http://bubkoo.com/2014/01/04/emmet-a-toolkit-for-improving-html-css-workflow/\" target=\"_blank\" rel=\"external\">HTML/CSS 速写神器：Emmet</a>,因为写着写着发现 bubkoo 差不多给我要写的写完了。所以就摘抄下（不要打我），</p>\n<p>其余参考：<a href=\"http://docs.emmet.io/cheat-sheet/\" target=\"_blank\" rel=\"external\">Emmet官方文档</a>。</p>\n"},{"title":"学习git拾遗","url":"http://padding.me/blog/2014/11/04/learn-git-snopt/","content":"<h2 id=\"在这里记录下学习git遇到的问题-以及常用的命令\"><a href=\"#在这里记录下学习git遇到的问题-以及常用的命令\" class=\"headerlink\" title=\"在这里记录下学习git遇到的问题 以及常用的命令\"></a>在这里记录下学习git遇到的问题 以及常用的命令</h2><h2 id=\"1-遇到的问题\"><a href=\"#1-遇到的问题\" class=\"headerlink\" title=\"1. 遇到的问题\"></a>1. 遇到的问题</h2><h3 id=\"Q1-如何克隆一个github上自己建立的私有仓库到本地\"><a href=\"#Q1-如何克隆一个github上自己建立的私有仓库到本地\" class=\"headerlink\" title=\"Q1  如何克隆一个github上自己建立的私有仓库到本地\"></a>Q1  如何克隆一个github上自己建立的私有仓库到本地</h3><p>命令行输入:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/username/repo</span><br></pre></td></tr></table></figure>\n<p>之会出现: <code>Cloning into &quot;yourrepo&quot;...</code>  之后会提示输入你的Username 和PassWord 输入正确之后就会把私有仓库复制到本地 注意这里输入的是</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://github.com/username/repo</span><br></pre></td></tr></table></figure>\n<p>不是</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone git@github.com:username/repo.git</span><br></pre></td></tr></table></figure>\n<p>也不是</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone git://github.com/myusername/reponame.git</span><br></pre></td></tr></table></figure>\n<h3 id=\"Q2-如何强制把远程仓库覆盖到本地仓库\"><a href=\"#Q2-如何强制把远程仓库覆盖到本地仓库\" class=\"headerlink\" title=\"Q2  如何强制把远程仓库覆盖到本地仓库\"></a>Q2  如何强制把远程仓库覆盖到本地仓库</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git fetch --all</span><br><span class=\"line\">git reset --hard origin/master</span><br></pre></td></tr></table></figure>\n<h3 id=\"Q3-github-Contributions-Calendar不记录\"><a href=\"#Q3-github-Contributions-Calendar不记录\" class=\"headerlink\" title=\"Q3  github Contributions Calendar不记录\"></a>Q3  github Contributions Calendar不记录</h3><p>查看本地git邮箱：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config user.email</span><br></pre></td></tr></table></figure>\n<p>然后在github里的accout settings &gt; email里看看你的primary github email  是不是你本地那个邮箱。更改为一样的邮箱：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.email &quot;xx@oo.com&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Q4-初始化本地仓库后添加到远程仓库，远程仓库地址写错了\"><a href=\"#Q4-初始化本地仓库后添加到远程仓库，远程仓库地址写错了\" class=\"headerlink\" title=\"Q4  初始化本地仓库后添加到远程仓库，远程仓库地址写错了\"></a>Q4  初始化本地仓库后添加到远程仓库，远程仓库地址写错了</h3><p>添加到远程仓库</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add remote [name/origin] [https://github.com/your-name/your-repo]`</span><br></pre></td></tr></table></figure>\n<p>修改远程仓库：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote set-url --push [name/origin] [https://github.com/your-name/your-new-repo]</span><br></pre></td></tr></table></figure>\n<h3 id=\"Q5-git-添加多个ssh-key\"><a href=\"#Q5-git-添加多个ssh-key\" class=\"headerlink\" title=\"Q5 git 添加多个ssh key\"></a>Q5 git 添加多个ssh key</h3><p>问题描述：我的博客托管在gitcafe 和 github 上，每次 push 都要多次输入用户名密码 灰常麻烦，那么如何添加多个 ssh key 呢。一直没有弄好，在 <a href=\"http://xuyuan923.github.io/\" target=\"_blank\" rel=\"external\">Cassie</a> 的 <a href=\"http://xuyuan923.github.io/2014/11/04/github-gitlab-ssh/\" target=\"_blank\" rel=\"external\">github/gitlab 同时管理多个 ssh key</a>启发下，经过 N 多试错，终于大功告成。下面记录下配置配置过程。请注意：我的环境是 windows7 MINGW32 shell<br>。</p>\n<p>1.首先生成一个 SSH keys 供 github 使用：</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd ~/.ssh</span><br><span class=\"line\">$ ssh-keygen -t rsa -C &quot;your_email@example.com&quot;</span><br></pre></td></tr></table></figure>\n<p>  执行会让你重命名 key 咱们将其命名为 id_rsa_github<br>  之后会让你输入密码，再次输入密码确认，ok，完成上述步骤就生成了公钥和私钥了。<br>  截图如下：</p>\n<p>  <img src=\"http://paddingme.qiniudn.com/ssh1.png\" alt=\"\"></p>\n<p>2.再根据上述步骤生成另一个 SSH keys（根据你自己在两个远程仓库的邮箱命输入邮箱地址），我们将其命名为 id_rsa_gitcafe</p>\n<p>3.接着 咱们添加生成的私钥，再这之前执行</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh-agent -s</span><br><span class=\"line\">$ ssh-add ~/.ssh/id_rsa_github</span><br></pre></td></tr></table></figure>\n<p>  这时候会出现错误”Could not open a connection to your authentication agent”,参考<a href=\"http://stackoverflow.com/questions/17846529/could-not-open-a-connection-to-your-authentication-agent\" target=\"_blank\" rel=\"external\">Could not open a connection to your authentication agent</a></p>\n<p>  我们执行:</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ eval `ssh-agent -s`</span><br></pre></td></tr></table></figure>\n<p>  继续添加 key:</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh-add ~/.ssh/id_rsa_github</span><br><span class=\"line\"> ssh-add ~/.ssh/id_rsa_gitcafe</span><br></pre></td></tr></table></figure>\n<p>  <img src=\"http://paddingme.qiniudn.com/ssh2.PNG\" alt=\"\"></p>\n<p>4.Ok,私钥添加上了，咱们把公钥放到 github/gitcafe。打开你的 github 账号，找到设置，找到 SSH keys 点击 ADD SSH key。随便取个 Title，什么你不知道如何添加公钥?!</p>\n<p>  在你的.ssh 目录下 用 Notepad 或 sublime 打开 id_rsa_github.pub，然后复制粘贴保存。</p>\n<p>  gitcafe 添加 ssh 公钥同理。</p>\n<p>5.胜利尽在眼前，我们 try try 下。</p>\n   <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure>\n<p>  然后出现了奇怪的东东，布拉布拉，yes/no，不管它 输入yes。接着会看见您的大名，OK，连接成功，gitcafe 同理请将 <code>$ ssh -T git@gitcafe.com</code>。 来上图，感受下:</p>\n<p>  <img src=\"http://paddingme.qiniudn.com/ssh3.PNG\" alt=\"\"></p>\n<h3 id=\"Q6-如何将-blog-同时托管到-gitcafe-和-github-上？\"><a href=\"#Q6-如何将-blog-同时托管到-gitcafe-和-github-上？\" class=\"headerlink\" title=\"Q6 如何将 blog 同时托管到 gitcafe 和 github 上？\"></a>Q6 如何将 blog 同时托管到 gitcafe 和 github 上？</h3><p>这个网上教程很多，待我有时间了，我再手把手教同学们，晒下配置文件，感受下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[remote &quot;github&quot;]</span><br><span class=\"line\">    url = https://github.com/yourname/yourname</span><br><span class=\"line\">    fetch = +refs/heads/*:refs/remotes/origin/*</span><br><span class=\"line\">[branch &quot;master&quot;]</span><br><span class=\"line\">    remote = gitcafe</span><br><span class=\"line\">    merge = refs/heads/gitcafe-pages</span><br><span class=\"line\">[remote &quot;gitcafe&quot;]</span><br><span class=\"line\">    url = https://gitcafe.com/yourname/yourname</span><br><span class=\"line\">    fetch = +refs/heads/*:refs/remotes/orig/*</span><br><span class=\"line\">[alias]</span><br><span class=\"line\">publish=!sh -c \\&quot;git push github master &amp;&amp; git push gitcafe master:gitcafe-pages\\&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Q7-为什么配置了-SSH，每次-push-还是需要输入用户名和密码呢？\"><a href=\"#Q7-为什么配置了-SSH，每次-push-还是需要输入用户名和密码呢？\" class=\"headerlink\" title=\"Q7 为什么配置了 SSH，每次 push 还是需要输入用户名和密码呢？\"></a>Q7 为什么配置了 SSH，每次 push 还是需要输入用户名和密码呢？</h3><p>参考这里<a href=\"http://segmentfault.com/q/1010000000599327\" target=\"_blank\" rel=\"external\">http://segmentfault.com/q/1010000000599327</a></p>\n<p>因为你用的是 https 而不是 ssh。<br>可以更新一下 origin:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote remove origin</span><br><span class=\"line\">git remote add origin git@github.com:Username/Your_Repo_Name.git</span><br></pre></td></tr></table></figure>\n<p>注意：如果你的仓库没有add ssh 只是在.ssh上添加了，在你的仓库里还要添加一次这样才会生效。添加步骤同上。可能要等一分钟左右才会生效。</p>\n<p>之后你还需要重新设置track branch，比如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull</span><br><span class=\"line\">git branch --set-upstream-to=origin/master master</span><br></pre></td></tr></table></figure>\n<p>对于HTTPS方式，你可以在~/.netrc文件里设定用户名密码，不过这样的风险在于密码是明文存放在这个文件里的，比较容易泄露</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">machine github.com</span><br><span class=\"line\">login Username</span><br><span class=\"line\">password Password</span><br></pre></td></tr></table></figure>\n<h3 id=\"Q8-恢复仓库到上一次的提交状态：-git-reset-hard\"><a href=\"#Q8-恢复仓库到上一次的提交状态：-git-reset-hard\" class=\"headerlink\" title=\"Q8 恢复仓库到上一次的提交状态：$ git reset --hard\"></a>Q8 恢复仓库到上一次的提交状态：<code>$ git reset --hard</code></h3><h3 id=\"Q9-修改最后的提交日志：-git-commit-amend\"><a href=\"#Q9-修改最后的提交日志：-git-commit-amend\" class=\"headerlink\" title=\"Q9 修改最后的提交日志：$ git commit --amend\"></a>Q9 修改最后的提交日志：<code>$ git commit --amend</code></h3><h2 id=\"2-学习git-参考资料\"><a href=\"#2-学习git-参考资料\" class=\"headerlink\" title=\"2. 学习git 参考资料\"></a>2. 学习git 参考资料</h2><ul>\n<li><a href=\"http://www.bootcss.com/p/git-guide/\" target=\"_blank\" rel=\"external\">git - 简易指南</a></li>\n<li><a href=\"http://www.html-js.com/article/1534\" target=\"_blank\" rel=\"external\">Git 初级读本–上</a></li>\n<li><a href=\"http://www.html-js.com/article/1535\" target=\"_blank\" rel=\"external\">Git 初级读本–下</a></li>\n<li><a href=\"http://www.html-js.com/article/2023\" target=\"_blank\" rel=\"external\">GitHub常用命令详解</a></li>\n<li><a href=\"http://www.yangzhiping.com/tech/github.html\" target=\"_blank\" rel=\"external\">如何高效利用GitHub</a></li>\n<li><a href=\"http://www.html-js.com/article/2023\" target=\"_blank\" rel=\"external\">GitHub常用命令详解</a></li>\n<li><a href=\"http://www.html-js.com/article/2021\" target=\"_blank\" rel=\"external\">Git速成班: git rebase</a></li>\n<li><a href=\"http://www.html-js.com/article/2064\" target=\"_blank\" rel=\"external\">Git进阶命令讲解：squash,fixup,stash</a></li>\n<li><a href=\"http://www.html-js.com/article/2024\" target=\"_blank\" rel=\"external\">GitHub分支系列教程（1）</a></li>\n<li><a href=\"http://www.html-js.com/article/2025\" target=\"_blank\" rel=\"external\">GitHub分支系列教程（2）</a></li>\n<li><a href=\"http://www.html-js.com/article/2026\" target=\"_blank\" rel=\"external\">GitHub分支系列教程（3）</a></li>\n<li><a href=\"http://www.html-js.com/article/2027\" target=\"_blank\" rel=\"external\">GitHub分支系列教程（4）</a></li>\n<li><a href=\"http://www.html-js.com/article/2028\" target=\"_blank\" rel=\"external\">GitHub分支系列教程（5）</a></li>\n<li><a href=\"http://www.html-js.com/article/2029\" target=\"_blank\" rel=\"external\">GitHub分支系列教程（6）</a></li>\n<li><a href=\"http://www.html-js.com/article/2030\" target=\"_blank\" rel=\"external\">.gitignore详解</a></li>\n<li><a href=\"https://github.com/numbbbbb/progit-zh-pdf-epub-mobi\" target=\"_blank\" rel=\"external\">progit book</a></li>\n<li><a href=\"https://github.com/blynn/gitmagic/tree/master/zh_cn\" target=\"_blank\" rel=\"external\">gitmagic book</a></li>\n<li><a href=\"http://yuehu.io/padding-me/425\" target=\"_blank\" rel=\"external\">Git常用操作命令</a></li>\n</ul>\n"},{"title":"CSS实现三级导航栏 以及 freemarker 逻辑实现","url":"http://padding.me/blog/2014/11/03/CSS实现三级导航栏 以及 freemarker 逻辑实现/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-HTML-CSS\" target=\"_blank\" rel=\"external\">Learning-HTML-CSS</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-HTML-CSS/issues/15\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-HTML-CSS/issues/15</a></p>\n<h1 id=\"CSS-实现三级导航栏以及-freemarker-实现\"><a href=\"#CSS-实现三级导航栏以及-freemarker-实现\" class=\"headerlink\" title=\"CSS 实现三级导航栏以及 freemarker 实现\"></a>CSS 实现三级导航栏以及 freemarker 实现</h1><p>做网站经常需要做三级导航栏，这里记录下三级导航栏的实现。</p>\n<p>水平方向的三级导航栏实现效果如下：</p>\n<p><img src=\"https://cloud.githubusercontent.com/assets/5771087/4879124/3b32ba66-6323-11e4-9277-90ffd299a88a.png\" alt=\"nav\"></p>\n<p>HTML 代码结构：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"nav\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>一级目录1<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>二级目录11<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>二级目录12<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>三级目录121<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>三级目录122<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>三级目录123<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>二级目录13<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>一级目录2<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>一级目录3<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>二级目录31<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>二级目录32<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">                  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>三级目录321<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>二级目录33<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>二级目录34<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">                  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>三级目录341<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>三级目录342<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>CSS 代码<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.nav</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.nav</span> <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">    <span class=\"attribute\">text-decoration</span>: none;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#333</span>;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">5px</span> <span class=\"number\">10px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#ccc</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"number\">#9A9797</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.nav</span> <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#444</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: white;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.nav</span> <span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">list-style</span>: none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.nav</span> &gt; <span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.nav</span> <span class=\"selector-tag\">ul</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">white-space</span>: nowrap;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">visibility</span>: hidden;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.nav</span> <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\"><span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.nav</span> <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">ul</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">float</span>: left;</span><br><span class=\"line\">  <span class=\"attribute\">margin-left</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">visibility</span>: hidden;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.nav</span> <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:hover</span> &gt; <span class=\"selector-tag\">ul</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">visibility</span>: visible;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>demo 地址：<a href=\"http://codepen.io/paddingme/pen/LneGf\" target=\"_blank\" rel=\"external\">CodePen</a></p>\n<p>浏览器兼容性待测试(todo)。</p>\n<iframe id=\"embed_dom\" name=\"embed_dom\" frameborder=\"0\" style=\"border:1px solid #000;display:block;width:664px; height:929px;\" src=\"http://www.processon.com/embed/5456f6340cf23db8dee41679\"></iframe>\n\n\n\n<p>Freemarker 流程图：<br><img src=\"https://cloud.githubusercontent.com/assets/5771087/4879112/07e79e38-6323-11e4-808b-14549ab511cf.png\" alt=\"nav1\"></p>\n<p>Freemarker 代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">class</span>=<span class=\"string\">\"nav\"</span>&gt;</span></span><br><span class=\"line\">   [@cms_channel_list]</span><br><span class=\"line\">      [#list tag_list as a]</span><br><span class=\"line\">          <span class=\"comment\">&lt;!-- 是否有二级栏目 start --&gt;</span></span><br><span class=\"line\">          [#if a.child?? &amp;&amp; a.child?size&gt;0]</span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 是否有三级栏目 start --&gt;</span></span><br><span class=\"line\">            [#if a.child[0].child?? &amp;&amp; a.child[0].child?size&gt;0]</span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"$&#123;a.child[0].child[0].url&#125;\"</span>&gt;</span>$&#123;a.name&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">            [#else]</span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"$&#123;a.child[0].url&#125;\"</span>&gt;</span>$&#123;a.name&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">            [/#if]</span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 是否有三级栏目 end --&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 遍历所有二级栏目 start --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">              [#list a.child as b]</span><br><span class=\"line\">                <span class=\"comment\">&lt;!-- 是否有三级栏目 start--&gt;</span></span><br><span class=\"line\">                [#if b.child?? &amp;&amp; b.child?size&gt;0]</span><br><span class=\"line\"></span><br><span class=\"line\">                  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"$&#123;b.child[0].url&#125;\"</span> &gt;</span>$&#123;b.name&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">                    [#list b.child as c]</span><br><span class=\"line\">                      <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"$&#123;c.url&#125;\"</span>&gt;</span>$&#123;c.name&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                    [/#list]</span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">                  <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                [#else]</span><br><span class=\"line\">                  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"$&#123;b.url&#125;\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"scd-a\"</span>&gt;</span>$&#123;b.name&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                [/#if]</span><br><span class=\"line\">                <span class=\"comment\">&lt;!-- 是否有三级栏目 end--&gt;</span></span><br><span class=\"line\">              [/#list]</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">             <span class=\"comment\">&lt;!-- 遍历所有二级栏目 end --&gt;</span></span><br><span class=\"line\">          [#else]</span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"$&#123;a.url&#125;\"</span>&gt;</span>$&#123;a.name&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">          [/#if]</span><br><span class=\"line\">          <span class=\"comment\">&lt;!-- 是否有二级栏目 end --&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">      [/#list]</span><br><span class=\"line\">    [/@cms_channel_list]</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n"},{"title":"语义化HTML","url":"http://padding.me/blog/2014/10/30/语义化HTML/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-HTML-CSS\" target=\"_blank\" rel=\"external\">Learning-HTML-CSS</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-HTML-CSS/issues/1\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-HTML-CSS/issues/1</a></p>\n<h1 id=\"语义化-HTML\"><a href=\"#语义化-HTML\" class=\"headerlink\" title=\"语义化 HTML\"></a>语义化 HTML</h1><p>本篇主要摘录：<a href=\"http://weibo.com/justineo\" target=\"_blank\" rel=\"external\">顾轶灵</a>的 slide <a href=\"http://justineo.github.io/slideshows/semantic-html/#/\" target=\"_blank\" rel=\"external\">http://justineo.github.io/slideshows/semantic-html/#/</a></p>\n<p>另可参考的文章有：</p>\n<ul>\n<li><a href=\"http://www.zhihu.com/question/20455165\" target=\"_blank\" rel=\"external\">如何理解 web 语义化？</a></li>\n<li><a href=\"http://www.cnblogs.com/season-huang/p/3548514.html\" target=\"_blank\" rel=\"external\">关于HTML语义化的一些理解</a></li>\n<li><a href=\"http://ued.ctrip.com/blog/?p=2735\" target=\"_blank\" rel=\"external\">再谈语义化</a></li>\n<li><a href=\"http://ued.sina.com.cn/?p=157\" target=\"_blank\" rel=\"external\">语义化标签的实战意义</a></li>\n</ul>\n<p><code>待进一步整理、总结</code></p>\n<p>HTML 4.01 规范 </p>\n<blockquote>\n<p>To publish information for global distribution, one needs a universally understood language, a kind of publishing mother tongue that all computers may potentially understand.</p>\n</blockquote>\n<p>HTML 语义：元素 + 属性 + 属性值 (+ 文档结构)</p>\n<h3 id=\"全局属性：\"><a href=\"#全局属性：\" class=\"headerlink\" title=\"全局属性：\"></a>全局属性：</h3><ul>\n<li>id 属性：标示符 (用于引用)，不应依赖其语义处理相应元素。</li>\n<li>class 属性：authors are encouraged to use values that describe the nature of the content——描述内容本质。</li>\n<li>title 属性：<ul>\n<li>链接 - 描述目标信息</li>\n<li>图片 - 版权 / 描述</li>\n<li>引用 - 来源信息</li>\n<li>交互元素 - 操作指南</li>\n<li>…<br>-lang 属性：内容的语言</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"元数据：\"><a href=\"#元数据：\" class=\"headerlink\" title=\"元数据：\"></a>元数据：</h3><p>meta 元素：name 属性决定种类，content 属性表示内容。<br>标准元数据名：(application-name, author, description, generator, keywords)<br>已注册的扩展元数据名 (WHATWG Wiki MetaExtensions)<br>最新增加的一条 Proposal 是百度提交的 name=”mobile-agent”  </p>\n<h3 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h3><h4 id=\"链接类型\"><a href=\"#链接类型\" class=\"headerlink\" title=\"链接类型\"></a>链接类型</h4><ul>\n<li>外部资源链接：指向用来组成当前文档的外部资源，通常由 UA 自动处理</li>\n<li><p>超链接：用来「导航」到其他资源 (可以在 UA 中打开, 下载, …)</p>\n<p>元素：link, a, area</p>\n</li>\n</ul>\n<h3 id=\"link-元素\"><a href=\"#link-元素\" class=\"headerlink\" title=\"link 元素\"></a>link 元素</h3><ul>\n<li>元数据，用来描述文档本身与其他资源的关系</li>\n<li><p>必须包含 rel 及 href 属性</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;link rel=&quot;author license&quot; href=&quot;/about&quot;&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>link + rel + author, link + rel + license 都有预定义的语义</p>\n<h4 id=\"link-rel\"><a href=\"#link-rel\" class=\"headerlink\" title=\"link + rel\"></a>link + rel</h4><ul>\n<li>rel=”stylesheet”: 链接到样式表 (外部资源)</li>\n<li><p>rel=”alternate”: 链接到当前文档的其他形式 (超链接)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;link rel=&quot;alternate&quot; type=&quot;application/rss+xml&quot; title=&quot;Matt Mullenweg » Feed&quot; href=&quot;http://ma.tt/feed/&quot; /&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>rel=”prev”, rel=”next”: 链接到文档的前一篇 / 后一篇 / 前一页 / 后一页 (超链接)在生成站点目录、归档视图时很有帮助。</p>\n</li>\n<li><p>rel=”icon”: 当前文档的 favicon (外部资源)</p>\n</li>\n</ul>\n<h3 id=\"a-元素\"><a href=\"#a-元素\" class=\"headerlink\" title=\"a 元素\"></a>a 元素</h3><ul>\n<li>存在 href 属性时为超链接</li>\n<li><p>缺少 href 属性时为链接占位符</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;nav&gt;</span><br><span class=\"line\"> &lt;ul&gt;</span><br><span class=\"line\">   &lt;li&gt;&lt;a href=&quot;/&quot;&gt;Home&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">   &lt;li&gt;&lt;a href=&quot;/news&quot;&gt;News&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">   &lt;li&gt;&lt;a&gt;Examples&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\"> &lt;/ul&gt;</span><br><span class=\"line\">&lt;/nav&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>与 link 元素不同，a 元素代表的超链接都是显式的。</p>\n<h4 id=\"a-rel\"><a href=\"#a-rel\" class=\"headerlink\" title=\"a + rel\"></a>a + rel</h4><ul>\n<li>rel=”prev”, rel=”next”: 链接到文档的前一篇 / 后一篇 / 前一页 / 后一页 (超链接)</li>\n<li><p>rel=”nofollow”:当前文档的作者并不推荐超链接指向的文档 (超链接标注)由 Google 引入，他们认为适用场景有 (via)：</p>\n<ul>\n<li>不可信赖的内容</li>\n<li>付费链接</li>\n<li>按优先级别进行抓取 (比如通知 Googlebot 不要抓取「注册」或「登陆」页面)</li>\n</ul>\n<p>实际情况是，搜索引擎一般会抓取，但此链接一般不作为搜索结果排序的依据。<br>现已被 microformats 社区标准化。</p>\n</li>\n</ul>\n<h3 id=\"rel-属性\"><a href=\"#rel-属性\" class=\"headerlink\" title=\"rel 属性\"></a>rel 属性</h3><p>其他在 HTML 规范中预定义的 rel 属性值及其含义参见 HTML5 草案中 <a href=\"http://dev.w3.org/html5/spec/links.html#linkTypes\" target=\"_blank\" rel=\"external\">Link types</a> 一节。</p>\n<h3 id=\"区块-sections\"><a href=\"#区块-sections\" class=\"headerlink\" title=\"区块 (sections)\"></a>区块 (sections)</h3><h4 id=\"section-元素\"><a href=\"#section-元素\" class=\"headerlink\" title=\"section 元素\"></a>section 元素</h4><ul>\n<li>按主题将内容分组，通常会有标题 (heading)</li>\n<li>并非「语义化的 div」</li>\n</ul>\n<p>何时使用:一个简单的评判标准：当你希望这个元素的内容体现在文档的提纲 (outline) 中时，用 section 是合适的。</p>\n<h4 id=\"nav-元素\"><a href=\"#nav-元素\" class=\"headerlink\" title=\"nav 元素\"></a>nav 元素</h4><p>a section with navigation links</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> &lt;nav&gt;</span><br><span class=\"line\">  &lt;ul&gt;</span><br><span class=\"line\">    &lt;li&gt;&lt;a href=&quot;/&quot;&gt;Home&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li&gt;&lt;a href=&quot;/news&quot;&gt;News&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li&gt;&lt;a&gt;Examples&lt;/a&gt;&lt;/li&gt;</span><br><span class=\"line\">  &lt;/ul&gt;</span><br><span class=\"line\">&lt;/nav&gt;</span><br></pre></td></tr></table></figure>\n<p>可以帮助 UA 迅速获得导航内容，例如读屏器可以省去很多渲染直接跳到导航位置。<br>不一定要包含 ul，也可用自然文本进行导航。</p>\n<h4 id=\"article-元素\"><a href=\"#article-元素\" class=\"headerlink\" title=\"article 元素\"></a>article 元素</h4><ul>\n<li>独立的文档、页面、应用、站点</li>\n<li>可以单独发布、重用</li>\n<li>可以是…<ul>\n<li>一篇帖子</li>\n<li>一篇报刊文章</li>\n<li>一则用户评论</li>\n<li>一个可交互的 widget</li>\n<li>…</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"aside-元素\"><a href=\"#aside-元素\" class=\"headerlink\" title=\"aside 元素\"></a>aside 元素</h4><ul>\n<li>表示与周围内容关系不太密切的内容 (eg. 广告)</li>\n<li>通常表现为侧边栏内容 (eg. 相关背景内容)、引述内容</li>\n</ul>\n<h5 id=\"h1–h6-元素\"><a href=\"#h1–h6-元素\" class=\"headerlink\" title=\"h1–h6 元素\"></a>h1–h6 元素</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">  &lt;h1&gt;Let&apos;s call it a draw(ing surface)&lt;/h1&gt;</span><br><span class=\"line\">  &lt;h2&gt;Diving in&lt;/h2&gt;</span><br><span class=\"line\">  &lt;h2&gt;Simple shapes&lt;/h2&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">  &lt;h1&gt;Let&apos;s call it a draw(ing surface)&lt;/h1&gt;</span><br><span class=\"line\">  &lt;section&gt;</span><br><span class=\"line\">    &lt;h1&gt;Diving in&lt;/h1&gt;</span><br><span class=\"line\">  &lt;/section&gt;</span><br><span class=\"line\">  &lt;section&gt;</span><br><span class=\"line\">    &lt;h1&gt;Simple shapes&lt;/h1&gt;</span><br><span class=\"line\">  &lt;/section&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n<p>语义上等价。</p>\n<h4 id=\"hgroup-元素\"><a href=\"#hgroup-元素\" class=\"headerlink\" title=\"hgroup 元素\"></a>hgroup 元素</h4><ul>\n<li>标题的组合</li>\n<li>用于副标题、标语 (tagline) 等</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> &lt;hgroup&gt;</span><br><span class=\"line\">  &lt;h1&gt;&lt;strong&gt;The Lord of the Rings&lt;/strong&gt;&lt;/h1&gt;</span><br><span class=\"line\">  &lt;h2&gt;The Return of the King&lt;/h2&gt;</span><br><span class=\"line\">&lt;/hgroup&gt;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;hgroup&gt;</span><br><span class=\"line\">  &lt;h1&gt;&lt;strong&gt;The Lord of the Rings&lt;/strong&gt;&lt;/h1&gt;</span><br><span class=\"line\">  &lt;h2&gt;&quot;One ring to rule them all.&quot;&lt;/h2&gt;</span><br><span class=\"line\">&lt;/hgroup&gt;</span><br></pre></td></tr></table></figure>\n<p>hgroup 中级别最高的标题才出现在提纲中</p>\n<h4 id=\"header-元素\"><a href=\"#header-元素\" class=\"headerlink\" title=\"header 元素\"></a>header 元素</h4><ul>\n<li>一组介绍性描述或导航信息 (目录 / 搜索框 / logo / …)</li>\n<li><p>通常包含 h1–h6, hgroup<br>-不影响文档提纲的生成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;header&gt;</span><br><span class=\"line\"> &lt;p&gt;Welcome to...&lt;/p&gt;</span><br><span class=\"line\"> &lt;h1&gt;Voidwars!&lt;/h1&gt;</span><br><span class=\"line\">&lt;/header&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"footer-元素\"><a href=\"#footer-元素\" class=\"headerlink\" title=\"footer 元素\"></a>footer 元素</h4><ul>\n<li>代表最近的父级区块内容的页脚</li>\n<li>作者信息 / 相关文档 / 版权信息</li>\n<li>不影响文档提纲的生成</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> &lt;footer&gt;&lt;!-- site footer --&gt;</span><br><span class=\"line\">  &lt;nav&gt;</span><br><span class=\"line\">    &lt;p&gt;</span><br><span class=\"line\">      &lt;a href=&quot;/credits.html&quot;&gt;Credits&lt;/a&gt; —</span><br><span class=\"line\">      &lt;a href=&quot;/tos.html&quot;&gt;Terms of Service&lt;/a&gt; —</span><br><span class=\"line\">      &lt;a href=&quot;/index.html&quot;&gt;Blog Index&lt;/a&gt;</span><br><span class=\"line\">    &lt;/p&gt;</span><br><span class=\"line\">  &lt;/nav&gt;</span><br><span class=\"line\">  &lt;p&gt;Copyright © 2009 Gordon Freeman&lt;/p&gt;</span><br><span class=\"line\">&lt;/footer&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"address-元素\"><a href=\"#address-元素\" class=\"headerlink\" title=\"address 元素\"></a>address 元素</h4><p>代表与最近的父级 article 或 body 关联的联系人信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;address&gt;</span><br><span class=\"line\">  &lt;a href=&quot;../People/Raggett/&quot;&gt;Dave Raggett&lt;/a&gt;,</span><br><span class=\"line\">  &lt;a href=&quot;../People/Arnaud/&quot;&gt;Arnaud Le Hors&lt;/a&gt;,</span><br><span class=\"line\">  contact persons for the &lt;a href=&quot;Activity&quot;&gt;W3C HTML Activity&lt;/a&gt;</span><br><span class=\"line\">&lt;/address&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"分组内容-grouping-content\"><a href=\"#分组内容-grouping-content\" class=\"headerlink\" title=\"分组内容 (grouping content)\"></a>分组内容 (grouping content)</h3><h4 id=\"p-元素\"><a href=\"#p-元素\" class=\"headerlink\" title=\"p 元素\"></a>p 元素</h4><p>「段落」的显式表述：段落是主题接近的若干句子组成的文本块。非优先考虑的选择。例如 address 的内容也是一个段落，但有更准确的语义。</p>\n<p>####hr 元素</p>\n<ul>\n<li>原意为「horizontal rule」(水平分隔线)</li>\n<li>HTML5 中重定义为不同主题内容间的分隔符(eg. 故事场景的转换)</li>\n<li>区块内容之间不需要用 hr 元素分隔</li>\n</ul>\n<h4 id=\"pre-元素\"><a href=\"#pre-元素\" class=\"headerlink\" title=\"pre 元素\"></a>pre 元素</h4><ul>\n<li>表示已排版的内容</li>\n<li>代码片段 / ASCII art / …</li>\n</ul>\n<h4 id=\"blockquote-元素\"><a href=\"#blockquote-元素\" class=\"headerlink\" title=\"blockquote 元素\"></a>blockquote 元素</h4><ul>\n<li>引用的来自其他来源的内容</li>\n<li>cite 属性表示该来源的 URL</li>\n<li>署名必须放在 blockquote 外</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;p&gt;His next piece was the aptly named &lt;cite&gt;Sonnet 130&lt;/cite&gt;:&lt;/p&gt;</span><br><span class=\"line\"> &lt;blockquote cite=&quot;http://quotes.example.org/s/sonnet130.html&quot;&gt;</span><br><span class=\"line\">   &lt;p&gt;My mistress&apos; eyes are nothing like the sun,&lt;br&gt;</span><br><span class=\"line\">   Coral is far more red, than her lips red,&lt;br&gt;</span><br><span class=\"line\">   &lt;i&gt;[...]&lt;/i&gt;&lt;/p&gt;</span><br><span class=\"line\"> &lt;/blockquote&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"ol-ul-li-元素\"><a href=\"#ol-ul-li-元素\" class=\"headerlink\" title=\"ol, ul, li 元素\"></a>ol, ul, li 元素</h4><ul>\n<li>有序 / 无序列表</li>\n<li>改变列表项顺序是否影响表达</li>\n<li>ol 下 li 元素的 value 属性代表该列表项的序号值</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;p&gt;Relegation zone:&lt;/p&gt;</span><br><span class=\"line\">&lt;ol&gt;</span><br><span class=\"line\">&lt;li value=&quot;18&quot;&gt;Bolton Wanderers&lt;/li&gt;</span><br><span class=\"line\">&lt;li&gt;Blackburn Rovers&lt;/li&gt;</span><br><span class=\"line\">&lt;li&gt;Wolverhampton Wanderers&lt;/li&gt;</span><br><span class=\"line\">&lt;/ol&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"dl-dt-dd-元素\"><a href=\"#dl-dt-dd-元素\" class=\"headerlink\" title=\"dl, dt, dd 元素\"></a>dl, dt, dd 元素</h4><ul>\n<li>名值对的集合</li>\n<li>术语定义表 / 元数据 / FAQ / …</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dl&gt;</span><br><span class=\"line\">  &lt;dt&gt;&lt;dfn&gt;happiness&lt;/dfn&gt;&lt;/dt&gt;</span><br><span class=\"line\">  &lt;dd class=&quot;part-of-speech&quot;&gt;&lt;i&gt;&lt;abbr&gt;n.&lt;/abbr&gt;&lt;/i&gt;&lt;/dd&gt;</span><br><span class=\"line\">  &lt;dd&gt;The state of being happy.&lt;/dd&gt;</span><br><span class=\"line\">  &lt;dd&gt;Good fortune; success. &lt;q&gt;Oh &lt;b&gt;happiness&lt;/b&gt;! It worked!&lt;/q&gt;&lt;/dd&gt;</span><br><span class=\"line\">  &lt;dt&gt;&lt;dfn&gt;rejoice&lt;/dfn&gt;&lt;/dt&gt;</span><br><span class=\"line\">  &lt;dd&gt;&lt;i class=&quot;part-of-speech&quot;&gt;&lt;abbr&gt;v.intr.&lt;/abbr&gt;&lt;/i&gt; To be delighted oneself.&lt;/dd&gt;</span><br><span class=\"line\">  &lt;dd&gt;&lt;i class=&quot;part-of-speech&quot;&gt;&lt;abbr&gt;v.tr.&lt;/abbr&gt;&lt;/i&gt; To cause one to be delighted.&lt;/dd&gt;</span><br><span class=\"line\">&lt;/dl&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"figure-元素\"><a href=\"#figure-元素\" class=\"headerlink\" title=\"figure 元素\"></a>figure 元素</h4><ul>\n<li>比较独立的、被主要内容引用的部分</li>\n<li>插画 / 图表 / 照片 / 代码 / …</li>\n<li>通常会有一个标题 (figcaption)</li>\n</ul>\n<h4 id=\"figcaption-元素\"><a href=\"#figcaption-元素\" class=\"headerlink\" title=\"figcaption 元素\"></a>figcaption 元素</h4><p>图表标题 / 图例 / 代码说明 / …</p>\n<h4 id=\"div-元素\"><a href=\"#div-元素\" class=\"headerlink\" title=\"div 元素\"></a>div 元素</h4><ul>\n<li>本身无语义</li>\n<li>可以和 class, lang, title 等属性结合，为一系列连续的内容增加语义</li>\n<li>最后考虑的选择</li>\n</ul>\n<h3 id=\"文本级语义-text-level-semantics\"><a href=\"#文本级语义-text-level-semantics\" class=\"headerlink\" title=\"文本级语义 (text-level semantics)\"></a>文本级语义 (text-level semantics)</h3><h4 id=\"em-元素\"><a href=\"#em-元素\" class=\"headerlink\" title=\"em 元素\"></a>em 元素</h4><ul>\n<li>表示侧重点的强调</li>\n<li>强调级别由 em 的嵌套个数决定</li>\n<li>em 的位置不同，文本本身含义不同</li>\n<li>在可视化 UA 上一般渲染为斜体<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;p&gt;&lt;em&gt;Bats&lt;/em&gt; can fly.&lt;/p&gt;</span><br><span class=\"line\">&lt;p&gt;Bats &lt;em&gt;can&lt;/em&gt; fly.&lt;/p&gt;</span><br><span class=\"line\">&lt;p&gt;Bats can &lt;em&gt;fly&lt;/em&gt;.&lt;/p&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>三句含义各不相同</p>\n<h4 id=\"strong-元素\"><a href=\"#strong-元素\" class=\"headerlink\" title=\"strong 元素\"></a>strong 元素</h4><ul>\n<li>表示内容的重要性</li>\n<li>重要程度由 strong 的嵌套个数决定</li>\n<li>strong 的位置不同，文本本身含义不变</li>\n<li>在可视化 UA 上一般渲染为粗体</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;p&gt;&lt;strong&gt;Warning.&lt;/strong&gt; A huge wave of zombies is approaching.&lt;/p&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"i-元素\"><a href=\"#i-元素\" class=\"headerlink\" title=\"i 元素\"></a>i 元素</h4><ul>\n<li>不再只是「斜体」</li>\n<li>表示另一种叙述方式</li>\n<li>分类学名词 / 外来语片段 / 舞台指示 / 船名 / …</li>\n<li>建议与 class / lang 属性搭配使用</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;p&gt;Sunflower (&lt;i class=&quot;taxonomy&quot;&gt;Helianthus annuus&lt;/i&gt;) is an annual plant native to the Americas.&lt;/p&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;p&gt;There is a certain &lt;i lang=&quot;fr&quot;&gt;je ne sais quoi&lt;/i&gt; in the air.&lt;/p&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;p&gt;&lt;i class=&quot;ship-name&quot;&gt;Titanic&lt;/i&gt; sank in the North Atlantic Ocean on 15 April 1912.&lt;/p&gt;</span><br></pre></td></tr></table></figure>\n<p>####b 元素</p>\n<ul>\n<li>不再只是「粗体」</li>\n<li>表示某种需要引起注意却又没有其他额外语义的内容</li>\n<li>摘要中的关键词 / 评介中的产品名称 / 文章的开篇内容 …</li>\n<li>建议与 class 属性搭配使用<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;article&gt;</span><br><span class=\"line\">  &lt;h2&gt;Kittens &apos;adopted&apos; by pet rabbit&lt;/h2&gt;</span><br><span class=\"line\">  &lt;p&gt;&lt;b class=&quot;lede&quot;&gt;Six abandoned kittens have found an unexpected new mother figure — a pet rabbit.&lt;/b&gt;&lt;/p&gt;</span><br><span class=\"line\">  &lt;p&gt;Veterinary nurse Melanie Humble took the three-week-old kittens to her Aberdeen home.&lt;/p&gt;</span><br><span class=\"line\">&lt;i&gt;[...]&lt;/i&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"small-元素\"><a href=\"#small-元素\" class=\"headerlink\" title=\"small 元素\"></a>small 元素</h4><ul>\n<li>不再只是「小字」</li>\n<li>fine print</li>\n<li>免责声明 / 许可证声明 / 注意事项 / …</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;small&gt;&lt;a rel=&quot;license&quot; href=&quot;http://creativecommons.org/licenses/by-sa/3.0/&quot;&gt;Creative Commons Attribution Share-alike license&lt;/a&gt;&lt;/small&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;small&gt;请以实物为准，图片仅供参考&lt;/small&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"s-元素\"><a href=\"#s-元素\" class=\"headerlink\" title=\"s 元素\"></a>s 元素</h4><ul>\n<li>不再只是「带删除线的文字」</li>\n<li>表示不再准确或不再相关的内容</li>\n<li>与 del 元素含义不同<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;p&gt;Buy our Iced Tea and Lemonade!&lt;/p&gt;</span><br><span class=\"line\">&lt;p&gt;&lt;s&gt;Recommended retail price: $3.99 per bottle&lt;/s&gt;&lt;/p&gt;</span><br><span class=\"line\">&lt;p&gt;&lt;strong&gt;Now selling for just $2.99 a bottle!&lt;/strong&gt;&lt;/p&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>Buy our Iced Tea and Lemonade!</p><br><p><s>Recommended retail price: $3.99 per bottle</s></p><br><p><strong>Now selling for just $2.99 a bottle!</strong></p>\n\n\n<h4 id=\"u-元素\"><a href=\"#u-元素\" class=\"headerlink\" title=\"u 元素\"></a>u 元素</h4><ul>\n<li>不再只是「带下划线的文字」</li>\n<li>表示用非文本进行的标注的内容</li>\n<li>中文专名 / 拼写检查的错误内容 / …</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;u class=&quot;proper-name&quot;&gt;屈原&lt;/u&gt;放逐，乃賦&lt;cite class=&quot;book-name&quot;&gt;離騒&lt;/cite&gt;。&lt;u class=&quot;proper-name&quot;&gt;左丘&lt;/u&gt;失明，厥有&lt;cite class=&quot;book-name&quot;&gt;國語&lt;/cite&gt;。（司馬遷《報任安書》）</span><br></pre></td></tr></table></figure>\n<p><u class=\"proper-name\">屈原</u>放逐，乃賦<cite class=\"book-name\">離騒</cite>。<u class=\"proper-name\">左丘</u>失明，厥有<cite class=\"book-name\">國語</cite>。（司馬遷《報任安書》）</p>\n<p>专名包括人名、地名、朝代名、国名、机构名等，大陆已较少使用，在英语中通常首字母大写</p>\n<h4 id=\"cite-元素\"><a href=\"#cite-元素\" class=\"headerlink\" title=\"cite 元素\"></a>cite 元素</h4><ul>\n<li>引述的作品标题</li>\n<li>书 / 论文 / 散文 / 电影 / 歌曲 / 电视节目 / 画作 / …<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;p&gt;My favorite movie is &lt;cite&gt;Transformers&lt;/cite&gt; by Michael Bay.&lt;/p&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"q-元素\"><a href=\"#q-元素\" class=\"headerlink\" title=\"q 元素\"></a>q 元素</h4><ul>\n<li>引用的来自其他来源的段内内容</li>\n<li>cite 属性表示该来源的 URL</li>\n<li>不用 q 而用引号亦正确<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;p&gt;The W3C page &lt;cite&gt;About W3C&lt;/cite&gt; says the W3C&apos;s</span><br><span class=\"line\">mission is &lt;q cite=&quot;http://www.w3.org/Consortium/&quot;&gt;To lead the</span><br><span class=\"line\">World Wide Web to its full potential by developing protocols and</span><br><span class=\"line\">guidelines that ensure long-term growth for the Web&lt;/q&gt;.&lt;/p&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"abbr-元素\"><a href=\"#abbr-元素\" class=\"headerlink\" title=\"abbr 元素\"></a>abbr 元素</h4><ul>\n<li>abbreviation or acronym (区别？)</li>\n<li>其 title 属性的含义为所写的全称</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;p&gt;The &lt;abbr title=&quot;Web Hypertext Application Technology Working Group&quot;&gt;WHATWG&lt;/abbr&gt; started working on HTML5 in 2004.&lt;/p&gt;</span><br></pre></td></tr></table></figure>\n<p>建议在用户不熟悉的缩写词汇第一次出现时用 abbr + title 进行语义标注，帮助其理解</p>\n<h4 id=\"dfn-元素\"><a href=\"#dfn-元素\" class=\"headerlink\" title=\"dfn 元素\"></a>dfn 元素</h4><ul>\n<li>用来展现一个术语的定义实例</li>\n<li>最接近的父级段落、定义列表组或区块内容必须包含 dfn 元素指定术语的定义</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;p&gt;The &lt;dfn&gt;&lt;abbr title=&quot;Garage Door Opener&quot;&gt;GDO&lt;/abbr&gt;&lt;/dfn&gt;</span><br><span class=\"line\">is a device that allows off-world teams to open the iris.&lt;/p&gt;</span><br></pre></td></tr></table></figure>\n<p>很容易抽取出特定术语的含义，从而很容易回答「What is …?」类的问题</p>\n<h4 id=\"time-元素\"><a href=\"#time-元素\" class=\"headerlink\" title=\"time 元素\"></a>time 元素</h4><ul>\n<li>为表述的内容增加一个机器可读的时间数据</li>\n<li>datetime 属性值必须是预定义的几种时间格式之一</li>\n<li>如果不含 datetime 属性，则会解析其文本内容值</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div class=&quot;vevent&quot;&gt;</span><br><span class=\"line\">  &lt;a class=&quot;url&quot; href=&quot;http://www.web2con.com/&quot;&gt;http://www.web2con.com/&lt;/a&gt;</span><br><span class=\"line\">  &lt;span class=&quot;summary&quot;&gt;Web 2.0 Conference&lt;/span&gt;:</span><br><span class=\"line\">  &lt;time class=&quot;dtstart&quot; datetime=&quot;2005-10-05&quot;&gt;October 5&lt;/time&gt; -</span><br><span class=\"line\">  &lt;time class=&quot;dtend&quot; datetime=&quot;2005-10-07&quot;&gt;7&lt;/time&gt;,</span><br><span class=\"line\">  at the &lt;span class=&quot;location&quot;&gt;Argent Hotel, San Francisco, CA&lt;/span&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<p>time 元素与 Microformats hCalendar 格式的配合使用</p>\n<h4 id=\"code-samp-kbd-元素\"><a href=\"#code-samp-kbd-元素\" class=\"headerlink\" title=\"code, samp, kbd 元素\"></a>code, samp, kbd 元素</h4><ul>\n<li>code - 代码片段</li>\n<li>samp - 计算机程序的输出</li>\n<li>kbd - 用户输入的内容 / 按键</li>\n</ul>\n<p><img src=\"http://justineo.github.io/slideshows/semantic-html/img/kbd.png\"></p>\n<p>Stack Overflow 上 kbd 元素的样式让人一目了然</p>\n<h4 id=\"mark-元素\"><a href=\"#mark-元素\" class=\"headerlink\" title=\"mark 元素\"></a>mark 元素</h4><ul>\n<li>在引用的文字中使用，表示在当前文档中需要引起注意但原文中并没有强调的含义 (eg. 对一篇文章的分析中对原文的标注)</li>\n<li>表示与用户当前的行为相关的内容 (eg. 高亮显示搜索关键词)</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;blockquote&gt;</span><br><span class=\"line\">    &lt;p&gt;6月13日下午，&lt;mark&gt;一场大雨&lt;/mark&gt;过后，正阳门箭楼被带着水雾的脚手架包裹得严严实实。北京旧城中轴线上的这座标志性建筑，正经历着新中国成立后规模最大的一次修缮。&lt;/p&gt;</span><br><span class=\"line\">    &lt;i&gt;[...]&lt;/i&gt;</span><br><span class=\"line\">    &lt;p&gt;6月13日的&lt;mark&gt;那场大雨&lt;/mark&gt;，将故宫端门外西朝房冲洗得干干净净。&lt;/p&gt;</span><br><span class=\"line\">&lt;/blockquote&gt;</span><br><span class=\"line\">&lt;p&gt;作者为什么两次提到6月13日的大雨？请谈谈你的看法。&lt;/p&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"ruby-rt-rp-元素\"><a href=\"#ruby-rt-rp-元素\" class=\"headerlink\" title=\"ruby, rt, rp 元素\"></a>ruby, rt, rp 元素</h4><p>注音标示，「ruby」来自日本印刷业<br>主要于 CJK 文字<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;ruby&gt;和&lt;rp&gt;(&lt;/rp&gt;&lt;rt&gt;hé&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;谐&lt;rp&gt;(&lt;/rp&gt;&lt;rt&gt;xié&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;社&lt;rp&gt;(&lt;/rp&gt;&lt;rt&gt;shè&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;会&lt;rp&gt;(&lt;/rp&gt;&lt;rt&gt;huì&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"http://justineo.github.io/slideshows/semantic-html/img/ruby.png\"></p>\n<p>目前 IE 5.5+ 以及 Chrome 5+ 支持</p>\n<h4 id=\"span-元素\"><a href=\"#span-元素\" class=\"headerlink\" title=\"span 元素\"></a>span 元素</h4><ul>\n<li>本身无语义</li>\n<li>可以和 class, lang 等属性结合，为文本片段增加语义</li>\n<li>有更合适的元素时不应选择 span<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; greet = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &#123;&lt;/span&gt;</span><br><span class=\"line\">    console.log(&lt;span class=&quot;string&quot;&gt;&quot;Hello world.&quot;&lt;/span&gt;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>适用场景之一是代码高亮</p>\n<h3 id=\"更改记录-edits\"><a href=\"#更改记录-edits\" class=\"headerlink\" title=\"更改记录 (edits)\"></a>更改记录 (edits)</h3><h4 id=\"ins-del-元素\"><a href=\"#ins-del-元素\" class=\"headerlink\" title=\"ins, del 元素\"></a>ins, del 元素</h4><ul>\n<li>表示对当前文档内容进行的增添与删改</li>\n<li>cite 属性指向对某个修改的说明文档的 URL</li>\n<li>datetime 属性表示了修改发生的时间 (取值规范)</li>\n<li>用来记录文档的编辑历史</li>\n</ul>\n<h3 id=\"嵌入内容-embedded-content\"><a href=\"#嵌入内容-embedded-content\" class=\"headerlink\" title=\"嵌入内容 (embedded content)\"></a>嵌入内容 (embedded content)</h3><h4 id=\"img-元素\"><a href=\"#img-元素\" class=\"headerlink\" title=\"img 元素\"></a>img 元素</h4><ul>\n<li>src, alt 属性决定了图片的含义<ul>\n<li>有 src 且 alt 为空字符串，代表装饰用图</li>\n<li>有 src 且 alt 为非空字符串，图为文档内容的一部分</li>\n<li>有 src 且无 alt，图为内容一部分但无等价的文本内容可用</li>\n</ul>\n</li>\n<li>用 alt 文本替换图片，文档含义尽可能不变</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> &lt;p&gt;</span><br><span class=\"line\">  You are standing in an open field west of a house.</span><br><span class=\"line\">  &lt;img src=&quot;house.jpeg&quot; alt=&quot;&lt;s&gt;A white house&lt;/s&gt;&lt;strong&gt;The house is white&lt;/strong&gt;, with a boarded front door.&quot;&gt;</span><br><span class=\"line\">  There is a small mailbox here.</span><br><span class=\"line\">&lt;/p&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"iframe-embed-object-param-元素\"><a href=\"#iframe-embed-object-param-元素\" class=\"headerlink\" title=\"iframe, embed, object, param 元素\"></a>iframe, embed, object, param 元素</h4><ul>\n<li>iframe - 内嵌的浏览上下文</li>\n<li>embed - 外部应用或可交互内容的整合入口</li>\n<li>object - 通用外部资源<ul>\n<li>根据具体内容可以被处理为图片、内嵌的浏览上下文、供插件调用的资源</li>\n</ul>\n</li>\n<li>param - 为 object 元素传递的参数</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;object type=&quot;image/png&quot; data=&quot;embed.png&quot;&gt;&lt;/object&gt;</span><br><span class=\"line\">&lt;object type=&quot;text/html&quot; data=&quot;embed.html&quot;&gt;&lt;/object&gt;</span><br></pre></td></tr></table></figure>\n<p>相当于 img 与 iframe 的效果</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;embed src=&quot;catgame.swf&quot; type=&quot;application/x-shockwave-flash&quot; quality=&quot;high&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;object data=&quot;catgame.swf&quot; type=&quot;application/x-shockwave-flash&quot;&gt;</span><br><span class=\"line\">  &lt;param name=&quot;quality&quot; value=&quot;high&quot;&gt;</span><br><span class=\"line\">  &lt;p&gt;Plugin needed.&lt;/p&gt;</span><br><span class=\"line\">&lt;/object&gt;</span><br></pre></td></tr></table></figure>\n<p>功能等价但 object 提供更好的回退策略</p>\n<h4 id=\"多媒体元素\"><a href=\"#多媒体元素\" class=\"headerlink\" title=\"多媒体元素\"></a>多媒体元素</h4><ul>\n<li>video - 视频</li>\n<li>audio - 音频</li>\n</ul>\n<p>公共属性：src, crossorigin, preload, autoplay, mediagroup, loop, muted, controls</p>\n<h4 id=\"source-元素\"><a href=\"#source-元素\" class=\"headerlink\" title=\"source 元素\"></a>source 元素</h4><ul>\n<li>表示所在多媒体元素的可替代资源(可能不同格式 / 清晰度，读取失败或无法解码时可以依次尝试)</li>\n<li>type 属性中除了 MIME 类型外，可使用 codecs= 来指定编码<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> &lt;video controls autoplay&gt;</span><br><span class=\"line\">  &lt;source src=&apos;video.mp4&apos; type=&apos;video/mp4; codecs=&quot;avc1.42E01E, mp4a.40.2&quot;&apos;&gt;</span><br><span class=\"line\">  &lt;source src=&apos;video.ogv&apos; type=&apos;video/ogg; codecs=&quot;theora, vorbis&quot;&apos;&gt;</span><br><span class=\"line\">&lt;/video&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"track-元素\"><a href=\"#track-元素\" class=\"headerlink\" title=\"track 元素\"></a>track 元素</h4><ul>\n<li>用来为多媒体元素指定「文本轨」</li>\n<li>kind 属性描述文本轨的类型</li>\n<li>可用值包括 subtitles, captions, descriptions, chapters, metadata</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;video src=&quot;brave.webm&quot;&gt;</span><br><span class=\"line\">  &lt;track kind=&quot;subtitles&quot; src=&quot;brave.en.vtt&quot; srclang=&quot;en&quot; label=&quot;English&quot;&gt;</span><br><span class=\"line\">  &lt;track kind=&quot;captions&quot; src=&quot;brave.en.hoh.vtt&quot; srclang=&quot;en&quot; label=&quot;English for the Hard of Hearing&quot;&gt;</span><br><span class=\"line\">  &lt;track kind=&quot;subtitles&quot; src=&quot;brave.fr.vtt&quot; srclang=&quot;fr&quot; lang=&quot;fr&quot; label=&quot;Français&quot;&gt;</span><br><span class=\"line\">  &lt;track kind=&quot;subtitles&quot; src=&quot;brave.de.vtt&quot; srclang=&quot;de&quot; lang=&quot;de&quot; label=&quot;Deutsch&quot;&gt;</span><br><span class=\"line\">&lt;/video&gt;</span><br></pre></td></tr></table></figure>\n<p>###表格数据 (tabular data)</p>\n<h4 id=\"table-元素\"><a href=\"#table-元素\" class=\"headerlink\" title=\"table 元素\"></a>table 元素</h4><p>用来表示超过一维的数据</p>\n<h4 id=\"caption-元素\"><a href=\"#caption-元素\" class=\"headerlink\" title=\"caption 元素\"></a>caption 元素</h4><p>表示所处的 table 的标题</p>\n<ul>\n<li>当所处的 table 是外部 figure 元素的唯一子元素，应首选 figcaption</li>\n</ul>\n<h4 id=\"tbody-thead-tfoot-元素\"><a href=\"#tbody-thead-tfoot-元素\" class=\"headerlink\" title=\"tbody, thead, tfoot 元素\"></a>tbody, thead, tfoot 元素</h4><ul>\n<li>均为一组表格行</li>\n<li>thead 表示列头 (通常为列标题，单元格用 th 元素)</li>\n<li>tfoot 表示列脚 (通常为列数据汇总)</li>\n</ul>\n<p>####col, colgroup, tr 元素</p>\n<p>列，列组，行</p>\n<h4 id=\"td-th-元素\"><a href=\"#td-th-元素\" class=\"headerlink\" title=\"td, th 元素\"></a>td, th 元素</h4><p>td - 数据单元格<br>th - 标题单元格<br>th 的 scope 属性表示标题对应的数据范围</p>\n<p>###进一步扩展</p>\n<h4 id=\"微格式-Microformats\"><a href=\"#微格式-Microformats\" class=\"headerlink\" title=\"微格式 (Microformats)\"></a>微格式 (Microformats)</h4><ul>\n<li><p>Microformats 是 HTML 的扩展，用来标注人物 / 组织 / 事件 / 地点 / 简历 / 菜谱 / …</p>\n</li>\n<li><p>很多格式已是业界的事实标准</p>\n</li>\n<li><p>(Microformats Wiki)</p>\n</li>\n</ul>\n<h4 id=\"Microformats-的基本思路\"><a href=\"#Microformats-的基本思路\" class=\"headerlink\" title=\"Microformats 的基本思路\"></a>Microformats 的基本思路</h4><p>用 HTML 已有的元素 / 属性，配合对属性值语义的扩展 (主要针对 class 属性) 以及对文档结构的约定来增强 HTML 的语义表达能力。Microformats 的规范本质上就是对一系列常用类型数据 HTML 格式的约定。<br>Google 通过从 Wikipedia 获取的 hCard 格式数据在搜索结果匹配出人物信息</p>\n<h4 id=\"举例：hCard\"><a href=\"#举例：hCard\" class=\"headerlink\" title=\"举例：hCard\"></a>举例：hCard</h4><p>用来在 Web 上发布人物 / 公司 / 组织机构信息的格式<br>和 vCard 格式 (MIME 类型：text/vcard, RFC2426) 定义的属性名值定义一一对应</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> &lt;div class=&quot;vcard&quot;&gt;</span><br><span class=\"line\">  &lt;span class=&quot;fn&quot;&gt;Sally Ride&lt;/span&gt;</span><br><span class=\"line\">  &lt;div class=&quot;org&quot;&gt;Sally Ride Science&lt;/div&gt;</span><br><span class=\"line\">  &lt;img class=&quot;photo&quot; src=&quot;http://example.com/sk.jpg&quot;/&gt;</span><br><span class=\"line\">  &lt;a class=&quot;url&quot; href=&quot;http://sally.example.com&quot;&gt;w&lt;/a&gt;,</span><br><span class=\"line\">  &lt;a class=&quot;email&quot; href=&quot;mailto:sally@example.com&quot;&gt;e&lt;/a&gt;</span><br><span class=\"line\">  &lt;div class=&quot;tel&quot;&gt;+1.818.555.1212&lt;/div&gt;</span><br><span class=\"line\">  &lt;time class=&quot;bday&quot;&gt;1951-05-26&lt;/time&gt; birthday</span><br><span class=\"line\">  &lt;i&gt;[...]&lt;/i&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<p>人物名片的一部分</p>\n<h3 id=\"其他-Microformats\"><a href=\"#其他-Microformats\" class=\"headerlink\" title=\"其他 Microformats\"></a>其他 Microformats</h3><ul>\n<li>hCalendar - 发布事件<br>基于 iCalendar 格式 (MIME 类型：text/calendar, RFC2445)</li>\n<li>hReview - 发布书评 / 影评 / 产品评价 / …</li>\n<li>对 HTML rel 属性值的扩展定义<br>rel=”license”, rel=”tag”, rel=”enclosure”, … 部分已经进入 HTML5 草案</li>\n</ul>\n<p>###微数据 (HTML Microdata)</p>\n<p>允许在现有的文档中嵌入一组项的名值对集合(W3C 草案)</p>\n<h4 id=\"itemscope-属性\"><a href=\"#itemscope-属性\" class=\"headerlink\" title=\"itemscope 属性\"></a>itemscope 属性</h4><p>用来标注描述项的位置<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div itemscope&gt;</span><br><span class=\"line\">  &lt;p&gt;My name is &lt;span itemprop=&quot;name&quot;&gt;Elizabeth&lt;/span&gt;.&lt;/p&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\">&lt;div itemscope&gt;</span><br><span class=\"line\">  &lt;p&gt;My name is &lt;span itemprop=&quot;name&quot;&gt;Daniel&lt;/span&gt;.&lt;/p&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>\n<p>两个项，各有一个名为 name 的属性</p>\n<h4 id=\"itemtype-属性\"><a href=\"#itemtype-属性\" class=\"headerlink\" title=\"itemtype 属性\"></a>itemtype 属性</h4><ul>\n<li>如果期望服用已定义的项的模式，可用 itemtype 属性给出该类型的 URI</li>\n<li>必须与 itemscope 属性置于同一元素上</li>\n</ul>\n<h4 id=\"itemprop-属性\"><a href=\"#itemprop-属性\" class=\"headerlink\" title=\"itemprop 属性\"></a>itemprop 属性</h4><p>当前项的属性名</p>\n<h4 id=\"itemid-属性\"><a href=\"#itemid-属性\" class=\"headerlink\" title=\"itemid 属性\"></a>itemid 属性</h4><p>当前项的全局 ID (eg. ISBN)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dl itemscope itemtype=&quot;http://vocab.example.net/book&quot; itemid=&quot;urn:isbn:0-330-34032-8&quot;&gt;</span><br><span class=\"line\">  &lt;dt&gt;Title&lt;/dt&gt;</span><br><span class=\"line\">  &lt;dd itemprop=&quot;title&quot;&gt;The Reality Dysfunction&lt;/dd&gt;</span><br><span class=\"line\">  &lt;dt&gt;Author&lt;/dt&gt;</span><br><span class=\"line\">  &lt;dd itemprop=&quot;author&quot;&gt;Peter F. Hamilton&lt;/dd&gt;</span><br><span class=\"line\">  &lt;dt&gt;Publication date&lt;/dt&gt;</span><br><span class=\"line\">  &lt;dd&gt;&lt;time itemprop=&quot;pubdate&quot; datetime=&quot;1996-01-26&quot;&gt;26 January 1996&lt;/time&gt;&lt;/dd&gt;</span><br><span class=\"line\">&lt;/dl&gt;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"属性取值\"><a href=\"#属性取值\" class=\"headerlink\" title=\"属性取值\"></a>属性取值</h4><ul>\n<li>情况复杂，根据元素类型不同，取值方式各有不同<ul>\n<li>具体请参考 Microdata 规范草案</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"统一词汇表\"><a href=\"#统一词汇表\" class=\"headerlink\" title=\"统一词汇表\"></a>统一词汇表</h4><ul>\n<li>请参考 Schema.org</li>\n<li>搜索引擎 (Google, Bing, Yahoo!) 建立，爬虫支持并理解用此词汇表中词汇表达的语义</li>\n</ul>\n"},{"title":"学习CSS布局","url":"http://padding.me/blog/2014/10/30/学习CSS布局/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-HTML-CSS\" target=\"_blank\" rel=\"external\">Learning-HTML-CSS</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-HTML-CSS/issues/3\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-HTML-CSS/issues/3</a></p>\n<p>这是偶尔看到的一篇学习CSS布局的文章，对于我这个菜鸟来说真是受益匪浅，对CSS布局一下子拨云见雾的感觉。你可以到<a href=\"http://zh.learnlayout.com/\" target=\"_blank\" rel=\"external\">这里</a>仔细研究阅读，相信你会和我一样兴奋和豁然开朗。而下面是我在此基础上总结的内容，以便后来查阅使用。</p>\n<ul>\n<li><p><strong>“display”属性</strong></p>\n<p>每个元素都有默认的display属性，一般是block或者inline,block表示块级元素，而inline表示行内元素。block元素（如<code>div</code>、<code>table</code>、<code>p</code>、<code>form</code>等）会新开始一行并尽可能撑满容器。而inline元素（如<code>span</code>、<code>a</code>等）即行内元素不会打破包裹它的容器的布局。另一个常用的display值为<code>none</code>，<code>display:none</code>通常是被JavaScript用来在不删除元素的情况下隐藏或显示该元素。<br>其他的display值还有list-item和table等，详情可以参见<a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/display\" target=\"_blank\" rel=\"external\">这里</a>,你可以随时随地人工改变一个元素的display值。常见的是：把<code>li</code>改为<code>display:inline</code>制作水平菜单。</p>\n</li>\n<li><p><strong>marigin:auto</strong></p>\n<p>如何使一个元素居中，并且不用担心小屏幕会显示出滚动条：(max-width 支持IE7+)<br><code><pre><br>  #main{<br>  max-width:600px;<br>  margin:0 auto;<br>}</pre></code></p>\n</li>\n<li><p><strong>盒模型</strong></p>\n<p>盒模型的宽度高度我们知道要通过计算（真正的宽度=width+2<em>padding+2</em>border）我们使用<code>box-sizing</code>来改进它，当设置一个元素为<code>box-sizing:border-box</code>时，此元素的内边距和边框不会增加该元素的宽度。支持IE8+，如果要在所有浏览器中使用该属性，则可以利用下面的代码：<br><code><pre><br>  *{<br>  -webkit-box-sizing:border-box;<br>  -moz-box-sizing:border-box;</pre></code></p>\n<pre><code>box-sizing:border-box;\n</code></pre><p>}<br></p>\n</li>\n<li><p><strong>position</strong></p>\n<p><code>position</code>主要由static、absolute、relative、fixed等值。 </p>\n<blockquote>\n<ol>\n<li>static 是默认值，表示没有被定位。</li>\n<li>relative 相对定位，相对于它在正常文档流中，通过top、right、bottom、left作用值产生偏移。而其他元素不会调整位置来弥补它偏离后剩下的间隙。</li>\n<li>fixed 固定定位，相对于浏览器窗口，意味着即使页面滚动，它还是会停留在相同的位置。（移动浏览器对fixed支持很差，解决方案参考[这里]（<a href=\"http://bradfrostweb.com/blog/mobile/fixed-position/）。\" target=\"_blank\" rel=\"external\">http://bradfrostweb.com/blog/mobile/fixed-position/）。</a></li>\n<li>absolute 是相对于最近的被定位的祖先元素产生的偏移，如果没有，它是相对文档的body元素，并且它会随着页面滚动而移动。</li>\n</ol>\n</blockquote>\n</li>\n</ul>\n<ul>\n<li><p><strong>float</strong></p>\n<p>如前篇所述，最开始产生float的作用就是使文字环绕图片，其本质就是包裹和破坏，它脱离了正常的文档流，可能会导致溢出，所以要clearfix hack（清除浮动），清除浮动的方法有很多种，可以参考<a href=\"http://padding.me/blog/2014/04/19/float-label-in-css/\">上篇文章</a>张鑫旭写的，<a href=\"http://stackoverflow.com/questions/211383/which-method-of-clearfix-is-best\" target=\"_blank\" rel=\"external\">这里</a>有更多的讨论</p>\n</li>\n</ul>\n<ul>\n<li><p><strong>媒体查询</strong></p>\n<p>针对响应式设计，，让网站针对不同浏览器和设备相应。</p>\n<p><code><pre><br>@media screen and (min-width:600px) {<br>nav {<br>  float: left;<br>  width: 25%;<br>}<br>section {<br>  margin-left: 25%;<br>}<br>}<br>@media screen and (max-width:599px) {<br>nav li {<br>  display: inline;<br>}<br>}<br></pre></code></p>\n</li>\n</ul>\n<p>在<a href=\"https://developer.mozilla.org/en-US/docs/CSS/Media_queries\" target=\"_blank\" rel=\"external\">MDN文档</a>中有更多关于媒体查询的知识。使用 <a href=\"http://dev.opera.com/articles/view/an-introduction-to-meta-viewport-and-viewport/\" target=\"_blank\" rel=\"external\">meta viewport</a> 之后可以让你的布局在移动浏览器上显示的更好。</p>\n<ul>\n<li><p><strong>inline-block</strong></p>\n<p>使用行内联。IE6和IE7支持看<a href=\"http://blog.mozilla.org/webdev/2009/02/20/cross-browser-inline-block/\" target=\"_blank\" rel=\"external\">这里</a><br>使用inline-box要注意以下：</p>\n<ul>\n<li>vertical-align 属性会影响到 inline-block 元素，你可能会把它的值设置为 top </li>\n<li>需要设置每一列的宽度</li>\n<li>如果HTML源代码中元素之间有空格，那么列与列之间会产生空隙</li>\n</ul>\n</li>\n<li><p><strong>column</strong><br><code><pre><br>.three-column {<br>padding: 1em;<br>-moz-column-count: 3;<br>-moz-column-gap: 1em;<br>-webkit-column-count: 3;<br>-webkit-column-gap: 1em;<br>column-count: 3;<br>column-gap: 1em;<br>}<br></pre></code><br>CSS columns是很新的标准，所以你需要使用前缀，并且它不被IE9及以下和Opera Mini支持。还有许多和 cloumn 相关的属性，点击<a href=\"http://quirksmode.org/css/columns/\" target=\"_blank\" rel=\"external\">这里</a>了解更多</p>\n</li>\n<li><p><strong>flexbox</strong></p>\n</li>\n</ul>\n<p>新的 flexbox 布局模式被用来重新定义CSS中的布局方式。很遗憾的是最近规范变动过多，导致各个浏览器对它的实现也有所不同。具体例子可以参考<a href=\"http://zh.learnlayout.com/flexbox.html\" target=\"_blank\" rel=\"external\">这里</a></p>\n<ul>\n<li><p><strong>其他框架</strong></p>\n<p>例如bootstrap的12格流式布局等等。</p>\n</li>\n</ul>\n"},{"title":"使用HTML、CSS写好一个输入框","url":"http://padding.me/blog/2014/10/30/使用HTML、CSS写好一个输入框/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-HTML-CSS\" target=\"_blank\" rel=\"external\">Learning-HTML-CSS</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-HTML-CSS/issues/9\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-HTML-CSS/issues/9</a></p>\n<p>  如何做到输入框无无文字时和输入文字时一致对齐？<br>  chrome 浏览器的输入框光标、输入文字、占位符有以下规则：</p>\n<ul>\n<li>无文字输入时，以行高为准；</li>\n<li>有文字输入时，以文字大小为准；</li>\n<li><p>占位符以行高为准。</p>\n<p>那么如何写好一个输入框：</p>\n</li>\n</ul>\n<ol>\n<li>在书写输入框的时候，如果要增加光标高度，那么最可行的做法是增加文字的大小;</li>\n<li>输入框的剩余空白使用内边距填充；</li>\n<li>不要为输入框设置行高，因为浏览器默认会设置行高就会使占位符和输入光标、文字都居中；</li>\n<li><p>不要为输入框设置高度，因为已经使用了内边距撑开了，并且现在大多数 css 库都直接使用边框盒模型。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">    body&#123;</span><br><span class=\"line\">        line-height: 20px;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    #input1&#123;</span><br><span class=\"line\">        font-size: 40px;</span><br><span class=\"line\">        padding: 10px;</span><br><span class=\"line\">        line-height: normal;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">    &lt;input type=&quot;text&quot; id=&quot;input1&quot; placeholder=&quot;input&quot;&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n<p>demo: <a href=\"http://codepen.io/paddingme/pen/cJGhl\" target=\"_blank\" rel=\"external\">http://codepen.io/paddingme/pen/cJGhl</a></p>\n<p>相关链接：<a href=\"http://qianduanblog.com/post/css-learning-21-using-html-css-write-an-input-box.html\" target=\"_blank\" rel=\"external\">http://qianduanblog.com/post/css-learning-21-using-html-css-write-an-input-box.html</a></p>\n</li>\n</ol>\n"},{"title":"清除浮动和闭合浮动的区别","url":"http://padding.me/blog/2014/10/30/清除浮动和闭合浮动的区别/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-HTML-CSS\" target=\"_blank\" rel=\"external\">Learning-HTML-CSS</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-HTML-CSS/issues/12\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-HTML-CSS/issues/12</a></p>\n<p>原来是一丝提出的“闭合浮动”。为了避免混淆，还是说全吧，“使float元素可以撑高父元素”。</p>\n<p>（国内页面重构已经足够乱了还需要特地造个新名词混淆新人吗）</p>\n<p>“清除浮动”源于clear float即W3C CSS2.1 9.5.2章定义的内容，意即使用clear阻止这个元素盒子的边和前面的浮动元素相邻的行为；</p>\n<blockquote>\n<p>The most interesting characteristic of a float (or “floated” or “floating” box) is that content may flow along its side (or be prohibited from doing so by the ‘clear’ property).</p>\n</blockquote>\n<p>如果“闭合浮动”指的是避免“float无法撑高父容器的默认行为”的话，那么有这些方案：</p>\n<ul>\n<li>在float同级最后方加入带有clear:both属性的元素或伪元素（W3C CSS2.1 9.5.2 clearance高度计算部分）</li>\n<li>给父级加上一些overflow/float/display table等触发BFC的属性以使父容器成为block formatting context roots（W3C CSS2.1 10.6.7）</li>\n</ul>\n<blockquote>\n<p>10.6.7 ‘Auto’ heights for block formatting context roots<br>In addition, if the element has any floating descendants whose bottom margin edge is below the element’s bottom content edge, then the height is increased to include those edges. Only floats that participate in this block formatting context are taken into account, e.g., floats inside absolutely positioned descendants or other floats are not.</p>\n</blockquote>\n<p>参考:<a href=\"http://segmentfault.com/q/1010000000732608\" target=\"_blank\" rel=\"external\">http://segmentfault.com/q/1010000000732608</a></p>\n"},{"title":"form表单的正确使用","url":"http://padding.me/blog/2014/10/30/form表单的正确使用/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-HTML-CSS\" target=\"_blank\" rel=\"external\">Learning-HTML-CSS</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-HTML-CSS/issues/5\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-HTML-CSS/issues/5</a></p>\n<p><code>form</code> 表单的正确使用</p>\n<ul>\n<li><a href=\"http://suo.iteye.com/blog/493998\" target=\"_blank\" rel=\"external\">form提交的几种方法</a></li>\n<li><a href=\"http://www.w3cplus.com/framework/page/form.php\" target=\"_blank\" rel=\"external\">form表单</a></li>\n<li><a href=\"http://www.jb51.net/article/24709.htm\" target=\"_blank\" rel=\"external\">onsubmit阻止form表单提交与onclick的相关操作</a></li>\n</ul>\n<h1 id=\"form提交的几种方法\"><a href=\"#form提交的几种方法\" class=\"headerlink\" title=\"form提交的几种方法\"></a><a href=\"http://suo.iteye.com/blog/493998\" target=\"_blank\" rel=\"external\">form提交的几种方法</a></h1><h2 id=\"方法一：利用form的onsubmit-函数\"><a href=\"#方法一：利用form的onsubmit-函数\" class=\"headerlink\" title=\"方法一：利用form的onsubmit()函数\"></a>方法一：利用form的onsubmit()函数</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">    function validateForm()&#123;</span><br><span class=\"line\">        if(document.reply.title.value == &quot;&quot;)&#123; //通过form名来获取form</span><br><span class=\"line\">        alert(&quot;please input the title!&quot;);</span><br><span class=\"line\">        document.reply.title.focus();</span><br><span class=\"line\">        return false;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    if(document.forms[0].cont.value == &quot;&quot;)&#123; //通过forms数组获取form</span><br><span class=\"line\">        alert(&quot;please input the content!&quot;);</span><br><span class=\"line\">        document.reply.cont.focus();</span><br><span class=\"line\">        return false;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return true;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;form name=&quot;reply&quot;  method=&quot;post&quot; onsubmit=&quot;return validateForm( );&quot;&gt;</span><br><span class=\"line\">        &lt;input type=&quot;text&quot; name=&quot;title&quot;  size=&quot;80&quot; /&gt;&lt;br /&gt;</span><br><span class=\"line\">        &lt;textarea name=&quot;cont&quot; cols=&quot;80&quot; rows=&quot;12&quot;&gt;&lt;/textarea&gt;&lt;br /&gt;</span><br><span class=\"line\">        &lt;input type=&quot;submit&quot; value=&quot;提交&quot; &gt;</span><br><span class=\"line\">&lt;/form&gt;</span><br></pre></td></tr></table></figure>\n<p>注意：<br>1.onsubmit属性内容一定要有return关键字，否则函数会直接执行，不会返回<br>2.validateForm一定要返回一个boolean类型的返回值<br>3.提交按钮要写成submit类型的</p>\n<h2 id=\"方法二：利用input类型为submit组件的onclick-函数\"><a href=\"#方法二：利用input类型为submit组件的onclick-函数\" class=\"headerlink\" title=\"方法二：利用input类型为submit组件的onclick()函数\"></a>方法二：利用input类型为submit组件的onclick()函数</h2><ol>\n<li>将上面form标签中的onsubmit=”return validateForm()”属性，去掉。</li>\n<li><p>为“提交”按钮添加onclick事件，如下：</p>\n<input type=\"submit\" value=\"提交\" onclick=\"return validateForm();\">\n\n</li>\n</ol>\n<h2 id=\"方法三：利用button组件的onclick-函数，手动提交\"><a href=\"#方法三：利用button组件的onclick-函数，手动提交\" class=\"headerlink\" title=\"方法三：利用button组件的onclick()函数，手动提交\"></a>方法三：利用button组件的onclick()函数，手动提交</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">    function modifyItem() &#123;</span><br><span class=\"line\">        if (trim(document.getElementById(&quot;itemName&quot;).value) == &quot;&quot;) &#123;</span><br><span class=\"line\">            alert(&quot;物料名称不能为空！&quot;);</span><br><span class=\"line\">            document.getElementById(&quot;itemName&quot;).focus();</span><br><span class=\"line\">            return;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        with (document.getElementById(&quot;itemForm&quot;)) &#123;</span><br><span class=\"line\">            method = &quot;post&quot;;</span><br><span class=\"line\">            action = &quot;item.do?command=modify&amp;pageNo=$&#123;itemForm.pageNo&#125;&quot;;</span><br><span class=\"line\">            submit();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    //返回</span><br><span class=\"line\">    function goBack() &#123;</span><br><span class=\"line\">        window.self.location = &quot;item.do?command=list&amp;pageNo=$&#123;itemForm.pageNo&#125;&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&lt;form name=&quot;itemForm&quot; id=&quot;itemForm&quot;&gt;</span><br><span class=\"line\">      &lt;input name=&quot;itemNo&quot; type=&quot;text&quot;   id=&quot;itemNo&quot; value=&quot;$&#123; item.itemNo &#125;&quot; &gt;</span><br><span class=\"line\">      &lt;input name=&quot;itemName&quot; type=&quot;text&quot;   id=&quot;itemName&quot; value=&quot;$&#123; item.itemName &#125;&quot; &gt;</span><br><span class=\"line\">     &lt;input name=&quot;btnModify&quot;  type=&quot;button&quot; id=&quot;btnModify&quot; value=“修改&quot; onclick=&quot;modifyItem()&quot;&gt;</span><br><span class=\"line\">&lt;/form&gt;</span><br></pre></td></tr></table></figure>\n<p>注意：<br> 1.提交时，设置form的action和methods属性，然后利用form.submit()函数提交。</p>\n<h2 id=\"总结：\"><a href=\"#总结：\" class=\"headerlink\" title=\"总结：\"></a>总结：</h2><ol>\n<li>对form中的组件验证时，前两个使用的是name属性，包括form自身的。</li>\n<li>如果提交表单时没有反应，同时确定提交表单部分代码没有问题，请查看提交表单前面的js代码，有时前面js的错误会引发莫名其妙的问题。</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=&quot;zh-cmn-Hans&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class=\"line\">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class=\"line\">    &lt;style&gt;</span><br><span class=\"line\">        @charset &quot;utf-8&quot;;</span><br><span class=\"line\">/* -------------------------------------------------</span><br><span class=\"line\"> * form</span><br><span class=\"line\"> * -------------------------------------------------</span><br><span class=\"line\">*/</span><br><span class=\"line\">form&#123;</span><br><span class=\"line\">    margin-bottom:18px;</span><br><span class=\"line\">    font-size:13px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">textarea &#123;</span><br><span class=\"line\">    resize:none;</span><br><span class=\"line\">    vertical-align:top;</span><br><span class=\"line\">    overflow:auto;</span><br><span class=\"line\">    font:12px/1.5 Helvetica,Arial,sans-serif;</span><br><span class=\"line\">    width:500px;</span><br><span class=\"line\">    height:80px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.form-text&#123;</span><br><span class=\"line\">    margin:0;</span><br><span class=\"line\">    font:12px/1.5 Helvetica,Arial,sans-serif;</span><br><span class=\"line\">    height:18px;</span><br><span class=\"line\">    width:200px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.form-text, textarea, select&#123;</span><br><span class=\"line\">    border: 1px solid #CCCCCC;</span><br><span class=\"line\">    border-radius: 3px 3px 3px 3px;</span><br><span class=\"line\">    padding:4px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.form-text, textarea &#123;</span><br><span class=\"line\">  -webkit-transition: border linear 0.2s, box-shadow linear 0.2s;</span><br><span class=\"line\">  -moz-transition: border linear 0.2s, box-shadow linear 0.2s;</span><br><span class=\"line\">  -ms-transition: border linear 0.2s, box-shadow linear 0.2s;</span><br><span class=\"line\">  -o-transition: border linear 0.2s, box-shadow linear 0.2s;</span><br><span class=\"line\">  transition: border linear 0.2s, box-shadow linear 0.2s;</span><br><span class=\"line\">  -webkit-box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1);</span><br><span class=\"line\">  -moz-box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1);</span><br><span class=\"line\">  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.form-text:focus, textarea:focus,select&#123;</span><br><span class=\"line\">    outline: 0 none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.form-text:focus, textarea:focus &#123;</span><br><span class=\"line\">  border-color: rgba(82, 168, 236, 0.8);</span><br><span class=\"line\">  -webkit-box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1), 0 0 8px rgba(82, 168, 236, 0.6);</span><br><span class=\"line\">  -moz-box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1), 0 0 8px rgba(82, 168, 236, 0.6);</span><br><span class=\"line\">  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1), 0 0 8px rgba(82, 168, 236, 0.6);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.form-radio,.form-checkbox&#123;</span><br><span class=\"line\">    margin:0;</span><br><span class=\"line\">    padding:0;</span><br><span class=\"line\">    width:13px;</span><br><span class=\"line\">    height:13px;</span><br><span class=\"line\">    font-size:13px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">:-moz-placeholder,</span><br><span class=\"line\">::-webkit-input-placeholder&#123;</span><br><span class=\"line\">  color: #bfbfbf;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/* form-item */</span><br><span class=\"line\">.form-item&#123;</span><br><span class=\"line\">    margin-bottom:9px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/* horizontal form label */</span><br><span class=\"line\">.form-horizontal label&#123;</span><br><span class=\"line\">    float: left;</span><br><span class=\"line\">    text-align: right;</span><br><span class=\"line\">    font-weight:500;</span><br><span class=\"line\">    width:100px;</span><br><span class=\"line\">    font-size:12px;</span><br><span class=\"line\">    line-height:19px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.form-horizontal .form-field&#123;</span><br><span class=\"line\">    float:left;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.form-horizontal .form-action,</span><br><span class=\"line\">.form-horizontal .item-no-label&#123;</span><br><span class=\"line\">    padding-left:100px;/*label width*/</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/* vertical form label */</span><br><span class=\"line\">.form-vertical label&#123;</span><br><span class=\"line\">    display:block;</span><br><span class=\"line\">    float:none;</span><br><span class=\"line\">    width:auto;</span><br><span class=\"line\">    text-align:left;</span><br><span class=\"line\">    margin-bottom:5px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.form-vertical .form-field&#123;</span><br><span class=\"line\">    float:none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.form-vertical .form-action,</span><br><span class=\"line\">.form-vertical .item-no-label&#123;</span><br><span class=\"line\">    padding-left:0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/* field-list */</span><br><span class=\"line\">.form-radio-checkbox-wrap .form-field label&#123;</span><br><span class=\"line\">    text-align: left;</span><br><span class=\"line\">    width: auto;</span><br><span class=\"line\">    font-weight:normal;</span><br><span class=\"line\">    margin:0 10px 0 0;</span><br><span class=\"line\">    float:left;</span><br><span class=\"line\">    display:inline;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.form-radio-checkbox-wrap .form-field .field-list-block&#123;</span><br><span class=\"line\">    display:block;</span><br><span class=\"line\">    float: none;</span><br><span class=\"line\">    margin-right:0;</span><br><span class=\"line\">    overflow:auto;*zoom:1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.form-radio-checkbox-wrap .form-radio,</span><br><span class=\"line\">.form-radio-checkbox-wrap .form-checkbox,</span><br><span class=\"line\">.form-radio-checkbox-wrap span&#123;</span><br><span class=\"line\">    float:left;</span><br><span class=\"line\">    display:inline;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.form-radio-checkbox-wrap .form-radio,</span><br><span class=\"line\">.form-radio-checkbox-wrap .form-checkbox&#123;</span><br><span class=\"line\">    margin-right:5px;</span><br><span class=\"line\">    margin-top:3px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/* form-action */</span><br><span class=\"line\">.form-action&#123;</span><br><span class=\"line\">    clear:both;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.submit-wrap&#123;</span><br><span class=\"line\">    -moz-border-radius:5px;</span><br><span class=\"line\">    -webkit-border-radius:5px;</span><br><span class=\"line\">    border-radius:5px;</span><br><span class=\"line\">    display:inline-block;*display:inline;*zoom:1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.submit-btn&#123;</span><br><span class=\"line\">    border: 0 none;</span><br><span class=\"line\">    height:26px;</span><br><span class=\"line\">    margin:0;</span><br><span class=\"line\">    background:none;</span><br><span class=\"line\">    overflow:visible;</span><br><span class=\"line\">    padding:0 10px;</span><br><span class=\"line\">    cursor:pointer;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@-moz-document url-prefix()&#123;</span><br><span class=\"line\">    .submit-btn&#123;</span><br><span class=\"line\">        padding-bottom:3px;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/* description */</span><br><span class=\"line\">.form-des&#123;</span><br><span class=\"line\">    color: #bfbfbf;</span><br><span class=\"line\">    font-size:12px;</span><br><span class=\"line\">    margin-left:5px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">p.form-des&#123;</span><br><span class=\"line\">    margin:0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/* codePic */</span><br><span class=\"line\">.code-pic&#123;</span><br><span class=\"line\">    display:inline-block;*display:inline;*zoom:1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.code-pic img&#123;</span><br><span class=\"line\">    height:28px;</span><br><span class=\"line\">    vertical-align:middle;</span><br><span class=\"line\">    margin:0 5px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/* tips messages */</span><br><span class=\"line\">.form-error, .form-alert, .form-notice, .form-success, .form-info &#123;</span><br><span class=\"line\">    border: 2px solid #DDDDDD;</span><br><span class=\"line\">    margin-bottom: 9px;</span><br><span class=\"line\">    padding:8px;</span><br><span class=\"line\">    font-size:12px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/* span inline tips */</span><br><span class=\"line\">span.form-error, span.form-alert, span.form-notice, span.form-success, span.form-info &#123;</span><br><span class=\"line\">    border-width:1px;</span><br><span class=\"line\">    display:inline-block;*display:inline;*zoom:1;</span><br><span class=\"line\">    line-height:26px;</span><br><span class=\"line\">    vertical-align:middle;</span><br><span class=\"line\">    padding:0 5px;</span><br><span class=\"line\">    font-size:12px;</span><br><span class=\"line\">    margin:0 0 0 5px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.form-error, .form-alert &#123;</span><br><span class=\"line\">    background: none repeat scroll 0 0 #FBE3E4;</span><br><span class=\"line\">    border-color: #FBC2C4;</span><br><span class=\"line\">    color: #8A1F11;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.form-notice &#123;</span><br><span class=\"line\">    background: none repeat scroll 0 0 #FFF6BF;</span><br><span class=\"line\">    border-color: #FFD324;</span><br><span class=\"line\">    color: #514721;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.form-info &#123;</span><br><span class=\"line\">    background: none repeat scroll 0 0 #D5EDF8;</span><br><span class=\"line\">    border-color: #92CAE4;</span><br><span class=\"line\">    color: #205791;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.form-success &#123;</span><br><span class=\"line\">    background: none repeat scroll 0 0 #E6EFC2;</span><br><span class=\"line\">    border-color: #C6D880;</span><br><span class=\"line\">    color: #264409;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.form-error a, .form-alert a,.form-notice a,.form-info a,.form-success a&#123;</span><br><span class=\"line\">    text-decoration:underline;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.form-error a, .form-alert a &#123;</span><br><span class=\"line\">    color: #8A1F11; </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.form-notice a &#123;</span><br><span class=\"line\">    color: #514721;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.form-info a &#123;</span><br><span class=\"line\">    color: #205791;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.form-success a &#123;</span><br><span class=\"line\">    color: #264409;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/* clear form-item float */</span><br><span class=\"line\">.form-item:before, .form-item:after &#123;</span><br><span class=\"line\">    content:&quot;&quot;;</span><br><span class=\"line\">    display:table;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.form-item:after&#123;</span><br><span class=\"line\">    clear:both;</span><br><span class=\"line\">    overflow:hidden;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.form-item&#123;</span><br><span class=\"line\">    zoom:1;</span><br><span class=\"line\">    clear:both;</span><br><span class=\"line\">    margin-bottom:9px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">    &lt;/style&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">    &lt;h3&gt;label同行表单demo&lt;/h3&gt;</span><br><span class=\"line\">    &lt;section class=&quot;demozone&quot;&gt;</span><br><span class=\"line\">        &lt;form class=&quot;demo form-horizontal&quot; id=&quot;demo2&quot; action=&quot;#&quot; method=&quot;post&quot;&gt;</span><br><span class=\"line\">            &lt;div class=&quot;form-item&quot;&gt;</span><br><span class=\"line\">                &lt;label for=&quot;username&quot;&gt;昵称：&lt;/label&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">                &lt;div class=&quot;form-field&quot;&gt;</span><br><span class=\"line\">                    &lt;input type=&quot;text&quot; name=&quot;username&quot; id=&quot;username&quot; class=&quot;form-text&quot; placeholder=&quot;6-32个字符&quot; /&gt;</span><br><span class=\"line\">                &lt;/div&gt;</span><br><span class=\"line\">            &lt;/div&gt;</span><br><span class=\"line\">            &lt;div class=&quot;form-item&quot;&gt;</span><br><span class=\"line\">                &lt;label for=&quot;name&quot;&gt;邮箱：&lt;/label&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">                &lt;div class=&quot;form-field&quot;&gt;</span><br><span class=\"line\">                    &lt;input type=&quot;email&quot; name=&quot;email&quot; id=&quot;email&quot; class=&quot;form-text&quot; /&gt;</span><br><span class=\"line\">                &lt;/div&gt;</span><br><span class=\"line\">            &lt;/div&gt;</span><br><span class=\"line\">            &lt;div class=&quot;form-item&quot;&gt;</span><br><span class=\"line\">                &lt;label for=&quot;pwd&quot;&gt;密码：&lt;/label&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">                &lt;div class=&quot;form-field&quot;&gt;</span><br><span class=\"line\">                    &lt;input type=&quot;password&quot; class=&quot;form-text&quot; id=&quot;pwd&quot; name=&quot;pwd&quot;&gt;</span><br><span class=\"line\">                &lt;/div&gt;</span><br><span class=\"line\">            &lt;/div&gt;</span><br><span class=\"line\">            &lt;div class=&quot;form-item form-radio-checkbox-wrap&quot;&gt;</span><br><span class=\"line\">                &lt;label&gt;性别：&lt;/label&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">                &lt;div class=&quot;form-field&quot;&gt;</span><br><span class=\"line\">                    &lt;label&gt;</span><br><span class=\"line\">                        &lt;input type=&quot;radio&quot; name=&quot;sex&quot; class=&quot;form-radio&quot; value=&quot;man&quot; checked=&quot;checked&quot;&gt;</span><br><span class=\"line\">                        &lt;span&gt;男&lt;/span&gt;</span><br><span class=\"line\">                    &lt;/label&gt;</span><br><span class=\"line\">                    &lt;label&gt;</span><br><span class=\"line\">                        &lt;input type=&quot;radio&quot; name=&quot;sex&quot; class=&quot;form-radio&quot; value=&quot;woman&quot;&gt;</span><br><span class=\"line\">                        &lt;span&gt;女&lt;/span&gt;</span><br><span class=\"line\">                    &lt;/label&gt;</span><br><span class=\"line\">                &lt;/div&gt;</span><br><span class=\"line\">            &lt;/div&gt;</span><br><span class=\"line\">            &lt;div class=&quot;form-item form-radio-checkbox-wrap&quot;&gt;</span><br><span class=\"line\">                &lt;label&gt;Options：&lt;/label&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">                &lt;div class=&quot;form-field&quot;&gt;</span><br><span class=\"line\">                    &lt;label class=&quot;field-list-block&quot;&gt;</span><br><span class=\"line\">                        &lt;input type=&quot;checkbox&quot; checked=&quot;checked&quot; value=&quot;1&quot; class=&quot;form-checkbox&quot; name=&quot;&quot;&gt;</span><br><span class=\"line\">                        &lt;span&gt;Option one is this and that—be sure to include why it’s great&lt;/span&gt;</span><br><span class=\"line\">                    &lt;/label&gt;</span><br><span class=\"line\">                    &lt;label class=&quot;field-list-block&quot;&gt;</span><br><span class=\"line\">                        &lt;input type=&quot;checkbox&quot; value=&quot;2&quot; class=&quot;form-checkbox&quot; name=&quot;&quot;&gt;</span><br><span class=\"line\">                        &lt;span&gt;Option two can also be checked and included in form results&lt;/span&gt;</span><br><span class=\"line\">                    &lt;/label&gt;</span><br><span class=\"line\">                    &lt;label class=&quot;field-list-block&quot;&gt;</span><br><span class=\"line\">                        &lt;input type=&quot;checkbox&quot; value=&quot;3&quot; class=&quot;form-checkbox&quot; name=&quot;&quot;&gt;</span><br><span class=\"line\">                        &lt;span&gt;Option three can—yes, you guessed it—also be checked and included in form results&lt;/span&gt;</span><br><span class=\"line\">                    &lt;/label&gt;</span><br><span class=\"line\">                &lt;/div&gt;</span><br><span class=\"line\">            &lt;/div&gt;</span><br><span class=\"line\">            &lt;div class=&quot;form-item&quot;&gt;</span><br><span class=\"line\">                &lt;label for=&quot;realname&quot;&gt;姓名：&lt;/label&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">                &lt;div class=&quot;form-field&quot;&gt;</span><br><span class=\"line\">                    &lt;input type=&quot;text&quot; name=&quot;realname&quot; id=&quot;realname&quot; class=&quot;form-text&quot; placeholder=&quot;请填入真实姓名&quot; /&gt;</span><br><span class=\"line\">                &lt;/div&gt;</span><br><span class=\"line\">            &lt;/div&gt;</span><br><span class=\"line\">            &lt;div class=&quot;form-item&quot;&gt;</span><br><span class=\"line\">                &lt;label&gt;证件号码：&lt;/label&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">                &lt;div class=&quot;form-field form-id-num-wrap&quot;&gt;</span><br><span class=\"line\">                    &lt;select id=&quot;id_type&quot; size=&quot;1&quot; name=&quot;id_type&quot;&gt;</span><br><span class=\"line\">                        &lt;option value=&quot;1&quot; selected=&quot;selected&quot;&gt;身份证&lt;/option&gt;</span><br><span class=\"line\">                        &lt;option value=&quot;2&quot;&gt;学生证&lt;/option&gt;</span><br><span class=\"line\">                        &lt;option value=&quot;3&quot;&gt;军官证&lt;/option&gt;</span><br><span class=\"line\">                    &lt;/select&gt;</span><br><span class=\"line\">                    &lt;input type=&quot;text&quot; name=&quot;id_text&quot; id=&quot;id_text&quot; class=&quot;form-text&quot; /&gt;</span><br><span class=\"line\">                &lt;/div&gt;</span><br><span class=\"line\">            &lt;/div&gt;</span><br><span class=\"line\">            &lt;div class=&quot;form-item&quot;&gt;</span><br><span class=\"line\">                &lt;label&gt;个人简介：&lt;/label&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">                &lt;div class=&quot;form-field&quot;&gt;</span><br><span class=\"line\">                    &lt;textarea name=&quot;intro&quot; id=&quot;intro&quot;&gt;&lt;/textarea&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">                    &lt;p class=&quot;form-des&quot;&gt;说明注释文字可以放在这里啊&lt;/p&gt;</span><br><span class=\"line\">                &lt;/div&gt;</span><br><span class=\"line\">            &lt;/div&gt;</span><br><span class=\"line\">            &lt;div class=&quot;form-item&quot;&gt;</span><br><span class=\"line\">                &lt;label for=&quot;codetext&quot;&gt;验证码：&lt;/label&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">                &lt;div class=&quot;form-field form-code-text-wrap&quot;&gt;</span><br><span class=\"line\">                    &lt;input type=&quot;text&quot; id=&quot;codetext&quot; name=&quot;codetext&quot; class=&quot;form-text code-text&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">                    &lt;div class=&quot;code-pic&quot;&gt;</span><br><span class=\"line\">                        &lt;img id=&quot;codePic&quot; alt=&quot;&quot; src=&quot;http://www.w3cplus.com/solution/form/images/code.jpg&quot;&gt;&lt;a id=&quot;change_code&quot; href=&quot;#&quot;&gt;换一个&lt;/a&gt;</span><br><span class=\"line\">                    &lt;/div&gt;</span><br><span class=\"line\">                &lt;/div&gt;</span><br><span class=\"line\">            &lt;/div&gt;</span><br><span class=\"line\">            &lt;div class=&quot;form-item item-no-label form-radio-checkbox-wrap&quot;&gt;</span><br><span class=\"line\">                &lt;div class=&quot;form-field&quot;&gt;</span><br><span class=\"line\">                    &lt;label&gt;</span><br><span class=\"line\">                        &lt;input type=&quot;checkbox&quot; name=&quot;&quot; class=&quot;form-checkbox&quot; value=&quot;1&quot; checked=&quot;checked&quot;&gt;</span><br><span class=\"line\">                        &lt;span&gt;我同意所有条款……&lt;/span&gt;</span><br><span class=\"line\">                    &lt;/label&gt;</span><br><span class=\"line\">                &lt;/div&gt;</span><br><span class=\"line\">            &lt;/div&gt;</span><br><span class=\"line\">            &lt;div class=&quot;form-action&quot;&gt;</span><br><span class=\"line\">                &lt;span class=&quot;submit-wrap greybtn&quot;&gt;</span><br><span class=\"line\">                    &lt;input type=&quot;submit&quot; value=&quot;提交&quot; class=&quot;submit-btn&quot;&gt;</span><br><span class=\"line\">                &lt;/span&gt;</span><br><span class=\"line\">            &lt;/div&gt;</span><br><span class=\"line\">        &lt;/form&gt;</span><br><span class=\"line\">    &lt;/section&gt;</span><br><span class=\"line\">    &lt;h3&gt;label换行表单&lt;/h3&gt;</span><br><span class=\"line\">    &lt;section class=&quot;demozone&quot;&gt;</span><br><span class=\"line\">        &lt;form method=&quot;post&quot; action=&quot;#&quot; id=&quot;demo3&quot; class=&quot;demo form-vertical&quot;&gt;</span><br><span class=\"line\">            &lt;div class=&quot;form-item&quot;&gt;</span><br><span class=\"line\">                &lt;label for=&quot;username&quot;&gt;昵称：&lt;/label&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">                &lt;div class=&quot;form-field&quot;&gt;</span><br><span class=\"line\">                    &lt;input type=&quot;text&quot; placeholder=&quot;6-32个字符&quot; class=&quot;form-text&quot; id=&quot;username&quot; name=&quot;username&quot;&gt;</span><br><span class=\"line\">                &lt;/div&gt;</span><br><span class=\"line\">            &lt;/div&gt;</span><br><span class=\"line\">            &lt;div class=&quot;form-item&quot;&gt;</span><br><span class=\"line\">                &lt;label for=&quot;name&quot;&gt;邮箱：&lt;/label&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">                &lt;div class=&quot;form-field&quot;&gt;</span><br><span class=\"line\">                    &lt;input type=&quot;email&quot; class=&quot;form-text&quot; id=&quot;email&quot; name=&quot;email&quot;&gt;</span><br><span class=\"line\">                &lt;/div&gt;</span><br><span class=\"line\">            &lt;/div&gt;</span><br><span class=\"line\">            &lt;div class=&quot;form-item&quot;&gt;</span><br><span class=\"line\">                &lt;label for=&quot;pwd&quot;&gt;密码：&lt;/label&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">                &lt;div class=&quot;form-field&quot;&gt;</span><br><span class=\"line\">                    &lt;input type=&quot;password&quot; name=&quot;pwd&quot; id=&quot;pwd&quot; class=&quot;form-text&quot;&gt;</span><br><span class=\"line\">                &lt;/div&gt;</span><br><span class=\"line\">            &lt;/div&gt;</span><br><span class=\"line\">            &lt;div class=&quot;form-item form-radio-checkbox-wrap&quot;&gt;</span><br><span class=\"line\">                &lt;label&gt;性别：&lt;/label&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">                &lt;div class=&quot;form-field&quot;&gt;</span><br><span class=\"line\">                    &lt;label&gt;</span><br><span class=\"line\">                        &lt;input type=&quot;radio&quot; checked=&quot;checked&quot; value=&quot;man&quot; class=&quot;form-radio&quot; name=&quot;sex&quot;&gt;</span><br><span class=\"line\">                        &lt;span&gt;男&lt;/span&gt;</span><br><span class=\"line\">                    &lt;/label&gt;</span><br><span class=\"line\">                    &lt;label&gt;</span><br><span class=\"line\">                        &lt;input type=&quot;radio&quot; value=&quot;woman&quot; class=&quot;form-radio&quot; name=&quot;sex&quot;&gt;</span><br><span class=\"line\">                        &lt;span&gt;女&lt;/span&gt;</span><br><span class=\"line\">                    &lt;/label&gt;</span><br><span class=\"line\">                &lt;/div&gt;</span><br><span class=\"line\">            &lt;/div&gt;</span><br><span class=\"line\">            &lt;div class=&quot;form-item form-radio-checkbox-wrap&quot;&gt;</span><br><span class=\"line\">                &lt;label&gt;Options：&lt;/label&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">                &lt;div class=&quot;form-field&quot;&gt;</span><br><span class=\"line\">                    &lt;label class=&quot;field-list-block&quot;&gt;</span><br><span class=\"line\">                        &lt;input type=&quot;checkbox&quot; checked=&quot;checked&quot; value=&quot;1&quot; class=&quot;form-checkbox&quot; name=&quot;&quot;&gt;</span><br><span class=\"line\">                        &lt;span&gt;Option one is this and that—be sure to include why it’s great&lt;/span&gt;</span><br><span class=\"line\">                    &lt;/label&gt;</span><br><span class=\"line\">                    &lt;label class=&quot;field-list-block&quot;&gt;</span><br><span class=\"line\">                        &lt;input type=&quot;checkbox&quot; value=&quot;2&quot; class=&quot;form-checkbox&quot; name=&quot;&quot;&gt;</span><br><span class=\"line\">                        &lt;span&gt;Option two can also be checked and included in form results&lt;/span&gt;</span><br><span class=\"line\">                    &lt;/label&gt;</span><br><span class=\"line\">                    &lt;label class=&quot;field-list-block&quot;&gt;</span><br><span class=\"line\">                        &lt;input type=&quot;checkbox&quot; value=&quot;3&quot; class=&quot;form-checkbox&quot; name=&quot;&quot;&gt;</span><br><span class=\"line\">                        &lt;span&gt;Option three can—yes, you guessed it—also be checked and included in form results&lt;/span&gt;</span><br><span class=\"line\">                    &lt;/label&gt;</span><br><span class=\"line\">                &lt;/div&gt;</span><br><span class=\"line\">            &lt;/div&gt;</span><br><span class=\"line\">            &lt;div class=&quot;form-item&quot;&gt;</span><br><span class=\"line\">                &lt;label for=&quot;realname&quot;&gt;姓名：&lt;/label&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">                &lt;div class=&quot;form-field&quot;&gt;</span><br><span class=\"line\">                    &lt;input type=&quot;text&quot; placeholder=&quot;请填入真实姓名&quot; class=&quot;form-text&quot; id=&quot;realname&quot; name=&quot;realname&quot;&gt;</span><br><span class=\"line\">                &lt;/div&gt;</span><br><span class=\"line\">            &lt;/div&gt;</span><br><span class=\"line\">            &lt;div class=&quot;form-item&quot;&gt;</span><br><span class=\"line\">                &lt;label&gt;证件号码：&lt;/label&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">                &lt;div class=&quot;form-field form-id-num-wrap&quot;&gt;</span><br><span class=\"line\">                    &lt;select name=&quot;id_type&quot; size=&quot;1&quot; id=&quot;id_type&quot;&gt;</span><br><span class=\"line\">                        &lt;option selected=&quot;selected&quot; value=&quot;1&quot;&gt;身份证&lt;/option&gt;</span><br><span class=\"line\">                        &lt;option value=&quot;2&quot;&gt;学生证&lt;/option&gt;</span><br><span class=\"line\">                        &lt;option value=&quot;3&quot;&gt;军官证&lt;/option&gt;</span><br><span class=\"line\">                    &lt;/select&gt;</span><br><span class=\"line\">                    &lt;input type=&quot;text&quot; class=&quot;form-text&quot; id=&quot;id_text&quot; name=&quot;id_text&quot;&gt;</span><br><span class=\"line\">                &lt;/div&gt;</span><br><span class=\"line\">            &lt;/div&gt;</span><br><span class=\"line\">            &lt;div class=&quot;form-item&quot;&gt;</span><br><span class=\"line\">                &lt;label&gt;个人简介：&lt;/label&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">                &lt;div class=&quot;form-field&quot;&gt;</span><br><span class=\"line\">                    &lt;textarea id=&quot;intro&quot; name=&quot;intro&quot;&gt;&lt;/textarea&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">                    &lt;p class=&quot;form-des&quot;&gt;说明注释文字可以放在这里啊&lt;/p&gt;</span><br><span class=\"line\">                &lt;/div&gt;</span><br><span class=\"line\">            &lt;/div&gt;</span><br><span class=\"line\">            &lt;div class=&quot;form-item&quot;&gt;</span><br><span class=\"line\">                &lt;label for=&quot;codetext&quot;&gt;验证码：&lt;/label&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">                &lt;div class=&quot;form-field form-code-text-wrap&quot;&gt;</span><br><span class=\"line\">                    &lt;input type=&quot;text&quot; class=&quot;form-text code-text&quot; name=&quot;codetext&quot; id=&quot;codetext&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">                    &lt;div class=&quot;code-pic&quot;&gt;</span><br><span class=\"line\">                        &lt;img src=&quot;http://www.w3cplus.com/solution/form/images/code.jpg&quot; alt=&quot;&quot; id=&quot;codePic&quot;&gt;&lt;a href=&quot;#&quot; id=&quot;change_code&quot;&gt;换一个&lt;/a&gt;</span><br><span class=\"line\">                    &lt;/div&gt;</span><br><span class=\"line\">                &lt;/div&gt;</span><br><span class=\"line\">            &lt;/div&gt;</span><br><span class=\"line\">            &lt;div class=&quot;form-item item-no-label form-radio-checkbox-wrap&quot;&gt;</span><br><span class=\"line\">                &lt;div class=&quot;form-field&quot;&gt;</span><br><span class=\"line\">                    &lt;label&gt;</span><br><span class=\"line\">                        &lt;input type=&quot;checkbox&quot; checked=&quot;checked&quot; value=&quot;1&quot; class=&quot;form-checkbox&quot; name=&quot;&quot;&gt;</span><br><span class=\"line\">                        &lt;span&gt;我同意所有条款……&lt;/span&gt;</span><br><span class=\"line\">                    &lt;/label&gt;</span><br><span class=\"line\">                &lt;/div&gt;</span><br><span class=\"line\">            &lt;/div&gt;</span><br><span class=\"line\">            &lt;div class=&quot;form-action&quot;&gt;</span><br><span class=\"line\">                &lt;span class=&quot;submit-wrap greybtn&quot;&gt;</span><br><span class=\"line\">                    &lt;input type=&quot;submit&quot; value=&quot;提交&quot; class=&quot;submit-btn&quot;&gt;</span><br><span class=\"line\">                &lt;/span&gt;</span><br><span class=\"line\">            &lt;/div&gt;</span><br><span class=\"line\">        &lt;/form&gt;</span><br><span class=\"line\">    &lt;/section&gt;</span><br><span class=\"line\">    &lt;h2&gt;附加：状态提示信息的class&lt;/h2&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;div class=&quot;demozone&quot;&gt;</span><br><span class=\"line\">        &lt;div class=&quot;form-error&quot;&gt;This is a &amp;lt;div&amp;gt; with the class</span><br><span class=\"line\">            &lt;strong&gt;.form-error&lt;/strong&gt;. &lt;a href=&quot;#&quot;&gt;Link&lt;/a&gt;.</span><br><span class=\"line\">        &lt;/div&gt;</span><br><span class=\"line\">        &lt;div class=&quot;form-notice&quot;&gt;This is a &amp;lt;div&amp;gt; with the class</span><br><span class=\"line\">            &lt;strong&gt;.form-notice&lt;/strong&gt;. &lt;a href=&quot;#&quot;&gt;Link&lt;/a&gt;.</span><br><span class=\"line\">        &lt;/div&gt;</span><br><span class=\"line\">        &lt;div class=&quot;form-info&quot;&gt;This is a &amp;lt;div&amp;gt; with the class</span><br><span class=\"line\">            &lt;strong&gt;.form-info&lt;/strong&gt;. &lt;a href=&quot;#&quot;&gt;Link&lt;/a&gt;.&lt;/div&gt;</span><br><span class=\"line\">        &lt;div class=&quot;form-success&quot;&gt;This is a &amp;lt;div&amp;gt; with the class</span><br><span class=\"line\">            &lt;strong&gt;.form-success&lt;/strong&gt;. &lt;a href=&quot;#&quot;&gt;Link&lt;/a&gt;.</span><br><span class=\"line\">        &lt;/div&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">    &lt;/article&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n"},{"title":"label标签的应用","url":"http://padding.me/blog/2014/10/30/label标签的应用/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-HTML-CSS\" target=\"_blank\" rel=\"external\">Learning-HTML-CSS</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-HTML-CSS/issues/13\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-HTML-CSS/issues/13</a></p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;input id=&quot;J_MyChk&quot; type=&quot;checkbox&quot; value=&quot;&quot;&gt;</span><br><span class=\"line\">&lt;label for=&quot;J_MyChk&quot;&gt;点击我也可以让左边选中&lt;/label&gt;</span><br></pre></td></tr></table></figure>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;label&gt;&lt;input type=&quot;checkbox&quot; value=&quot;&quot;&gt;点击我也可以让左边选中&lt;/label&gt;</span><br></pre></td></tr></table></figure>"},{"title":"button标签的正确使用","url":"http://padding.me/blog/2014/10/30/button标签的正确使用/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-HTML-CSS\" target=\"_blank\" rel=\"external\">Learning-HTML-CSS</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-HTML-CSS/issues/14\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-HTML-CSS/issues/14</a></p>\n<p><code>&lt;button type=&quot;button&quot;&gt;我是一个按钮&lt;/button&gt;</code></p>\n"},{"title":"HTMLhead 头标签","url":"http://padding.me/blog/2014/10/30/HTMLhead 头标签/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-HTML-CSS\" target=\"_blank\" rel=\"external\">Learning-HTML-CSS</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-HTML-CSS/issues/4\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-HTML-CSS/issues/4</a></p>\n<p>HTML head 头部分的标签、元素有很多，涉及到浏览器对网页的渲染，SEO 等等，而各个浏览器内核以及各个国内浏览器厂商都有些自己的标签元素,这就造成了很多差异性。移动互联网时代，head 头部结构，移动端的 meta 元素，显得更为重要。了解每个标签的意义，写出满足自己需求的 head  头标签，是本文的目的。本篇以<a href=\"https://github.com/yisibl/blog/issues/1\" target=\"_blank\" rel=\"external\">一丝的文章</a>为基础，进行扩展总结介绍常用的 head 中各个标签、元素的意义以及使用场景。</p>\n<h3 id=\"DOCTYPE\"><a href=\"#DOCTYPE\" class=\"headerlink\" title=\"DOCTYPE\"></a>DOCTYPE</h3><p>DOCTYPE(Document Type)，该声明位于文档中最前面的位置，处于 <code>html</code> 标签之前，此标签告知浏览器文档使用哪种 HTML 或者 XHTML 规范。</p>\n<p>DTD(Document Type Definition) 声明以 <code>&lt;!DOCTYPE&gt;</code> 开始，不区分大小写，前面没有任何内容，如果有其他内容(空格除外)会使浏览器在 IE 下开启怪异模式(quirks mode)渲染网页。公共 DTD，名称格式为<code>注册//组织//类型 标签//语言</code>,<code>注册</code>指组织是否由国际标准化组织(ISO)注册，<code>+</code>表示是，<code>-</code>表示不是。<code>组织</code>即组织名称，如：W3C。<code>类型</code>一般是 DTD。<code>标签</code>是指定公开文本描述，即对所引用的公开文本的唯一描述性名称，后面可附带版本号。最后<code>语言</code>是 DTD 语言的 ISO 639 语言标识符，如：EN 表示英文，ZH 表示中文。XHTML 1.0 可声明三种 DTD 类型。分别表示严格版本，过渡版本，以及基于框架的 HTML 文档。</p>\n<ul>\n<li><p>HTML 4.01 strict</p>\n<pre><code>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01//EN&quot; &quot;http://www.w3.org/TR/html4/strict.dtd&quot;&gt;\n</code></pre></li>\n<li><p>HTML 4.01 Transitional</p>\n<pre><code>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;\n</code></pre></li>\n<li><p>HTML 4.01 Frameset</p>\n<pre><code>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Frameset//EN&quot; &quot;http://www.w3.org/TR/html4/frameset.dtd&quot;&gt;\n</code></pre></li>\n<li><p>最新 HTML5 推出更加简洁的书写，它向前向后兼容，推荐使用。</p>\n<pre><code>&lt;!doctype html&gt;\n</code></pre></li>\n</ul>\n<p>在 HTML中 <code>doctype</code> 有两个主要目的。</p>\n<ul>\n<li><p>对文档进行有效性验证。</p>\n<p> 它告诉用户代理和校验器这个文档是按照什么 DTD 写的。这个动作是被动的，每次页面加载时，浏览器并不会下载 DTD 并检查合法性，只有当手动校验页面时才启用。</p>\n</li>\n<li><p>决定浏览器的呈现模式</p>\n<p>  对于实际操作，通知浏览器读取文档时用哪种解析算法。如果没有写，则浏览器则根据自身的规则对代码进行解析，可能会严重影响 html 排版布局。浏览器有三种方式解析 HTML 文档。</p>\n<ul>\n<li>非怪异（标准）模式</li>\n<li>怪异模式</li>\n<li>部分怪异（近乎标准）模式<br>关于IE浏览器的文档模式，浏览器模式，严格模式，怪异模式，DOCTYPE 标签，可详细阅读<a href=\"http://padding.me/blog/2014/07/04/mode-or-standard/\">模式？标准！</a>的内容。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"charset\"><a href=\"#charset\" class=\"headerlink\" title=\"charset\"></a>charset</h3><p>声明文档使用的字符编码，</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"utf-8\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>html5 之前网页中会这样写：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Content-Type\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"text/html; charset=utf-8\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>这两个是等效的，具体可移步阅读：<a href=\"http://stackoverflow.com/questions/4696499/meta-charset-utf-8-vs-meta-http-equiv-content-type\" target=\"_blank\" rel=\"external\"><code>&lt;meta charset=&#39;utf-8&#39;&gt;</code> vs <code>&lt;meta http-equiv=&#39;Content-Type&#39;&gt;</code></a>，所以建议使用较短的，易于记忆。</p>\n<h3 id=\"lang属性\"><a href=\"#lang属性\" class=\"headerlink\" title=\"lang属性\"></a>lang属性</h3><p>简体中文</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"zh-cmn-Hans\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>繁体中文</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"zh-cmn-Hant\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>为什么 <code>lang=&quot;zh-cmn-Hans&quot;</code> 而不是我们通常写的 <code>lang=&quot;zh-CN&quot;</code> 呢，请移步阅读: <a href=\"http://zhi.hu/XyIa\" target=\"_blank\" rel=\"external\">页头部的声明应该是用 lang=”zh” 还是 lang=”zh-cn”</a>。</p>\n<h3 id=\"优先使用-IE-最新版本和-Chrome\"><a href=\"#优先使用-IE-最新版本和-Chrome\" class=\"headerlink\" title=\"优先使用 IE 最新版本和 Chrome\"></a>优先使用 IE 最新版本和 Chrome</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"IE=edge,chrome=1\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"360-使用Google-Chrome-Frame\"><a href=\"#360-使用Google-Chrome-Frame\" class=\"headerlink\" title=\"360 使用Google Chrome Frame\"></a>360 使用Google Chrome Frame</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"renderer\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"webkit\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>360 浏览器就会在读取到这个标签后，立即切换对应的极速核。<br>另外为了保险起见再加入</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"IE=Edge,chrome=1\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>这样写可以达到的效果是如果安装了 Google Chrome Frame，则使用 GCF 来渲染页面，如果没有安装 GCF，则使用最高版本的 IE 内核进行渲染。</p>\n<p>相关链接：<a href=\"http://se.360.cn/v6/help/meta.html\" target=\"_blank\" rel=\"external\">浏览器内核控制 Meta 标签说明文档</a></p>\n<h3 id=\"百度禁止转码\"><a href=\"#百度禁止转码\" class=\"headerlink\" title=\"百度禁止转码\"></a>百度禁止转码</h3><p>通过百度手机打开网页时，百度可能会对你的网页进行转码，脱下你的衣服，往你的身上贴狗皮膏药的广告，为此可在 head 内添加</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Cache-Control\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"no-siteapp\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n<p>相关链接：<a href=\"http://m.baidu.com/pub/help.php?pn=22&amp;ssid=0&amp;from=844b&amp;bd_page_type=1\" target=\"_blank\" rel=\"external\">SiteApp 转码声明</a></p>\n<h3 id=\"SEO-优化部分\"><a href=\"#SEO-优化部分\" class=\"headerlink\" title=\"SEO 优化部分\"></a>SEO 优化部分</h3><ul>\n<li><p>页面标题<code>&lt;title&gt;</code>标签(head 头部必须)</p>\n<pre><code>&lt;title&gt;your title&lt;/title&gt;\n</code></pre></li>\n<li><p>页面关键词 keywords</p>\n<pre><code>&lt;meta name=&quot;keywords&quot; content=&quot;your keywords&quot;&gt;\n</code></pre></li>\n<li><p>页面描述内容 description</p>\n<pre><code>&lt;meta name=&quot;description&quot; content=&quot;your description&quot;&gt;\n</code></pre></li>\n<li><p>定义网页作者 author</p>\n<pre><code>&lt;meta name=&quot;author&quot; content=&quot;author,email address&quot;&gt;\n</code></pre></li>\n<li><p>定义网页搜索引擎索引方式，robotterms 是一组使用英文逗号「,」分割的值，通常有如下几种取值：none，noindex，nofollow，all，index和follow。</p>\n<pre><code>&lt;meta name=&quot;robots&quot; content=&quot;index,follow&quot;&gt;\n</code></pre></li>\n</ul>\n<p>相关链接：<a href=\"http://msdn.microsoft.com/zh-cn/library/ff724037\\(v=expression.40\\\" target=\"_blank\" rel=\"external\">WEB1038 - <meta name=\"robots\"> 标记包含无效的值</a>.aspx)</p>\n<h3 id=\"viewport\"><a href=\"#viewport\" class=\"headerlink\" title=\"viewport\"></a>viewport</h3><p><code>viewport</code> 可以让布局在移动浏览器上显示的更好。<br>通常会写</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><code>width=device-width</code> 会导致 iPhone 5 添加到主屏后以 WebApp 全屏模式打开页面时出现黑边(<a href=\"http://bigc.at/ios-webapp-viewport-meta.orz\" target=\"_blank\" rel=\"external\">http://bigc.at/ios-webapp-viewport-meta.orz</a>)</p>\n<p>content 参数：</p>\n<ul>\n<li>width viewport 宽度(数值/device-width)</li>\n<li>height viewport 高度(数值/device-height)</li>\n<li>initial-scale 初始缩放比例</li>\n<li>maximum-scale 最大缩放比例</li>\n<li>minimum-scale 最小缩放比例</li>\n<li>user-scalable 是否允许用户缩放(yes/no)</li>\n<li><p>minimal-ui iOS 7.1 beta 2 中新增属性，可以在页面加载时最小化上下状态栏。这是一个布尔值，可以直接这样写：</p>\n<pre><code>&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1, minimal-ui&quot;&gt;\n</code></pre></li>\n</ul>\n<p>而如果你的网站不是响应式的，请不要使用 initial-scale 或者禁用缩放。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width,user-scalable=yes\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>相关链接：<a href=\"http://www.qianduan.net/non-responsive-design-viewport.html\" target=\"_blank\" rel=\"external\">非响应式设计的viewport</a></p>\n<p>适配 iPhone 6 和 iPhone 6plus 则需要写：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=375\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=414\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>大部分 4.7~5 寸的安卓设备的 viewport 宽设为 360px，iPhone 6 上却是 375px，大部分 5.5 寸安卓机器（比如说三星 Note）的 viewport 宽为 400，iPhone 6 plus 上是 414px。</p>\n<h3 id=\"ios-设备\"><a href=\"#ios-设备\" class=\"headerlink\" title=\"ios 设备\"></a>ios 设备</h3><p>添加到主屏后的标题（iOS 6 新增）</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"apple-mobile-web-app-title\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"标题\"</span>&gt;</span> <span class=\"comment\">&lt;!-- 添加到主屏后的标题（iOS 6 新增） --&gt;</span></span><br></pre></td></tr></table></figure>\n<p>是否启用 WebApp 全屏模式</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"apple-mobile-web-app-capable\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"yes\"</span> /&gt;</span> <span class=\"comment\">&lt;!-- 是否启用 WebApp 全屏模式 --&gt;</span></span><br></pre></td></tr></table></figure>\n<p>设置状态栏的背景颜色</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"apple-mobile-web-app-status-bar-style\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"black-translucent\"</span> /&gt;</span> <span class=\"comment\">&lt;!-- 设置状态栏的背景颜色，只有在 `\"apple-mobile-web-app-capable\" content=\"yes\"` 时生效 --&gt;</span></span><br></pre></td></tr></table></figure>\n<p>只有在 “apple-mobile-web-app-capable” content=”yes” 时生效</p>\n<p>content 参数：</p>\n<ul>\n<li>default 默认值。</li>\n<li>black 状态栏背景是黑色。</li>\n<li>black-translucent 状态栏背景是黑色半透明。<br>如果设置为 default 或 black ,网页内容从状态栏底部开始。<br>如果设置为 black-translucent ,网页内容充满整个屏幕，顶部会被状态栏遮挡。</li>\n</ul>\n<p>禁止数字识自动别为电话号码</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"format-detection\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"telephone=no\"</span> /&gt;</span> <span class=\"comment\">&lt;!-- 禁止数字识自动别为电话号码 --&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"iOS-图标\"><a href=\"#iOS-图标\" class=\"headerlink\" title=\"iOS 图标\"></a>iOS 图标</h3><p>rel 参数：<br>apple-touch-icon 图片自动处理成圆角和高光等效果。<br>apple-touch-icon-precomposed 禁止系统自动添加效果，直接显示设计原图。<br>iPhone 和 iTouch，默认 57x57 像素，必须有</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"apple-touch-icon-precomposed\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/apple-touch-icon-57x57-precomposed.png\"</span> /&gt;</span> <span class=\"comment\">&lt;!-- iPhone 和 iTouch，默认 57x57 像素，必须有 --&gt;</span></span><br></pre></td></tr></table></figure>\n<p>iPad，72x72 像素，可以没有，但推荐有</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"apple-touch-icon-precomposed\"</span> <span class=\"attr\">sizes</span>=<span class=\"string\">\"72x72\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/apple-touch-icon-72x72-precomposed.png\"</span> /&gt;</span> <span class=\"comment\">&lt;!-- iPad，72x72 像素，可以没有，但推荐有 --&gt;</span></span><br></pre></td></tr></table></figure>\n<p>Retina iPhone 和 Retina iTouch，114x114 像素，可以没有，但推荐有</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"apple-touch-icon-precomposed\"</span> <span class=\"attr\">sizes</span>=<span class=\"string\">\"114x114\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/apple-touch-icon-114x114-precomposed.png\"</span> /&gt;</span> <span class=\"comment\">&lt;!-- Retina iPhone 和 Retina iTouch，114x114 像素，可以没有，但推荐有 --&gt;</span></span><br></pre></td></tr></table></figure>\n<p>Retina iPad，144x144 像素，可以没有，但推荐有</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"apple-touch-icon-precomposed\"</span> <span class=\"attr\">sizes</span>=<span class=\"string\">\"144x144\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/apple-touch-icon-144x144-precomposed.png\"</span> /&gt;</span> <span class=\"comment\">&lt;!-- Retina iPad，144x144 像素，可以没有，但推荐有 --&gt;</span></span><br></pre></td></tr></table></figure>\n<p>IOS 图标大小在iPhone 6 plus上是180×180，iPhone 6 是120x120。<br>适配iPhone 6 plus，则需要在<head>中加上这段</head></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"apple-touch-icon-precomposed\"</span> <span class=\"attr\">sizes</span>=<span class=\"string\">\"180x180\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"retinahd_icon.png\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>###iOS 启动画面</p>\n<p>官方文档：<a href=\"https://developer.apple.com/library/ios/qa/qa1686/_index.html\" target=\"_blank\" rel=\"external\">https://developer.apple.com/library/ios/qa/qa1686/_index.html</a><br>参考文章：<a href=\"http://wxd.ctrip.com/blog/2013/09/ios7-hig-24/\" target=\"_blank\" rel=\"external\">http://wxd.ctrip.com/blog/2013/09/ios7-hig-24/</a></p>\n<p>iPad 的启动画面是不包括状态栏区域的。</p>\n<p>iPad 竖屏 768 x 1004（标准分辨率）</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"apple-touch-startup-image\"</span> <span class=\"attr\">sizes</span>=<span class=\"string\">\"768x1004\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/splash-screen-768x1004.png\"</span> /&gt;</span> <span class=\"comment\">&lt;!-- iPad 竖屏 768 x 1004（标准分辨率） --&gt;</span></span><br></pre></td></tr></table></figure>\n<p>iPad 竖屏 1536x2008（Retina）</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"apple-touch-startup-image\"</span> <span class=\"attr\">sizes</span>=<span class=\"string\">\"1536x2008\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/splash-screen-1536x2008.png\"</span> /&gt;</span> <span class=\"comment\">&lt;!-- iPad 竖屏 1536x2008（Retina） --&gt;</span></span><br></pre></td></tr></table></figure>\n<p>iPad 横屏 1024x748（标准分辨率）</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"apple-touch-startup-image\"</span> <span class=\"attr\">sizes</span>=<span class=\"string\">\"1024x748\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/Default-Portrait-1024x748.png\"</span> /&gt;</span> <span class=\"comment\">&lt;!-- iPad 横屏 1024x748（标准分辨率） --&gt;</span></span><br></pre></td></tr></table></figure>\n<p>iPad 横屏 2048x1496（Retina）</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"apple-touch-startup-image\"</span> <span class=\"attr\">sizes</span>=<span class=\"string\">\"2048x1496\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/splash-screen-2048x1496.png\"</span> /&gt;</span> <span class=\"comment\">&lt;!-- iPad 横屏 2048x1496（Retina） --&gt;</span></span><br></pre></td></tr></table></figure>\n<p>iPhone 和 iPod touch 的启动画面是包含状态栏区域的。</p>\n<p>iPhone/iPod Touch 竖屏 320x480 (标准分辨率)</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"apple-touch-startup-image\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/splash-screen-320x480.png\"</span> /&gt;</span> <span class=\"comment\">&lt;!-- iPhone/iPod Touch 竖屏 320x480 (标准分辨率) --&gt;</span></span><br></pre></td></tr></table></figure>\n<p>iPhone/iPod Touch 竖屏 640x960 (Retina)</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"apple-touch-startup-image\"</span> <span class=\"attr\">sizes</span>=<span class=\"string\">\"640x960\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/splash-screen-640x960.png\"</span> /&gt;</span> <span class=\"comment\">&lt;!-- iPhone/iPod Touch 竖屏 640x960 (Retina) --&gt;</span></span><br></pre></td></tr></table></figure>\n<p>iPhone 5/iPod Touch 5 竖屏 640x1136 (Retina)</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"apple-touch-startup-image\"</span> <span class=\"attr\">sizes</span>=<span class=\"string\">\"640x1136\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/splash-screen-640x1136.png\"</span> /&gt;</span> <span class=\"comment\">&lt;!-- iPhone 5/iPod Touch 5 竖屏 640x1136 (Retina) --&gt;</span></span><br></pre></td></tr></table></figure>\n<p>添加智能 App 广告条 Smart App Banner（iOS 6+ Safari）</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"apple-itunes-app\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"app-id=myAppStoreID, affiliate-data=myAffiliateData, app-argument=myURL\"</span>&gt;</span> <span class=\"comment\">&lt;!-- 添加智能 App 广告条 Smart App Banner（iOS 6+ Safari） --&gt;</span></span><br></pre></td></tr></table></figure>\n<p>iPhone 6对应的图片大小是750×1294，iPhone 6 Plus 对应的是1242×2148 。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"apple-touch-startup-image\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"launch6.png\"</span> <span class=\"attr\">media</span>=<span class=\"string\">\"(device-width: 375px)\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"apple-touch-startup-image\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"launch6plus.png\"</span> <span class=\"attr\">media</span>=<span class=\"string\">\"(device-width: 414px)\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Windows-8\"><a href=\"#Windows-8\" class=\"headerlink\" title=\"Windows 8\"></a>Windows 8</h3><p>Windows 8 磁贴颜色</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"msapplication-TileColor\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"#000\"</span>/&gt;</span> <span class=\"comment\">&lt;!-- Windows 8 磁贴颜色 --&gt;</span></span><br></pre></td></tr></table></figure>\n<p>Windows 8 磁贴图标</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"msapplication-TileImage\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"icon.png\"</span>/&gt;</span> <span class=\"comment\">&lt;!-- Windows 8 磁贴图标 --&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"rss订阅\"><a href=\"#rss订阅\" class=\"headerlink\" title=\"rss订阅\"></a>rss订阅</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"alternate\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"application/rss+xml\"</span> <span class=\"attr\">title</span>=<span class=\"string\">\"RSS\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/rss.xml\"</span> /&gt;</span> <span class=\"comment\">&lt;!-- 添加 RSS 订阅 --&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"favicon-icon\"><a href=\"#favicon-icon\" class=\"headerlink\" title=\"favicon icon\"></a>favicon icon</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"shortcut icon\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"image/ico\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/favicon.ico\"</span> /&gt;</span> <span class=\"comment\">&lt;!-- 添加 favicon icon --&gt;</span></span><br></pre></td></tr></table></figure>\n<p>比较详细的 favicon 介绍可参考<a href=\"https://github.com/audreyr/favicon-cheat-sheet\" target=\"_blank\" rel=\"external\">https://github.com/audreyr/favicon-cheat-sheet</a></p>\n<h3 id=\"移动端的meta\"><a href=\"#移动端的meta\" class=\"headerlink\" title=\"移动端的meta\"></a>移动端的meta</h3><pre><code>&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1, user-scalable=no&quot; /&gt;\n&lt;meta name=&quot;apple-mobile-web-app-capable&quot; content=&quot;yes&quot; /&gt;\n&lt;meta name=&quot;apple-mobile-web-app-status-bar-style&quot; content=&quot;black&quot; /&gt;\n&lt;meta name=&quot;format-detection&quot;content=&quot;telephone=no, email=no&quot; /&gt;\n&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1, user-scalable=no&quot; /&gt;\n&lt;meta name=&quot;apple-mobile-web-app-capable&quot; content=&quot;yes&quot; /&gt;&lt;!-- 删除苹果默认的工具栏和菜单栏 --&gt;\n&lt;meta name=&quot;apple-mobile-web-app-status-bar-style&quot; content=&quot;black&quot; /&gt;&lt;!-- 设置苹果工具栏颜色 --&gt;\n&lt;meta name=&quot;format-detection&quot; content=&quot;telphone=no, email=no&quot; /&gt;&lt;!-- 忽略页面中的数字识别为电话，忽略email识别 --&gt;\n&lt;!-- 启用360浏览器的极速模式(webkit) --&gt;\n&lt;meta name=&quot;renderer&quot; content=&quot;webkit&quot;&gt;\n&lt;!-- 避免IE使用兼容模式 --&gt;\n&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;\n&lt;!-- 针对手持设备优化，主要是针对一些老的不识别viewport的浏览器，比如黑莓 --&gt;\n&lt;meta name=&quot;HandheldFriendly&quot; content=&quot;true&quot;&gt;\n&lt;!-- 微软的老式浏览器 --&gt;\n&lt;meta name=&quot;MobileOptimized&quot; content=&quot;320&quot;&gt;\n&lt;!-- uc强制竖屏 --&gt;\n&lt;meta name=&quot;screen-orientation&quot; content=&quot;portrait&quot;&gt;\n&lt;!-- QQ强制竖屏 --&gt;\n&lt;meta name=&quot;x5-orientation&quot; content=&quot;portrait&quot;&gt;\n&lt;!-- UC强制全屏 --&gt;\n&lt;meta name=&quot;full-screen&quot; content=&quot;yes&quot;&gt;\n&lt;!-- QQ强制全屏 --&gt;\n&lt;meta name=&quot;x5-fullscreen&quot; content=&quot;true&quot;&gt;\n&lt;!-- UC应用模式 --&gt;\n&lt;meta name=&quot;browsermode&quot; content=&quot;application&quot;&gt;\n&lt;!-- QQ应用模式 --&gt;\n&lt;meta name=&quot;x5-page-mode&quot; content=&quot;app&quot;&gt;\n&lt;!-- windows phone 点击无高光 --&gt;\n&lt;meta name=&quot;msapplication-tap-highlight&quot; content=&quot;no&quot;&gt;\n&lt;!-- 适应移动端end --&gt;\n</code></pre><p>这是来自 <a href=\"http://weibo.com/toooobug\" target=\"_blank\" rel=\"external\">toobug</a> 的分享总结。</p>\n<p>更多的 meta 标签参考</p>\n<ul>\n<li><a href=\"http://code.lancepollard.com/complete-list-of-html-meta-tags/\" target=\"_blank\" rel=\"external\">COMPLETE LIST OF HTML META TAGS</a></li>\n<li><a href=\"http://www.iacquire.com/blog/18-meta-tags-every-webpage-should-have-in-2013\" target=\"_blank\" rel=\"external\">18 Meta Tags Every Webpage Should Have in 2013</a></li>\n</ul>\n<p>参考文章：</p>\n<ul>\n<li><a href=\"https://github.com/yisibl/blog/issues/1\" target=\"_blank\" rel=\"external\">常用的 HTML 头部标签</a></li>\n<li><a href=\"https://gist.github.com/paddingme/6182708733917ae36331\" target=\"_blank\" rel=\"external\">html5_header</a></li>\n<li><a href=\"http://amazeui.org/css/\" target=\"_blank\" rel=\"external\">amazeui css</a></li>\n<li><a href=\"http://www.douban.com/note/170560091/\" target=\"_blank\" rel=\"external\">DOCTYPE</a></li>\n<li><a href=\"http://www.uisdc.com/ios8-ten-new-feature\" target=\"_blank\" rel=\"external\">WEB 工程师和设计师必学的 10 个 IOS 8 新鲜改变</a></li>\n</ul>\n"},{"title":"CSS中的值和单位、字体以及文本属性","url":"http://padding.me/blog/2014/10/30/CSS中的值和单位、字体以及文本属性/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-HTML-CSS\" target=\"_blank\" rel=\"external\">Learning-HTML-CSS</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-HTML-CSS/issues/10\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-HTML-CSS/issues/10</a></p>\n<p>这几天在学习<a href=\"http://www.amazon.cn/CSS%E6%9D%83%E5%A8%81%E6%8C%87%E5%8D%97-%E8%BF%88%E8%80%B6/dp/B0011F5SIC/ref=sr_1_1?ie=UTF8&amp;qid=1399054787&amp;sr=8-1&amp;keywords=css+%E6%9D%83%E5%A8%81%E6%8C%87%E5%8D%97\" target=\"_blank\" rel=\"external\">CSS权威指南</a>,学习了CSS中的值和单位、字体以及文本属性，这里做一个相关总结，主要总结我认为重要的知识点。</p>\n<h2 id=\"1-值和单位\"><a href=\"#1-值和单位\" class=\"headerlink\" title=\"1. 值和单位\"></a>1. 值和单位</h2><p>CSS里的值和单位，主要分为绝对长度单位：<code>in</code>(英寸)、<code>cm</code>(厘米)<code>mm</code>(毫米)、<code>pt</code>(点，标准印刷度量单位)、<code>pc</code>(派卡，印刷术语),以及相对长度单位：<code>em</code>,<code>ex</code>,<code>px</code>。</p>\n<p>我们主要使用<code>em</code>和<code>px</code>，<code>ex</code>指所用字体中小写x的高度,我们无情得忽视它。“相对”相对“绝对”的好处我们已然了解，例如url链接，我们不用关注外部url地址如何变化，相对路径没问题，我们便可以各种超链接。这里的相对长度单位也是同样的道理。<code>em</code>相对于给定字体的font-size值。现代浏览器字体默认大小为16个像素。如果一个元素的font-size为14px,那么对于该元素，1em=14px。这个值可能会随元素的不同而不同，另在设置字体的大小的时，em的值会相对于父元素的字体大小改变。总得来说，就是<strong>em依赖于最近的字体大小</strong>(不要惯性的以为依赖于原先body设定的或者浏览器默认的值。)</p>\n<p>而<code>px</code>就是像素，对于显示器屏幕分辨率而言。当然<code>%</code>同<code>em</code>。（注意理解:<code>%</code>这个值可以是任意的：可能是同一个元素另一个属性的值，也可以是从父元素继承的一个值，或者是祖先元素的一个值。）</p>\n<p>至于要用<code>px</code>还是<code>em</code>，老版本的IE浏览器不支持像素的缩放，所以用<code>px</code>取代<code>em</code>，另使用em可以省去很多冗余的工作，例如设置了body里的字体大小，后面的元素内的字体大小全部设置为em大小，这样改动的话只需要改动body里的字体大小，而不用每个元素改动px大小，再次提醒<strong>em依赖于最近的字体大小</strong>。将行距(line-height)，和纵向高度的单位都用em。保证缩放时候的整体性。px常使用在图片大小上。</p>\n<p><a href=\"http://blog.alphatr.com/em-and-px-in-css.html\" target=\"_blank\" rel=\"external\">这篇文章</a>也有一定参考意义，可以一看。</p>\n<h2 id=\"2-颜色\"><a href=\"#2-颜色\" class=\"headerlink\" title=\"2. 颜色\"></a>2. 颜色</h2><p>CSS中颜色取值主要由以下几种方法：</p>\n<ul>\n<li>CSS命名颜色。在CSS2.1中，CSS规范定义了17个颜色名。</li>\n<li>用RGB指定颜色。可以使用0~255取值或者0%~100%。</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">h1 &#123;color:rgb(100%,50%,50%);&#125;</span><br><span class=\"line\">h2 &#123;color:rgb(255,132,123);&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>十六进制的RGB颜色。将三个介于00-FF的十六进制数连起来，就可以设置一种颜色。<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">h1 &#123;</span><br><span class=\"line\">\tcolor:#FF0000;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>可以简写为<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">h1&#123;</span><br><span class=\"line\">\tcolor:#F00;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>浏览器会取每一位，并将其复制成两位。</p>\n<ul>\n<li><p>RGBA颜色表示。在RGB的基础上加了一个Alpha通道.它规定了对象的不透明度。lpha 参数是介于 0.0（完全透明）与 1.0（完全不透明）的数字。浏览器支持：IE9+、Firefox 3+、Chrome、Safari 以及 Opera 10+。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p &#123;</span><br><span class=\"line\"> background-color:rgba(255,0,0,0.5);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>HSL颜色和HSLA不做赘述。</p>\n</li>\n</ul>\n<h2 id=\"3-字体\"><a href=\"#3-字体\" class=\"headerlink\" title=\"3. 字体\"></a>3. 字体</h2><p>CSS通常使用<code>font-family</code>定义使用什么字体，<code>font-size</code>定义字体大小，<code>font-style</code>定义斜体字，<br><code>font-variant</code>定义小型的大写字体，<code>font-weight</code>定义字体的粗细，<code>font</code>统一定义字体的所有属性。</p>\n<h4 id=\"font-family\"><a href=\"#font-family\" class=\"headerlink\" title=\"font-family\"></a>font-family</h4><p>   font-family取值: <code>[[ &lt;family-name&gt; | &lt;generic-family&gt; ] [, &lt;family-name&gt;| &lt;generic-family&gt;]* ] | inherit</code></p>\n<p> family-name:指一系列字体名称<br> 而generic-family是指一般性字体名称即以下五种通用字体系列。<br>CSS定义了五种通用字体系列（font-family）：</p>\n<ul>\n<li>Serif字体——这些字体成比例，而且有上下短线,Sefit字体包括Times、Georigia和New Century Schoolbook等。</li>\n<li>Sans-serif字体——字体成比例，但是没有上下短线。Sans-sefit字体包括Geneva,Verdana,Arial和Univers等。</li>\n<li>Monospace字体——不成比例（模拟打印设备打出的文本），每个字符的<strong>宽度</strong>完全相同,上下短线可能有可能无。monospace字体包括Courier、Courier New、Andale Mono 等。</li>\n<li>Cusrive字体——模仿人的手写体。包括Zapf Chancery、Anthou、Comic Sana等。</li>\n<li>Fantasy字体——在上述四种字体之外的，不能用任何特征来定义的字体包括：Wesrern、Woodblock和Kinggong等。</li>\n</ul>\n<p>说明：</p>\n<ul>\n<li>想要显示的字体一定要是你计算机中有的,否则不会按照你期望的显示.上面的第三个示例说明如果有宋体就显示宋体否则显示Arial字体</li>\n<li>[字体名1 , 字体名2 , *],其中的星号*,表示可以继续增加字体名.如果用户计算机没有安装,你定义的字体名1,系统会自动使用字体名2,如果没有字体名2,系统就再查找字体名3,如果都没有,将使用系统的默认字体</li>\n<li>family-name代表系列性字体的名称,比如可以使用逗号分开,的方式取一系列的值(“Times”,”Arial”,”Courier”等)</li>\n<li>generic-family代表一般性字体名称,每个名称都可以代表一系列的字体,比如”serif”, “sans-serif”, “cursive”, “fantasy”, “monospace”</li>\n<li>用逗号来分隔每一个值,最好在最后有一个基本字体(generic-family)</li>\n<li>使用中文字体或者英文名称超过一个单词的字体时要使用”(冒号)扩起来,比如”Times News Roman”,”宋体”</li>\n<li>现代浏览器字体默认的设置为“宋体/simsun字体 16像素”</li>\n</ul>\n<p>(留坑：<a href=\"http://padding.me\">paddingme</a>博客字体默认设置为small,而<a href=\"http://www.zaibc.com/\" target=\"_blank\" rel=\"external\">http://www.zaibc.com/</a>的字体设置为<br><code>body {\nfont: 13px Tahoma, Helvetica, Arial, &quot;\\5b8b\\4f53&quot;, sans-serif;\n}</code>) 很奇怪在我电脑上(windows7,chrome33.0.1750.146 )显示正常，而在同学的电脑上(mac，chrome版本未知）我博客的字体竟然比zaibc的字体小)理论上，small为13px，为什么不一样大呢？难道是浏览器渲染的问题？等我入手大MAC再做详细对比研究。当然HTML的big,small标签已经被w3c抛弃)</p>\n<p>另关于默认字体可以查阅<a href=\"http://saibeixuer.blog.163.com/blog/static/74770377201075111628356/\" target=\"_blank\" rel=\"external\">女施主的博文中</a>详细解析了淘宝的字体，可以围观，做深入了解。还有这位<a href=\"http://www.iyunlu.com/view/css-xhtml/default-web-font-style-1.html\" target=\"_blank\" rel=\"external\">男施主的博文</a>和<a href=\"http://iyunlu.com/view/css-xhtml/default-web-font-style-2html.html\" target=\"_blank\" rel=\"external\">这一篇博文</a>,玉伯的文章找不到了很遗憾。张鑫旭的<a href=\"http://www.zhangxinxu.com/wordpress/?p=874\" target=\"_blank\" rel=\"external\">这篇博客</a>也相当有趣，建议观看，提供一个新的视角关于字体设置。还强烈推荐<a href=\"http://lepture.com/zh/2014/chinese-fonts-and-yue-css\" target=\"_blank\" rel=\"external\">这篇博客</a>，博主对中文字体确有研究，所以他的网站<a href=\"http://yuehu.io\" target=\"_blank\" rel=\"external\">阅乎</a>阅读体验非常好。<strong>字体真是一门大学问!</strong></p>\n<h2 id=\"4-文本属性\"><a href=\"#4-文本属性\" class=\"headerlink\" title=\"4. 文本属性\"></a>4. 文本属性</h2><p><br></p>\n<p>参考文章：</p>\n<ul>\n<li><a href=\"http://www.1z1b.com/one-blog-a-week/px-em-pt/#comment-17058\" target=\"_blank\" rel=\"external\">http://www.1z1b.com/one-blog-a-week/px-em-pt/#comment-17058</a></li>\n<li><a href=\"http://www.dreamdu.com/css/css_colors/\" target=\"_blank\" rel=\"external\">http://www.dreamdu.com/css/css_colors/</a></li>\n<li><a href=\"http://www.w3school.com.cn/cssref/css_colors_legal.asp\" target=\"_blank\" rel=\"external\">http://www.w3school.com.cn/cssref/css_colors_legal.asp</a></li>\n</ul>\n"},{"title":"CSS中的float标签","url":"http://padding.me/blog/2014/10/30/CSS中的float标签/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-HTML-CSS\" target=\"_blank\" rel=\"external\">Learning-HTML-CSS</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-HTML-CSS/issues/6\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-HTML-CSS/issues/6</a></p>\n<p>CSS中允许浮动任何元素，浮动是指元素浮动在左边或者右边，而使其他的内容“围绕”这个元素。</p>\n<blockquote>\n<p>##float<br>值：left|right|none|inherit</p>\n</blockquote>\n<p>例如把一个图像浮动到左边，<br><code>&lt;img src=&quot;b4.gif&quot; style=&quot;float:left;&quot; alt=&quot;b4&quot;&gt;</code></p>\n<p>对于浮动元素有几点要记住：</p>\n<ol>\n<li>会以某种方式将浮动元素从文档的正常流中删除，但是一个元素浮动，其他内容会”围绕“该元素。</li>\n<li><strong>浮动元素的外边距不会合并！</strong></li>\n</ol>\n<p>浮动元素的包含块是其最近的块级祖先元素。此外，<strong>浮动元素会生成一个块级框，而不论这个元素本身是什么。</strong></p>\n<p>有一系列规则控制着浮动元素的摆放：</p>\n<ol>\n<li>浮动元素的左（或右）外边界不能超出其包含块的左（或右）内边界。</li>\n<li>浮动元素的左（或右）外边界必须是源文档中之前出现的左浮动（或右浮动）元素的右（左）外边界，除非后出现浮动元素的顶端在先出现浮动元素的低端下面。（不必担心一个浮动元素与另一个浮动元素重叠）。</li>\n<li>左浮动元素的右外边界不会在其右边右浮动元素的左外边界的右边。（防止浮动元素相互重叠）。</li>\n<li>一个浮动元素的顶端不能比其父元素的内顶端更高。如果一个浮动元素在两个合并外边距之间，放置这个浮动元素时就好像在两个元素之间有一个块级父元素。</li>\n<li>浮动元素的顶端不能<strong>比之前所有浮动元素或块级元素的顶端</strong>更高。</li>\n<li>如果源文档中一个浮动元素之前出现另一个元素，浮动元素的顶端不能比包含该元素所生成框的任何行框的顶端更高。</li>\n<li>左（或右）浮动元素的左边（或右边）有另一个浮动元素，前者的右外边界不能在其包含的右（左）边界的右边（左边）。（如果没有足够的空间，浮动元素会被挤到一个新的”行“上）。</li>\n<li>浮动元素必须尽可能高地放置。</li>\n<li>左浮动元素必须向左尽可能远，右浮动元素必须向右尽可能远。位置越高，就会向右或向左浮动得越远。</li>\n</ol>\n<p>如上这些浮动规则只处理了浮动元素和其父元素的左、右和上边界，而未涉及下边界。CSS2.1规定，浮动元素会延伸，从而包含其所有后代浮动元素。故通过将父元素设置为浮动元素，就可以把浮动元素包含在其父元素内。</p>\n<p>负外边距可能导致浮动元素移到其父元素的外面。还有一种方法，让浮动元素比其父元素更宽。</p>\n<p>若一个浮动元素与正常流中的内容发生重叠：</p>\n<ol>\n<li>行内框与一个浮动元素重叠时，其边框、背景和内容都在该浮动元素”之上“显示。</li>\n<li>块框与一个浮动元素重叠时，其边框和背景在该浮动元素”之下“显示，而内容在浮动元素”之上“显示。</li>\n</ol>\n<p>##清除浮动##</p>\n<blockquote>\n<p>##clear<br>值：left|right|both|none|inherit<br>应用于块级元素</p>\n</blockquote>\n<p>在google查询float标签相关文章发现下面两篇文章特别有意思：<br><a href=\"http://www.zhangxinxu.com/wordpress/?p=583\" target=\"_blank\" rel=\"external\">CSS float浮动的深入研究、详解及拓展(一)</a>，<a href=\"http://www.zhangxinxu.com/wordpress/?p=594\" target=\"_blank\" rel=\"external\">CSS float浮动的深入研究、详解及拓展(二)</a>。</p>\n<p>总结下有如下可以学习的知识点。</p>\n<ol>\n<li>浮动的出现的意义：<strong>文字环绕图片</strong>。</li>\n<li><p>浮动的本质：”包裹和破坏“。</p>\n<ul>\n<li>”包裹“——浮动就是个<strong>带有方位的<code>display；inline-block</code>属性</strong>。<code>display:inline-block</code> 具有包裹的作用，元素被包裹之后其宽度自适应元素本身大小;<code>float:left</code>或者<code>float:right</code>某种程度上等价于<code>display:inline-block</code>，其唯一区别在于：<code>float</code>具有方向性,<code>display:inline-block</code>仅仅有一个水平方向排列，而<code>float</code>可以从左到右排列，还可以从右到左排列（很少用到，没有多大意义）。</li>\n<li>”破坏性“，如上所述，浮动的意义是<strong>让文字环绕图片</strong>，而这时由于<code>float</code><strong>破坏了正常的line boxes</strong>。</li>\n</ul>\n<p>例如在<code>&lt;q&gt;这只是一个普通的标签，这里有一个&lt;cite&gt;cite&lt;/cite&gt;标签&lt;/q&gt;</code>中有四种boxes<br>containing box-&gt;line boxes-&gt;inline boxes(包括匿名的，不会成块显示，而是排成一行)-&gt;content area<br>如图所示：<br><img alt=\"line boxes示意\" src=\"http://paddingme.qiniudn.com/float.png\"></p>\n</li>\n</ol>\n<p>CSS中关于高度,<a href=\"http://www.zhangxinxu.com/wordpress/?p=583\" target=\"_blank\" rel=\"external\">文中</a>也给出了很好的介意：</p>\n<blockquote>\n<p>在目前的CSS的世界中，所有的高度都是有两个CSS模型产生的，一个是box盒状模型，对应CSS为”height+padding+margin”，另外一个是line box模型，对应样式为”line-height”。前者的height属性分为明显的height值和隐藏的height值，所谓隐藏的height值是指图片的高度，一旦载入一张图片，其内在的height值就会起作用，即使您看不到”height”这个词。而后者针对于文字等这类inline boxes的元素（图片也属于inline boxes，但其height比line-height作用更凶猛，故其inline boxes高度等于其自身高度，对line-height无反应），inline boxes的高度直接受line-height控制（改变line-height文字拉开或重叠就是这个原因），而真正的高度表现则是由每行众多的inline boxes组成的line boxes（等于内部最高的inline box的高度），而这些line boxes的高度垂直堆叠形成了containing box的高度，也就是我们见到的div或是p标签之类的高度了。</p>\n</blockquote>\n<p>浮动破坏了图片的inline-box，导致文字和图片无法同行显示，脱离了原来的line-box链，也没有了高度（无inline-box高度-&gt;无line-box高度-无高度）而这些结果导致了文字环绕图片显示。<br><a href=\"http://image.zhangxinxu.com/flash/blog/201001/css_float_by_zhangxinxu.swf\" target=\"_blank\" rel=\"external\">http://image.zhangxinxu.com/flash/blog/201001/css_float_by_zhangxinxu.swf</a> 中有很容易理解的动画显示。</p>\n<p>“包裹与破坏”！包裹是让标签占据的空间水平收缩，破坏是破坏的inline box。inline boxes是高度形成的基础，浮动破坏了inline boxes也就没有高度可言了。真是由于浮动元素没有了inline boxes，没有了inline boxes高度，才能让其他inline boxes元素重新整合，环绕浮动元素排列。</p>\n<p>浮动定位于绝对定位的区别：绝对定位元素也具有包裹性，绝对定位的元素脱离了文档流而浮动元素仍然在文档流中，这造成的差异是：同处于文档流中的 文字不会与浮动元素造成重叠，而会与绝对定位元素重叠</p>\n<p>浮动使高度塌陷-&gt;清楚浮动！<br>塌陷原因：元素含有浮动属性-&gt;破坏inline-box高度-&gt;破坏line-box高度-&gt;无高度</p>\n<p>清除浮动：</p>\n<ol>\n<li><code>&lt;div style=&quot;clear:both;&quot;&gt;&lt;/div&gt;</code>:浪费一个div标签</li>\n<li><code>.fix{voerflow:hidden;zoom:1}</code>:overflow:hidden;如果里面的元素要是想来个margin负值定位或是负的绝对定位，则会直接被裁掉了，所以此方法有局限性的。</li>\n<li><code>.fix{zoom:1;}.fix:after{display:block; content:&#39;clear&#39;; clear:both; line-height:0; visibility:hidden;}</code></li>\n</ol>\n<p>以上皆来自张鑫旭-鑫空间-鑫生活<a href=\"http://www.zhangxinxu.com\" target=\"_blank\" rel=\"external\">http://www.zhangxinxu.com</a></p>\n"},{"title":"title属性 和 alt 属性","url":"http://padding.me/blog/2014/10/30/title属性 和 alt 属性/","content":"<p> 文章取自我的 Github  repos: <a href=\"https://github.com/paddingme/Learning-HTML-CSS\" target=\"_blank\" rel=\"external\">Learning-HTML-CSS</a>， 作者：<a href=\"http://padding.me/about.html\">@paddingme</a><br>原文链接：<a href=\"https://github.com/paddingme/Learning-HTML-CSS/issues/11\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Learning-HTML-CSS/issues/11</a></p>\n<p><code>title</code>的正确使用场景主要有以下四种：</p>\n<ul>\n<li>链接-描述目标信息</li>\n<li>图片-版权/描述</li>\n<li>引用-来源信息</li>\n<li>交互元素-操作指南</li>\n</ul>\n<p>而 <code>alt</code> 属性为不能显示图像、窗体或applets的用户代理（UA），alt属性用来指定替换文字。替换文字的语言由lang属性指定。Alt属性（注意是“属性”而不是“标签”）包括替换说明，对于图像和图像热点是必须的。它只能用在img、area和input元素中（包括applet元素）。对于input元素，alt属性意在用来替换提交按钮的图片。比如：<code>&lt;input type=&quot;image&quot; src=&quot;image.gif&quot; alt=&quot;Submit&quot; /&gt;</code>。对于那些装饰性的图片可以使用空的值（alt=””，引号中间没有空格）</p>\n<p>参考： <a href=\"http://www.junchenwu.com/2005/05/alttitle.html\" target=\"_blank\" rel=\"external\">alt属性和title属性</a></p>\n"},{"title":"web前端开发测验之HTML部分","url":"http://padding.me/blog/2014/10/04/front-end-web-development-quiz-html-part/","content":"<p>Tip：这是<a href=\"http://davidshariff.com/quiz/\" target=\"_blank\" rel=\"external\">http://davidshariff.com/quiz/</a>给出的web前端开发测试题,的HTML部分,我根据自己的理解给出的答案，欢迎拍砖，一起刷题。github 仓库地址请猛戳<a href=\"https://github.com/paddingme/Front-end-Web-Development-Interview-Question\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Front-end-Web-Development-Interview-Question</a>,欢迎一起玩耍，么么哒。</p>\n<ol>\n<li><p>Q: <code>&lt;keygen&gt;</code> 是正确的HTML5标签吗？</p>\n<p> A: 是。</p>\n<p> <code>&lt;keygen&gt;</code>标签规定用于表单的密钥对生成器字段。当提交表单时，私钥存储在本地，公钥发送到服务器。是HTML5 标签。</p>\n</li>\n<li><p>Q: <code>&lt;bdo&gt;</code> 标签是否可以改变文本方向？</p>\n<p> A: 可以。</p>\n<p> <bdo> 标签覆盖默认的文本方向。</bdo></p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;bdo dir=&quot;rtl&quot;&gt;Here is some text&lt;/bdo&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Q: 下列HTML代码是否正确？</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;figure&gt;</span><br><span class=\"line\">    &lt;img src=&quot;myimage.jpg&quot; alt=&quot;My image&quot;&gt;</span><br><span class=\"line\">    &lt;figcaption&gt;</span><br><span class=\"line\">        &lt;p&gt;This is my self portrait.&lt;/p&gt;</span><br><span class=\"line\">    &lt;/figcaption&gt;</span><br><span class=\"line\">&lt;/figure&gt;</span><br></pre></td></tr></table></figure>\n<p> A: 正确</p>\n<p>  <code>&lt;figure&gt;</code> 标签规定独立的流内容（图像、图表、照片、代码等等）。<code>figure</code> 元素的内容应该与主内容相关，但如果被删除，则不应对文档流产生影响。使用<code>&lt;figcaption&gt;</code>元素为<code>figure</code>添加标题（caption）。</p>\n</li>\n<li><p>Q: 哪种情况下应该使用<code>small</code>标签？当你想在<code>h1</code> 标题后创建副标题？还是当在<code>footer</code>里面增加版权信息？</p>\n<p> A: <code>small</code>标签一般使用场景是在版权信息和法律文本里使用，也可以在标题里使用标注附加信息（bootstrap中可见），但不可以用来创建副标题。</p>\n<blockquote>\n<p>The HTML Small Element (<code>&lt;small&gt;</code>) makes the text font size one size smaller (for example, from large to medium, or from small to x-small) down to the browser’s minimum font size.  In HTML5, this element is repurposed to represent side-comments and small print, including copyright and legal text, independent of its styled presentation.</p>\n</blockquote>\n</li>\n<li><p>Q: 在一个结构良好的web网页里，多个<code>h1</code>标签会不利于SEO吗？</p>\n<p> A: 不影响。</p>\n<blockquote>\n<p>According to Matt Cutts (lead of Google’s webspam team and the de facto expert on these things), using multiple <code>&lt;h1&gt;</code> tags is fine, as long as you’re not abusing it (like sticking your whole page in an <code>&lt;h1&gt;</code> and using CSS to style it back to normal size). That would likely have no effect, and might trigger a penalty, as it looks spammy.</p>\n<p>If you have multiple headings and it would be natural to use multiple <code>&lt;h1&gt;</code>‘s, then go for it.</p>\n</blockquote>\n<p> 摘自：<a href=\"http://www.quora.com/Does-using-multiple-h1-tags-on-a-page-affect-search-engine-rankings\" target=\"_blank\" rel=\"external\">http://www.quora.com/Does-using-multiple-h1-tags-on-a-page-affect-search-engine-rankings</a></p>\n</li>\n<li><p>Q: 如果你有一个搜索结果页面，你想高亮搜索的关键词。什么HTML 标签可以使用?</p>\n<p> A:<code>&lt;mark&gt;</code> 标签表现高亮文本。</p>\n<blockquote>\n<p>The HTML <code>&lt;mark&gt;</code> Element represents highlighted text, i.e., a run of text marked for reference purpose, due to its relevance in a particular context. For example it can be used in a page showing search results to highlight every instance of the searched for word.</p>\n</blockquote>\n</li>\n<li><p>Q: 下列代码中<code>scope</code> 属性是做什么的？</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;article&gt;</span><br><span class=\"line\">    &lt;h1&gt;Hello World&lt;/h1&gt;</span><br><span class=\"line\">    &lt;style scoped&gt;</span><br><span class=\"line\">        p &#123;</span><br><span class=\"line\">            color: #FF0;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &lt;/style&gt;</span><br><span class=\"line\">    &lt;p&gt;This is my text&lt;/p&gt;</span><br><span class=\"line\">&lt;/article&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;article&gt;</span><br><span class=\"line\">    &lt;h1&gt;This is awesome&lt;/h1&gt;</span><br><span class=\"line\">    &lt;p&gt;I am some other text&lt;/p&gt;</span><br><span class=\"line\">&lt;/article&gt;</span><br></pre></td></tr></table></figure>\n<p> A: <code>scoped</code> 属性是一个布尔属性。如果使用该属性，则样式仅仅应用到 style 元素的父元素及其子元素。</p>\n</li>\n<li><p>HTML5 支持块级超链接吗？例如：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;article&gt;</span><br><span class=\"line\">    &lt;a href=&quot;#&quot;&gt;</span><br><span class=\"line\">        &lt;h1&gt;Hello&lt;/h1&gt;</span><br><span class=\"line\">        &lt;p&gt;I am some text&lt;/p&gt;</span><br><span class=\"line\">    &lt;/a&gt;</span><br><span class=\"line\">&lt;/article&gt;</span><br></pre></td></tr></table></figure>\n<p> A: 支持。</p>\n<p> HTML5中<code>&lt;a&gt;</code>元素表现为一个超链接，支持任何行内元素和块级元素。</p>\n</li>\n<li><p>Q: 当下列的HTML代码加载时会触发新的HTTP请求吗？</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;img src=&quot;mypic.jpg&quot; style=&quot;visibility: hidden&quot; alt=&quot;My picture&quot;&gt;</span><br></pre></td></tr></table></figure>\n<p> A: 会哇</p>\n</li>\n<li><p>Q: 当下列的HTML代码加载时会触发新的HTTP请求吗？</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div style=&quot;display: none;&quot;&gt;</span><br><span class=\"line\">    &lt;img src=&quot;mypic.jpg&quot; alt=&quot;My photo&quot;&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<p>A: 会！</p>\n</li>\n<li><p><code>main1.css</code>一定会在<code>alert(&#39;Hello world&#39;)</code>被加载和编译吗?</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;link href=&quot;main1.css&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class=\"line\">    &lt;script&gt;</span><br><span class=\"line\">        alert(&apos;Hello World&apos;);</span><br><span class=\"line\">    &lt;/script&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br></pre></td></tr></table></figure>\n<p>A: 是！</p>\n</li>\n<li><p>Q: 在<code>main2.css</code>获取前<code>main1</code>一定必须被下载解析吗？</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;link href=&quot;main1.css&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class=\"line\">    &lt;link href=&quot;main2.css&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br></pre></td></tr></table></figure>\n<p>A: no!</p>\n</li>\n<li><p>Q: 在<code>Paragraph 1</code>加载后<code>main2.css</code>才会被加载编译吗？</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;link href=&quot;main1.css&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">    &lt;p&gt;Paragraph 1&lt;/p&gt;</span><br><span class=\"line\">    &lt;p&gt;Paragraph 2&lt;/p&gt;</span><br><span class=\"line\">    &lt;link href=&quot;main2.css&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n<p>A: yes!</p>\n</li>\n</ol>\n"},{"title":"web前端开发测验之css部分","url":"http://padding.me/blog/2014/10/02/front-end-web-development-quiz-css-part/","content":"<p>Tip：这是<a href=\"http://davidshariff.com/quiz/\" target=\"_blank\" rel=\"external\">http://davidshariff.com/quiz/</a>给出的web前端开发测试题,的CSS部分,我根据自己的理解给出的答案，欢迎拍砖，一起刷题。github 仓库地址请猛戳<a href=\"https://github.com/paddingme/Front-end-Web-Development-Interview-Question\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/Front-end-Web-Development-Interview-Question</a>,欢迎一起玩耍，么么哒。</p>\n<ol>\n<li><p>Q: CSS 属性是否区分大小写？</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ul &#123;</span><br><span class=\"line\">    MaRGin: 10px;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p> A: 不区分。</p>\n<p> HTML，CSS都对大小写不敏感，但为了更好的可读性和团队协作一般都小写，而在XHTML 中元素名称和属性是必须小写的。</p>\n</li>\n<li><p>Q: 行内(inline)元素 设置<code>margin-top</code>和<code>margin-bottom</code> 是否起作用？</p>\n<p> A: 不起作用。(答案是起作用，个人觉得不对。)</p>\n<p> html 里的元素分为替换元素（replaced element）和非替换元素（non-replaced element）。</p>\n<ul>\n<li>替换元素是指用作为其他内容占位符的一个元素。最典型的就是<code>img</code>，它只是指向一个图像文件。以及大多数表单元素也是替换，例如<code>input</code>等。</li>\n<li><p>非替换元素是指内容包含在文档中的元素。例如，如果一个段落的文本内容都放在该元素本身之内，则这个段落就是一个非替换元素。</p>\n<p>讨论<code>margin-top</code>和<code>margin-bottom</code>对行内元素是否起作用，则要对行内替换元素和行内非替换元素分别讨论。</p>\n<p>首先我们应该明确外边距可以应用到行内元素，规范中是允许的，不过由于在向一个行内非替换元素应用外边距，对行高(line-height)没有任何影响。由于外边距实际上是透明的。所以对声明<code>margin-top</code>和<code>margin-bottom</code>没有任何视觉效果。其原因就在于行内非替换元素的外边距不会改变一个元素的行高。而对于行内非替换元素的左右边距则不是这样，是有影响的。</p>\n<p>而为替换元素设置的外边距会影响行高，可能会使行高增加或减少，这取决于上下外边距的值。行内替换元素的左右边距与非替换元素的左右边距的作用一样。来看看demo:</p>\n<p><a href=\"http://codepen.io/paddingme/pen/JwCDF\" target=\"_blank\" rel=\"external\">http://codepen.io/paddingme/pen/JwCDF</a></p>\n</li>\n</ul>\n</li>\n<li><p>Q: 对内联元素设置<code>padding-top</code>和<code>padding-bottom</code>是否会增加它的高度？（原题是Does setting padding-top and padding-bottom on an inline element add to its dimensions?）</p>\n<p> A: 答案是不会。同上题比较纠结，不太明白这里的 dimensions指的是到底是什么意思？放置一边，咱们来分析下。对于行内元素，设置左右内边距，左右内边距将是可见的。而设置上下内边距，设置背景颜色后可以看见内边距区域有增加，对于行内非替换元素，不会影响其行高，不会撑开父元素。而对于替换元素，则撑开了父元素。看下demo，更好的理解下：</p>\n<p> <a href=\"http://codepen.io/paddingme/pen/CnFpa\" target=\"_blank\" rel=\"external\">http://codepen.io/paddingme/pen/CnFpa</a></p>\n</li>\n<li><p>Q: 设置<code>p</code>的<code>font-size:10rem</code>，当用户重置或拖曳浏览器窗口时，文本大小是否会也随着变化？</p>\n<p> A: 不会。</p>\n<p> <code>rem</code>是以’html’根元素中<code>font-size</code>的大小为基准的相对度量单位，文本的大小不会随着窗口的大小改变而改变。</p>\n</li>\n<li><p>Q: 伪类选择器<code>:checked</code>将作用与<code>input</code>类型为<code>radio</code>或者<code>checkbox</code>,不会作用于<code>option</code>。</p>\n<p> A: 不对。</p>\n<p> 伪类选择器<code>checked</code>的定义很明显:</p>\n<blockquote>\n<p>The :checked CSS pseudo-class selector represents any radio (<code>&lt;input type=&quot;radio&quot;&gt;</code>), checkbox (<code>&lt;input type=&quot;checkbox&quot;&gt;</code>) or option (<code>&lt;option&gt;</code>in a <code>&lt;select&gt;</code>) element that is checked or toggled to an on state. The user can change this state by clicking on the element, or selecting a different value, in which case the :checked pseudo-class no longer applies to this element, but will to the relevant one.</p>\n</blockquote>\n</li>\n<li><p>Q: 在HTML文本中，伪类<code>:root</code>总是指向<code>html</code>元素？</p>\n<p> A: 不是（答案中给出了是 ==||）。以下摘自知乎<a href=\"http://www.zhihu.com/question/20312140\" target=\"_blank\" rel=\"external\">:root 与 html 在 CSS3 中指的是同一个元素吗？</a>的答案：</p>\n<p> 单指创建的根。这个根可能不是 html ，如果是片段html，没有创建根，则为片段的根。把这下面 URL 打到支持 data URL 的瀏覽器看看（Firefox, Chrome, Safari, Opera），可见一斑：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data:application/xhtml+xml,&lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;&lt;style&gt;:root &#123; background: green; &#125; html &#123; background: red !important; &#125;&lt;/style&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Q:’translate()’方法能移动一个元素在z轴上的位置？</p>\n<p> A: 不能。<code>translate()</code>方法只能改变x轴，y轴上的位移。</p>\n</li>\n</ol>\n<ol>\n<li><p>Q: 如下代码中文本“Sausage”的颜色是?</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;ul class=&quot;shopping-list&quot; id=&quot;awesome&quot;&gt;</span><br><span class=\"line\">    &lt;li&gt;&lt;span&gt;Milk&lt;/span&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;favorite&quot; id=&quot;must-buy&quot;&gt;&lt;span class=&quot;highlight&quot;&gt;Sausage&lt;/span&gt;&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ul &#123;color:red;&#125;</span><br><span class=\"line\">li &#123;color:blue;&#125;</span><br></pre></td></tr></table></figure>\n<p> A: blue。</p>\n</li>\n<li><p>Q: 如下代码中文本“Sausage”的颜色是?</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;ul class=&quot;shopping-list&quot; id=&quot;awesome&quot;&gt;</span><br><span class=\"line\">    &lt;li&gt;&lt;span&gt;Milk&lt;/span&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;favorite&quot; id=&quot;must-buy&quot;&gt;&lt;span class=&quot;highlight&quot;&gt;Sausage&lt;/span&gt;&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ul &#123;color:red;&#125;</span><br><span class=\"line\">#must-buy &#123;color:blue;&#125;</span><br></pre></td></tr></table></figure>\n<p> A: blue。</p>\n</li>\n<li><p>Q: 如下代码中文本“Sausage”的颜色是?</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;ul class=&quot;shopping-list&quot; id=&quot;awesome&quot;&gt;</span><br><span class=\"line\">    &lt;li&gt;&lt;span&gt;Milk&lt;/span&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;favorite&quot; id=&quot;must-buy&quot;&gt;&lt;span class=&quot;highlight&quot;&gt;Sausage&lt;/span&gt;&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.shopping-list .favorite &#123;</span><br><span class=\"line\">    color: red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#must-buy &#123;</span><br><span class=\"line\">    color: blue;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>A: blue。</p>\n</li>\n<li><p>Q: 如下代码中文本“Sausage”的颜色是?</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;ul class=&quot;shopping-list&quot; id=&quot;awesome&quot;&gt;</span><br><span class=\"line\">    &lt;li&gt;&lt;span&gt;Milk&lt;/span&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;favorite&quot; id=&quot;must-buy&quot;&gt;&lt;span class=&quot;highlight&quot;&gt;Sausage&lt;/span&gt;&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ul#awesome &#123;</span><br><span class=\"line\">    color: red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">ul.shopping-list li.favorite span &#123;</span><br><span class=\"line\">    color: blue;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>A: blue。</p>\n</li>\n<li><p>Q: 如下代码中文本“Sausage”的颜色是?</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;ul class=&quot;shopping-list&quot; id=&quot;awesome&quot;&gt;</span><br><span class=\"line\">    &lt;li&gt;&lt;span&gt;Milk&lt;/span&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;favorite&quot; id=&quot;must-buy&quot;&gt;&lt;span class=&quot;highlight&quot;&gt;Sausage&lt;/span&gt;&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ul#awesome #must-buy &#123;</span><br><span class=\"line\">    color: red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.favorite span &#123;</span><br><span class=\"line\">    color: blue!important;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>A: blue。</p>\n</li>\n<li><p>Q: 如下代码中文本“Sausage”的颜色是?</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;ul class=&quot;shopping-list&quot; id=&quot;awesome&quot;&gt;</span><br><span class=\"line\">    &lt;li&gt;&lt;span&gt;Milk&lt;/span&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;favorite&quot; id=&quot;must-buy&quot;&gt;&lt;span class=&quot;highlight&quot;&gt;Sausage&lt;/span&gt;&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ul.shopping-list li .highlight &#123;</span><br><span class=\"line\">    color: red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">ul.shopping-list li .highlight:nth-of-type(odd) &#123;</span><br><span class=\"line\">    color: blue;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>A: blue。</p>\n</li>\n<li><p>Q: 如下代码中文本“Sausage”的颜色是?</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;ul class=&quot;shopping-list&quot; id=&quot;awesome&quot;&gt;</span><br><span class=\"line\">    &lt;li&gt;&lt;span&gt;Milk&lt;/span&gt;&lt;/li&gt;</span><br><span class=\"line\">    &lt;li class=&quot;favorite&quot; id=&quot;must-buy&quot;&gt;&lt;span class=&quot;highlight&quot;&gt;Sausage&lt;/span&gt;&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#awesome .favorite:not(#awesome) .highlight &#123;</span><br><span class=\"line\">    color: red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#awesome .highlight:nth-of-type(1):nth-last-of-type(1) &#123;</span><br><span class=\"line\">    color: blue;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>A: blue。</p>\n</li>\n<li><p>Q:<code>#example</code>位置如何变化：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;p id=&quot;example&quot;&gt;Hello&lt;/p&gt;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#example &#123;margin-bottom: -5px;&#125;</span><br></pre></td></tr></table></figure>\n<p>A: 向上移动5px。</p>\n</li>\n<li><p>Q: <code>#example</code>位置如何变化：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;p id=&quot;example&quot;&gt;Hello&lt;/p&gt;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#example &#123;margin-left: -5px;&#125;</span><br></pre></td></tr></table></figure>\n<p>A: 想做移动5px。</p>\n</li>\n<li><p><code>#i-am-useless</code> 会被浏览器加载吗？</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id=&quot;test1&quot;&gt;</span><br><span class=\"line\">    &lt;span id=&quot;test2&quot;&gt;&lt;/span&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#i-am-useless &#123;background-image: url(&apos;mypic.jpg&apos;);&#125;</span><br></pre></td></tr></table></figure>\n<p>A: 不会</p>\n</li>\n<li><p><code>mypic.jpg</code> 会被浏览器加载吗？</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id=&quot;test1&quot;&gt;</span><br><span class=\"line\">    &lt;span id=&quot;test2&quot;&gt;&lt;/span&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#test2 &#123;</span><br><span class=\"line\">    background-image: url(&apos;mypic.jpg&apos;);</span><br><span class=\"line\">    display: none;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>A: 会被下载。</p>\n</li>\n<li><p><code>mypic.jpg</code> 会被浏览器加载吗？</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id=&quot;test1&quot;&gt;</span><br><span class=\"line\">    &lt;span id=&quot;test2&quot;&gt;&lt;/span&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#test1 &#123;</span><br><span class=\"line\">    display: none;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">#test2 &#123;</span><br><span class=\"line\">    background-image: url(&apos;mypic.jpg&apos;);</span><br><span class=\"line\">    visibility: hidden;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>A: 不会被下载。</p>\n</li>\n</ol>\n<ol>\n<li><p>Q: <code>only</code> 选择器的作用是？</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@media only screen and (max-width: 1024px) &#123;argin: 0;&#125;</span><br></pre></td></tr></table></figure>\n<p>A：停止旧版本浏览器解析选择器的其余部分。</p>\n<p>only用来定某种特定的媒体类型，可以用来排除不支持媒体查询的浏览器。其实only很多时候是用来对那些不支持Media Query但却支持Media Type的设备隐藏样式表的。其主要有：支持媒体特性（Media Queries）的设备，正常调用样式，此时就当only不存在；对于不支持媒体特性(Media Queries)但又支持媒体类型(Media Type)的设备，这样就会不读了样式，因为其先读only而不是screen；另外不支持Media Qqueries的浏览器，不论是否支持only，样式都不会被采用。</p>\n</li>\n<li><p>Q:<code>overfloa:hidden</code> 是否形成新的块级格式化上下文？</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div&gt;</span><br><span class=\"line\">    &lt;p&gt;I am floated&lt;/p&gt;</span><br><span class=\"line\">    &lt;p&gt;So am I&lt;/p&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">div &#123;overflow: hidden;&#125;</span><br><span class=\"line\">p &#123;float: left;&#125;</span><br></pre></td></tr></table></figure>\n<p>A：会形成。</p>\n<p>会触发BFC的条件有：</p>\n<ul>\n<li>float的值不为none。</li>\n<li>overflow的值不为visible。</li>\n<li>display的值为table-cell, table-caption, inline-block中的任何一个。</li>\n<li>position的值不为relative和static。</li>\n</ul>\n</li>\n<li><p>Q: ‘screen’关键词是指设备物理屏幕的大小还是指浏览器的视窗？</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@media only screen and (max-width: 1024px) &#123;margin: 0;&#125;</span><br></pre></td></tr></table></figure>\n<p>A: 浏览器视窗</p>\n</li>\n</ol>\n"},{"title":"基本视觉格式化","url":"http://padding.me/blog/2014/09/21/Basic-Visual-Formatting/","content":"<h2 id=\"基本框\"><a href=\"#基本框\" class=\"headerlink\" title=\"基本框\"></a>基本框</h2><p>在CSS中每个元素都被认为可生成一个或多个矩形框，这成为元素框。各元素框中心有一个内容区域（content area），内容区周围有<strong>可选的</strong>内边距（padding）、外边距(margin)、和边框(border),这里可选的是指可设置为0即从元素框内去除了这些为0的项，例如说行内元素没有 margin,没有 padding。外边距通常是透明的，可以看到父元素的背景。内边距不能是负值。边框 若未设置颜色，则取元素内容的前景色。亦即边框和内容以内边距有相同的背景色。边框的宽度不可以为负。</p>\n<h2 id=\"包含块\"><a href=\"#包含块\" class=\"headerlink\" title=\"包含块\"></a>包含块</h2><p>每个元素都相对于其包含块摆放，亦即包含块就是一个元素的“布局上下文”。而行内元素的摆放方式并不直接依赖于包含块。</p>\n<h2 id=\"常见的术语\"><a href=\"#常见的术语\" class=\"headerlink\" title=\"常见的术语\"></a>常见的术语</h2><ul>\n<li><h4 id=\"正常流\"><a href=\"#正常流\" class=\"headerlink\" title=\"正常流\"></a>正常流</h4><p>这是指西方语言文本从左向右、从上向下显示，即传统的HTML 文档的文本布局。若想要让某元素脱离正常的文档流，让其浮动或改变其定位方式（<code>float:left</code>,<code>float:right</code>,<code>position:fixed</code>,<code>position:absolute</code>）。</p>\n</li>\n<li><h3 id=\"非替换元素\"><a href=\"#非替换元素\" class=\"headerlink\" title=\"非替换元素\"></a>非替换元素</h3><p>若元素的内容包含在文档中，则称之为非替换元素。如某段落的文本内容在该元素本身之内，这个段落就是非替换元素。</p>\n</li>\n<li><h3 id=\"替换元素\"><a href=\"#替换元素\" class=\"headerlink\" title=\"替换元素\"></a>替换元素</h3><p>指用作为其他内容占位符的一个元素。如img 元素，input元素等<code>&lt;input type=&quot;radio&quot;&gt;</code></p>\n</li>\n<li><h3 id=\"块级元素\"><a href=\"#块级元素\" class=\"headerlink\" title=\"块级元素\"></a>块级元素</h3><p>指段落、标题或div之类的元素。这些元素在正常的文档流中，会在其框之前和之后形成换行，故处于正常文档流中的块级元素会垂直摆放。通过声明<code>display:block</code>可使元素变身块级框。</p>\n</li>\n<li><h3 id=\"行内元素\"><a href=\"#行内元素\" class=\"headerlink\" title=\"行内元素\"></a>行内元素</h3><p>指<code>strong</code>或<code>span</code>之类的元素。这些元素不会在之前或之后生成“行分隔符”。</p>\n</li>\n<li><h3 id=\"根元素\"><a href=\"#根元素\" class=\"headerlink\" title=\"根元素\"></a>根元素</h3><p>位于文档树顶端的元素，在HTML文档中，即为<code>html</code></p>\n</li>\n</ul>\n<h2 id=\"块级元素-1\"><a href=\"#块级元素-1\" class=\"headerlink\" title=\"块级元素\"></a>块级元素</h2><p>一般地，一个元素的width 被定义为从左内边界到右内边界的距离，height 则是从上内边界到下内边界的距离。</p>\n<p>正常流中的块级元素框的水平部分综合就等于父元素的width。</p>\n<p>margin-left,border-left,padding-left,width,padding-right,border-right,margin-right 这些属性与块级框的水平布局有关，这7个值加起来必须是元素包含块的宽度。这往往是块级框的width 值。这7个属性中，只有width,margin-left,margin-right 可设置为auto，其余都必须设置为特定的值或者默认为0。</p>\n<p>###使用 auto</p>\n<ul>\n<li><p>如果在margin-left、margin-right、width中设置某一个为auto，另外两个设置为特定的元素，则设置为auto 的属性会确定所需要的长度，从而使元素框的宽度等于父元素的width。</p>\n<p>如果三个属性都设定特定的值，无法撑满父元素的width，则根据从左向右的文档流会自动将margin-right 设置为auto，来填补所有的距离。</p>\n</li>\n<li>如果只设置了<code>margin-left:auto</code>和<code>width:auto</code> 或<code>margin-right:auto</code>和<code>width:auto</code> 则设置为auto 的外边距变为0。</li>\n<li>如果只设置<code>margin-left:auto</code>和<code>margin-right:auto</code>，width　为一确定值，则元素在其父元素中居中，比较常用，另<code>text-align:center</code> 只应用于块级元素的内联内容。</li>\n<li>如果三个属性都设置为auto，则两个外边距都设置为0，而width会尽可能宽。与默认情况相同，即没有设置margin，width 没有显式设置，则外边距默认为0，width 为auto。</li>\n</ul>\n<h3 id=\"负外边距\"><a href=\"#负外边距\" class=\"headerlink\" title=\"负外边距\"></a>负外边距</h3><p>要记住7个水平方向的属性的和一定等于父容器的width。</p>\n<h2 id=\"替换元素-1\"><a href=\"#替换元素-1\" class=\"headerlink\" title=\"替换元素\"></a>替换元素</h2><p>如果width 为auto 则元素的宽度则是内容的固有宽度。</p>\n<p>##垂直格式化<br>如果正常流中一个块元素的margin-top 或margin-bottom 设置为auto，它会自动计算为0。</p>\n<p>如果没有显示声明包含块的height，百分数高度会重置为auto。</p>\n<h2 id=\"auto-高度\"><a href=\"#auto-高度\" class=\"headerlink\" title=\"auto 高度\"></a>auto 高度</h2><p>如果块级正常流元素设置为height:auto，显示时其高度将恰好足以包含其内联内容（包含文本）的行盒。</p>\n<p>如果块级正常硫元素的高度设置为auto，而且只有块级子元素，其默认高度将是从最高块级元素的外边框边界到最低块级子元素外边框边界之间的距离。故子元素的外边距会超出包含这些子元素的元素。</p>\n<p>若块级元素有上内边距或下内边距，或者有上边框或者下边框，其高度则是从其最高子元素的上外边距边界到其最低子元素的下外边距边界之间的距离。</p>\n"},{"title":"数组","url":"http://padding.me/blog/2014/09/13/Array/","content":"<h2 id=\"JavaScript-中对数组的定义\"><a href=\"#JavaScript-中对数组的定义\" class=\"headerlink\" title=\"JavaScript 中对数组的定义\"></a>JavaScript 中对数组的定义</h2><p>数组的标准定义是：</p>\n<blockquote>\n<p>一个存储元素的线性集合（collection）,元素可以通过索引来任意存取，索引通常是数字，用来计算元素之间存储位置的偏移量。</p>\n</blockquote>\n<p>JavaScript 中的数组是一种特殊的对象，用来表示偏移量的索引是该对象的属性，索引可能是整数。然而，这些数字索引在内部被转换为字符串类型，这是因为JavaScript 对象中的属性名必须是字符串。</p>\n<p>JavaScript 中的数组，严格来说应该称作对象，是特殊的 JavaScript 对象，在内部被归类为数组。由于 Array 在 JavaScript 中被当作对象， 因此它有许多属性和方法可以在编程使用。</p>\n<h2 id=\"使用数组\"><a href=\"#使用数组\" class=\"headerlink\" title=\"使用数组\"></a>使用数组</h2><h3 id=\"创建数组\"><a href=\"#创建数组\" class=\"headerlink\" title=\"创建数组\"></a>创建数组</h3><pre><code>var numbers = [];//[]操作符声明了一个空的数组，长度为0。\n\nvar numbers = new Array();//与上等价\n\nvar numbers = [1,2,3,4,5];\n\nvar numbers = new Array(1,2,3,4,5);//构造函数传入初始值\n\nvar numbers = new Array(5); //只传入一个参数，用来指定数组的长度\n\nvar objects = [1,&quot;Joe&quot;,true, null];//在 JavaScript 里数组中的元素不必是同一种数据类型。\n</code></pre><p>推荐使用<code>[]</code>操作符创建数组，这种方式效率更高。</p>\n<h3 id=\"由字符串生成数组\"><a href=\"#由字符串生成数组\" class=\"headerlink\" title=\"由字符串生成数组\"></a>由字符串生成数组</h3><p><code>split()</code> 方法用于把一个字符串分割成字符串数组。</p>\n<pre><code>str.split([separator][, limit])\n</code></pre><p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split\" target=\"_blank\" rel=\"external\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split</a></p>\n<h3 id=\"对数组的整体性操作\"><a href=\"#对数组的整体性操作\" class=\"headerlink\" title=\"对数组的整体性操作\"></a>对数组的整体性操作</h3><p>当把一个数组赋给另外一个数组时，只是为被赋值的数组增加了一个新的引用。当你通过原引用修改了数组的值，另外一个引用也会感知这个变化（浅复制）。而深复制是指将原数组中的每一个元素都复制一份到新数组中。</p>\n<h2 id=\"存取函数\"><a href=\"#存取函数\" class=\"headerlink\" title=\"存取函数\"></a>存取函数</h2><h3 id=\"indexOf\"><a href=\"#indexOf\" class=\"headerlink\" title=\"indexOf()\"></a>indexOf()</h3><p><code>indexOf()</code> 用来查找进来的参数在目标数组中是否存在。如果目标数组包含该参数，就返回该元素在数组中的索引；如果不包含，就返回-1。如果数组中包含多个相同的元素，<code>indexOf()</code> 函数总是返回第一个与参数相同的元素的索引。类似，<code>lastIndexOf()</code>，该函数返回相同元素中最后一个元素的索引，如果没找到相同元素，则返回-1。</p>\n<h3 id=\"数组的字符串表示\"><a href=\"#数组的字符串表示\" class=\"headerlink\" title=\"数组的字符串表示\"></a>数组的字符串表示</h3><p><code>join()</code> 和 <code>toString()</code> 方法都返回一个包含数组所有元素的字符串，各元素之间用逗号分开。当直接对一个数组使用 <code>print()</code> 函数时，系统会自动调用数那个数组的<code>tostring()</code>方法。</p>\n<h3 id=\"由已有数组创建新数组\"><a href=\"#由已有数组创建新数组\" class=\"headerlink\" title=\"由已有数组创建新数组\"></a>由已有数组创建新数组</h3><ul>\n<li><code>concat()</code> 方法可以合并多个数组创建一个新数，<code>concat()</code> 方法发起者是一个数组，参数是另一个数组。作为参数的数组，其中的所有元素都被连接到调用 concat() 方法的数组后面；</li>\n<li><code>splice()</code> 方法截取一个数组的子集创建一个新数组；<code>splice()</code> 方法从现有数组里截取一个新数组，该方法的第一个参数是截取的起始索引，第二个参数是截取的长度。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> myFish = [<span class=\"string\">'angel'</span>, <span class=\"string\">'clown'</span>, <span class=\"string\">'mandarin'</span>, <span class=\"string\">'surgeon'</span>];</span><br><span class=\"line\"><span class=\"comment\">// removes 0 elements from index 2, and inserts 'drum'</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> removed = myFish.splice(<span class=\"number\">2</span>, <span class=\"number\">0</span>, <span class=\"string\">'drum'</span>);</span><br><span class=\"line\"><span class=\"comment\">// myFish is ['angel', 'clown', 'drum', 'mandarin', 'surgeon']</span></span><br><span class=\"line\"><span class=\"comment\">// removed is [], no elements removed</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// removes 1 element from index 3</span></span><br><span class=\"line\">removed = myFish.splice(<span class=\"number\">3</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"comment\">// myFish is ['angel', 'clown', 'drum', 'surgeon']</span></span><br><span class=\"line\"><span class=\"comment\">// removed is ['mandarin']</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// removes 1 element from index 2, and inserts 'trumpet'</span></span><br><span class=\"line\">removed = myFish.splice(<span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"string\">'trumpet'</span>);</span><br><span class=\"line\"><span class=\"comment\">// myFish is ['angel', 'clown', 'trumpet', 'surgeon']</span></span><br><span class=\"line\"><span class=\"comment\">// removed is ['drum']</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// removes 2 elements from index 0, and inserts 'parrot', 'anemone' and 'blue'</span></span><br><span class=\"line\">removed = myFish.splice(<span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"string\">'parrot'</span>, <span class=\"string\">'anemone'</span>, <span class=\"string\">'blue'</span>);</span><br><span class=\"line\"><span class=\"comment\">// myFish is ['parrot', 'anemone', 'blue', 'trumpet', 'surgeon']</span></span><br><span class=\"line\"><span class=\"comment\">// removed is ['angel', 'clown']</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// removes 2 elements from index 3</span></span><br><span class=\"line\">removed = myFish.splice(<span class=\"number\">3</span>, <span class=\"built_in\">Number</span>.MAX_VALUE);</span><br><span class=\"line\"><span class=\"comment\">// myFish is ['parrot', 'anemone', 'blue']</span></span><br><span class=\"line\"><span class=\"comment\">// removed is ['trumpet', 'surgeon']</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"可变数组\"><a href=\"#可变数组\" class=\"headerlink\" title=\"可变数组\"></a>可变数组</h2><h3 id=\"为数组添加元素\"><a href=\"#为数组添加元素\" class=\"headerlink\" title=\"为数组添加元素\"></a>为数组添加元素</h3><ul>\n<li><code>push()</code>方法会将一个元素添加到数组末尾，也可以使用数组的length属性为数组添加元素，但<code>push()</code>方法看起来更直观。</li>\n<li><code>unshift()</code> 方法可以将元素添加在数组的开头，也可以通过一次调用，为数组添加多个元素。</li>\n</ul>\n<h3 id=\"从数组中删除元素\"><a href=\"#从数组中删除元素\" class=\"headerlink\" title=\"从数组中删除元素\"></a>从数组中删除元素</h3><ul>\n<li><code>pop()</code> 方法可以删除数组末尾的元素。</li>\n<li><code>shift()</code> 方法可以删除数组的第一个元素。</li>\n</ul>\n<p><code>pop()</code>和<code>shift()</code>都将返回删除的元素。</p>\n<h3 id=\"从数组中间位置添加和删除元素\"><a href=\"#从数组中间位置添加和删除元素\" class=\"headerlink\" title=\"从数组中间位置添加和删除元素\"></a>从数组中间位置添加和删除元素</h3><p><code>splice()</code>方法可以为数组添加元素，需提供如下参数：</p>\n<ul>\n<li>起始索引（亦即你希望添加元素的地方）；</li>\n<li>需要删除的元素个数（添加元素时该参数设为0）；</li>\n<li>想要添加数组的元素。</li>\n</ul>\n<h3 id=\"为数组排序\"><a href=\"#为数组排序\" class=\"headerlink\" title=\"为数组排序\"></a>为数组排序</h3><ul>\n<li><code>reverse()</code>方法将数组中元素的数学怒进行翻转；</li>\n<li><code>sort()</code> 会对数组按照字典顺序进行排序。</li>\n</ul>\n<p>使用<code>sort()</code>对数字排序，需要传入一个大小比较函数：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">compare</span>(<span class=\"params\">num1,num2</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num1 - num2;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> nums = [<span class=\"number\">3</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">100</span>,<span class=\"number\">4</span>,<span class=\"number\">200</span>];</span><br><span class=\"line\">nums.sort(compare);</span><br><span class=\"line\">print(nums);</span><br></pre></td></tr></table></figure>\n<h2 id=\"迭代器方法\"><a href=\"#迭代器方法\" class=\"headerlink\" title=\"迭代器方法\"></a>迭代器方法</h2><h3 id=\"不生成新数组的迭代器方法\"><a href=\"#不生成新数组的迭代器方法\" class=\"headerlink\" title=\"不生成新数组的迭代器方法\"></a>不生成新数组的迭代器方法</h3><ul>\n<li><code>forEach()</code> 该方法接受一个函数使用参数，对数组中的每个元素使用该函数。</li>\n<li><code>every()</code> 该方法接受一个返回值为布尔类型的函数，对数组中得每个元素使用该函数，如果对于所有的元素，该函数都返回 true, 则该方法返回 true。</li>\n<li><code>some()</code> 该方法也接受一个返回值为布尔类型的函数，只要有一个元素使得该函数返回true，该方法就返回 true。</li>\n<li><code>reduce()</code> 该方法接受一个函数，返回一个值。该方法会从一个累加值开始，不断对累加值和数组中的后续元素调用该函数，直到数组中的最后一个元素，最后返回得到的累加值；也可以用来将数组中的元素连接成一个长的字符串。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">concat</span>(<span class=\"params\">accumulatedString,item</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> accumulatedString+item;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> words = [<span class=\"string\">\"the \"</span>, <span class=\"string\">\"quick \"</span>, <span class=\"string\">\"brown \"</span>, <span class=\"string\">\"fox \"</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> sentence = words.reduce(concat);</span><br><span class=\"line\">print(sentence);</span><br></pre></td></tr></table></figure>\n<p><code>reduceRight()</code> 和 <code>reduce()</code> 一样，不过它是从右到左执行。</p>\n<h3 id=\"生成新数组的迭代器方法\"><a href=\"#生成新数组的迭代器方法\" class=\"headerlink\" title=\"生成新数组的迭代器方法\"></a>生成新数组的迭代器方法</h3><ul>\n<li><code>map()</code> 和<code>forEach()</code>相似，对数组中的每个元素使用某个函数，区别在于返回一个新的数组，该数组的元素是对原有元素应用某个函数得到的结果。</li>\n<li><code>filter()</code> 和 <code>every()</code> 类似，传入一个返回值为布尔类型的函数，不同的是当对数组中红所有元素应用该函数时，结果均为 true 时， 该方法不返回 true，二十返回一个新数组，该数组包含应用该函数后结果为true 的元素。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">passing</span>(<span class=\"params\">num</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num &gt;= <span class=\"number\">60</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> grades = [];</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">20</span>; ++i) &#123;</span><br><span class=\"line\">    grades[i] = <span class=\"built_in\">Math</span>.floor(<span class=\"built_in\">Math</span>.random() * <span class=\"number\">101</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> passGrades = grades.filter(passing);</span><br><span class=\"line\">print(<span class=\"string\">\"All grades: \"</span>);</span><br><span class=\"line\">print(grades);</span><br><span class=\"line\">print(<span class=\"string\">\"Passing grades: \"</span>);</span><br><span class=\"line\">print(passGrades);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">afterc</span>(<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(str.indexOf(<span class=\"string\">\"cie\"</span>) &gt; <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> words = [<span class=\"string\">\"recieve\"</span>,<span class=\"string\">\"device\"</span>,<span class=\"string\">\"percieve\"</span>,<span class=\"string\">\"deceit\"</span>,<span class=\"string\">\"concieve\"</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> misspelled = words.filter(afterc);</span><br><span class=\"line\">print(misspelled);</span><br></pre></td></tr></table></figure>\n<h2 id=\"二维数组和多维数组\"><a href=\"#二维数组和多维数组\" class=\"headerlink\" title=\"二维数组和多维数组\"></a>二维数组和多维数组</h2><h3 id=\"创建二维数组\"><a href=\"#创建二维数组\" class=\"headerlink\" title=\"创建二维数组\"></a>创建二维数组</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Array</span>.matrix = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">numrows,numcols,initial</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> arr = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; numrows; ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> columns = []; </span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> j = <span class=\"number\">0</span>; j &lt; numcols; ++j) &#123;</span><br><span class=\"line\">            columns[j] = initial;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    arr[i] = columns;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>第二章 数组 完</p>\n</blockquote>\n"},{"title":"JavaScirpt 的编程环境和模型","url":"http://padding.me/blog/2014/09/12/The-coding-environment-and-model-of-Javascript/","content":"<ol>\n<li><p>toFixed()方法可以把 Number 四舍五入为指定小数数位的数字。</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NumberObject.toFixed(num)</span><br></pre></td></tr></table></figure>\n<p> num 参数必需，范围为0-20,如果没有，默认为0。当 num 太小或太大时抛出异常 RangeError。0 ~ 20 之间的值不会引发该异常。有些实现支持更大范围或更小范围内的值。当调用该方法的对象不是 Number 时抛出 TypeError 异常。</p>\n</li>\n<li>变量的作用域是指一个变量在程序中的哪些地方可以访问。JavaScript 中的变量作用域为函数作用域。这是指变量的值在定义该变量的函数内是可见的，并且定义在该函数内的嵌套函数也可以访问该变量。JavaScript 拥有的是函数作用域，即 JavaScript 没有块级作用域。</li>\n<li>JavaScript 允许在定义变量时不使用关键字 var， 但这样做的后果是 定义的变量自动拥有了全局作用域，即使你是在一个函数内定义该变量，它也是全局变量。</li>\n<li>对象和面向对象编程</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Checking</span>(<span class=\"params\">amount</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.balance = amount;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.deposit = deposit;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.withdraw = witdraw;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.toString = toString;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">deposit</span>(<span class=\"params\">amount</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.balance += amount;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">withdraw</span>(<span class=\"params\">amount</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (amount &lt;= <span class=\"keyword\">this</span>.balance) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.balance -= amount;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (amount &gt; <span class=\"keyword\">this</span>.balance) &#123;</span><br><span class=\"line\">        print(<span class=\"string\">\"Insufficient funds\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">toString</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">\"Balance: \"</span> + <span class=\"keyword\">this</span>.balance;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> account = <span class=\"keyword\">new</span> Checking(<span class=\"number\">500</span>);</span><br><span class=\"line\">account.deposit(<span class=\"number\">1000</span>);</span><br><span class=\"line\">print(account.toString()); <span class=\"comment\">//Balance:1500</span></span><br><span class=\"line\">account.withdraw(<span class=\"number\">750</span>);</span><br><span class=\"line\">print(account.toString());<span class=\"comment\">//Balance:750</span></span><br><span class=\"line\">account.withdraw(<span class=\"number\">800</span>); <span class=\"comment\">//Insufficient funds</span></span><br><span class=\"line\">print(account.toString());<span class=\"comment\">//Balance:750</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>第一章 JavaScript 的编程环境和模型 完</p>\n</blockquote>\n"},{"title":"浮动","url":"http://padding.me/blog/2014/09/11/float/","content":"<h3 id=\"浮动和浮动元素\"><a href=\"#浮动和浮动元素\" class=\"headerlink\" title=\"浮动和浮动元素\"></a>浮动和浮动元素</h3><p>对于浮动来说，最常见的，也是CSS产生浮动的初衷就是文字环绕图像的效果。对于浮动元素，有几点要记住：</p>\n<ul>\n<li>会以某种方式将浮动元素从文档的正常流中删除，它可能会影响到布局；</li>\n<li>浮动元素周围的外边距不会合并：如果浮动一个元素有20px外边距的图像，则在这个图像周围至少有20px的空间。若其他元素与图像相邻，而且这些元素也有外边距，则这些外边距不会与浮动图像的外边距合并；</li>\n<li>如果确实要浮动一个非替换元素，则必须为该元素声明一个width,否则CSS规范，元素的宽度趋于0。</li>\n</ul>\n<h3 id=\"浮动的内幕\"><a href=\"#浮动的内幕\" class=\"headerlink\" title=\"浮动的内幕\"></a>浮动的内幕</h3><p>浮动元素的包含块(Containning block)是其最近的块级祖先元素。浮动元素会生成一个块级框，而不论这个元素本身是什么。故没有对浮动元素设置<code>display:block</code>。</p>\n<h4 id=\"浮动规则\"><a href=\"#浮动规则\" class=\"headerlink\" title=\"浮动规则\"></a>浮动规则</h4><ol>\n<li>浮动元素的左（或右）外边界不能超出其包含块的左（或者右）内边界。</li>\n<li>浮动元素的左（或右）外边界必须是源文档中之前出现的左浮动（或右浮动）元素的右（左）外边界，除非后出现浮动元素的顶端在先出现浮动元素的底端下面。(不用担心浮动元素会相互覆盖)</li>\n<li>左浮动元素的右外边界不会在其右边右浮动元素的左外边界的右边。右浮动元素的左外边界不会在其左边左浮动元素的右外边界的左边（汗=。=）。这条规则防止浮动元素相互重叠。假设body,宽为500px,有两个width=300px的image，一个左浮动，另一个右浮动。它会要求第二个图像向下浮动，直到其顶端在左浮动图像的低端之下。</li>\n<li>一个浮动元素的顶端不能比其父元素的内顶端更高。如果一个浮动元素在两个合并外边距之间，放置这个浮动元素就好像在两个元素之间有一个块级父元素（防止浮动到三个元素共同的父元素的顶端了。。）。</li>\n<li>浮动元素的顶端不能比之前所有浮动元素或块级元素的顶端更高。</li>\n<li>如果源文档中一个浮动元素之前出现另一个元素，浮动元素的顶端不能比包含该元素所生成框的任何行框的顶端更高。</li>\n<li>左（或右）浮动元素的左边（右边）有另一个浮动元素，前者的右外边界不能在其包含块的右（左）边界的右边（左边）。亦即 浮动元素不能呢个超出其包含元素的边界，除非它太宽，本身就无法放下。如果多个元素浮动，浮动元素会被挤到一个新的“行”上。</li>\n<li>浮动元素必须尽可能得放置。满足其他约束条件的前提下，浮动得尽可能高。</li>\n<li>左浮动元素必须向左尽可能远，右浮动元素必须向右尽可能远。位置越高，就会向右，或想做浮动得越远。</li>\n</ol>\n<h3 id=\"实用行为\"><a href=\"#实用行为\" class=\"headerlink\" title=\"实用行为\"></a>实用行为</h3><p>前面的浮动原则只讨论了浮动元素和其父元素的左右和上边界，而没有涉及下边界。这里是故意遗漏的，浮动元素会延伸，从而包含其所有后代浮动元素。所以 通过将父元素置为浮动元素，就可以把浮动元素包含在其氟元素内。</p>\n<p>负外边距可能导致浮动元素移到其父元素的外面。如前所述，还有另一种方法可以让浮动元素超出其父元素的左右内边界，即浮动元素比其父元素更宽。</p>\n<p>###浮动元素、内容和重叠</p>\n<ul>\n<li>行内框与一个浮动元素重叠时，其边框、背景和内容都在该浮动元素“之上”显示；</li>\n<li>块框与一个浮动元素重叠时，其边框和背景在该浮动元素“之下”显示，内容在浮动元素“之上”显示</li>\n</ul>\n<h3 id=\"清除\"><a href=\"#清除\" class=\"headerlink\" title=\"清除\"></a>清除</h3><p>在CSS1 和 CSS2 中，clear 会增加元素的上外边距，使之最后落在浮动元素的下面，这实际上会忽略为清除元素（设置了clear 的元素）顶端设置的外边距宽度。亦即清楚元素的上外边距可能会调整。</p>\n<p>CSS2.1 中 引入了一个清除区域（clearance）。清楚区域是在元素上外边距之上增加的额外间隔，不允许任何浮动元素进入这个范围内，这意味着元素设置clear 属性时，它的外边距不会改变，之所以会向下移是这个清除区域造成的。</p>\n<p>参考<br><a href=\"http://www.amazon.cn/CSS%E6%9D%83%E5%A8%81%E6%8C%87%E5%8D%97-%E8%BF%88%E8%80%B6/dp/B0011F5SIC/ref=sr_1_1?ie=UTF8&amp;qid=1410419640&amp;sr=8-1&amp;keywords=CSS%E6%9D%83%E5%A8%81%E6%8C%87%E5%8D%97%28%E7%AC%AC3%E7%89%88%29\" target=\"_blank\" rel=\"external\">《CSS权威指南》</a> 第10章 浮动和定位</p>\n"},{"title":"JavaScirpt 高级程序设计学习笔记(3)","url":"http://padding.me/blog/2014/09/04/Professional-Javascript-for-Web-Deveopers-learning-notes-3/","content":"<h3 id=\"object\"><a href=\"#object\" class=\"headerlink\" title=\"object\"></a>object</h3><p>ECMAScript 中的对象其实就是一组数据和功能的集合。对象可以通过<code>new</code>操作符后跟要创建的对象类型的名称来创建。而创建Obeject类型的实例并为其添加属性和（或）方法，就可以创建自定义对象。</p>\n<p>和Java中的java.lang.object对象一样，Object 类型是所有它的实例的基础。亦即 Object类型所具有的任何属性和方法也同样存在于更具体的对象中。</p>\n<p>Object的每个实例都具有下列属性：</p>\n<ul>\n<li>constructor: 保存这用于创建当前对象的函数；</li>\n<li>hasOwnProperty(propertyName)： 用于检查给定的属性在当前对象实例中（而不是在实例的原型中）是否存在，propertyName必须以字符串形式指定充当参数；</li>\n<li>isPrototypeOf(object): 用于检查传入的对象是否是传入对象的原型</li>\n<li>propertyIsEnumerable(propertyName):用于检查给定的属性是否能够使用for-in语句来枚举；</li>\n<li>toLocaleString(): 返回对象的字符串表示，该字符串与执行环境的地区对应；</li>\n<li>toString(): 返回对象的字符串表示；</li>\n<li>valueOf(): 返回对象的字符串、数值或布尔值表示，通常与toString() 返回相同。</li>\n</ul>\n<h3 id=\"位操作符\"><a href=\"#位操作符\" class=\"headerlink\" title=\"位操作符\"></a>位操作符</h3><p>ECMAScirpt 中的所有数值都以IEEE-754 64位格式存储，但位操作符并不直接操作64的值。而是先将64位的值转换成32位的证书，然后执行操作，最后将结果转换回64位。对于开发人员来说，由于64位存储格式是透明的，因此整个过程就像是只存在32位的整数一样。</p>\n<p>对于有符号的整数来说，32位中的前31位用于表示数值。第32位表示数值符号。负数同样以二进制码存储，但使用二进制补码。</p>\n<p>位操作符有如下几种</p>\n<ul>\n<li>按位非： <code>~</code></li>\n<li>按位与： <code>&amp;</code></li>\n<li>按位或： <code>|</code></li>\n<li>按位异或： <code>^</code></li>\n<li>左移：<code>&lt;&lt;</code></li>\n<li>右移：<code>&gt;&gt;</code></li>\n<li>无符号左移：<code>&lt;&lt;&lt;</code></li>\n<li>无符号右移：<code>&gt;&gt;&gt;</code></li>\n</ul>\n<h3 id=\"布尔操作符\"><a href=\"#布尔操作符\" class=\"headerlink\" title=\"布尔操作符\"></a>布尔操作符</h3><h4 id=\"逻辑与\"><a href=\"#逻辑与\" class=\"headerlink\" title=\"逻辑与\"></a>逻辑与</h4><p>在有一个操作数不是布尔值的情况下，逻辑与操作就不一定返回布尔值，此时，它遵循下列规则：</p>\n<ul>\n<li>若第一个操作数是对象，则返回第二个操作数；</li>\n<li>若第二个操作数是对象，则只有在第一个操作数的求值结果为true 时才返回该对象；</li>\n<li>若两个操作数都是对象，则返回第二个操作数；</li>\n<li>若有一个操作数是null, 则返回null；</li>\n<li>若有一个操作数是NaN, 则返回NaN；</li>\n<li>若有一个操作数是undefined, 则返回undefined；</li>\n</ul>\n<p>不能在逻辑与操作中使用未定义的值。</p>\n<pre><code>var found = true；\nvar result = (found &amp;&amp; someUndefinedVariable)；//这里会发生错误\nalert (result)； //这一行不会执行\n\nvar found = false；\nvar result = (found &amp;&amp; someUndefinedVariable)//不会发生错误\nalert (result)； // 执行(&quot;false&quot;)\n</code></pre><h4 id=\"逻辑或\"><a href=\"#逻辑或\" class=\"headerlink\" title=\"逻辑或\"></a>逻辑或</h4><p>操作规则如下：</p>\n<ul>\n<li>如果第一个操作是对象，则返回第一个操作数；</li>\n<li>如果第一个操作数的求值结果为false, 则返回第二个操作数；</li>\n<li>如果两个操作数都是对象，则返回第二个操作对象；</li>\n<li>如果两个操作数都是null,则返回null；</li>\n<li>如果两个操作数都是NaN,则返回NaN；</li>\n<li>如果两个操作数都是undefined,则返回undefined；</li>\n</ul>\n<p>我们可以使用逻辑或的短路行为来避免为变量赋null 或者 undefined 值，例如</p>\n<pre><code>var myObject =  preferredObject || backupObject；\n</code></pre><p>在这个例子中，myObject 将被赋予等号后面两个值中的一个。变量 preferredObject 中包含有限赋给变量myObject的值， 变量 backupObject 负责在preferredObject 中不包含有效值情况下提供后备值。</p>\n<h3 id=\"乘性操作符\"><a href=\"#乘性操作符\" class=\"headerlink\" title=\"乘性操作符\"></a>乘性操作符</h3><h4 id=\"乘法\"><a href=\"#乘法\" class=\"headerlink\" title=\"乘法\"></a>乘法</h4><p>在处理特殊值的情况下，乘法操作符遵循下列特殊的规则：</p>\n<ul>\n<li>若操作数是数值，执行常规的乘法计算，即如果两正数或两负数相乘结果是正数，而如果只有一个操作数有符号，那结果是负数，超过表示范围返回 Infinity或-Infinity；</li>\n<li>若一操作数是 NaN, 结果为 NaN；</li>\n<li>若Infinity与0相乘，结果为NaN；</li>\n<li>若Infinity与非0相乘，则结果为Infinity或-Infinity；</li>\n<li>若Infinity与Infinity相乘，则结果为Infinity；</li>\n<li>若一操作数不是数值，则在后台调用Number() 转换，再根据上述规则计算。</li>\n</ul>\n<h4 id=\"除法\"><a href=\"#除法\" class=\"headerlink\" title=\"除法\"></a>除法</h4><p>除法的特殊计算规则如下：</p>\n<ul>\n<li>若操作数是数值，执行常规的除法计算，即如果两正数或两负数相乘结果是正数，而如果只有一个操作数有符号，那结果是负数，超过表示范围返回 Infinity或-Infinity；</li>\n<li>若一操作数是NaN,则结果是NaN；</li>\n<li>若Infinity 被 Infinity 除，结果是NaN；</li>\n<li>若0被0除，返回NaN；</li>\n<li>若非0的有限数被0除，结果是 Infinity 或 -Infinity；</li>\n<li>若 Infinity 被任何非0 除， 则结果是 Infinity 或 -Infinity。</li>\n<li>若一操作数不是数值，则在后台调用Number() 转换，再根据上述规则计算。</li>\n</ul>\n<h3 id=\"加性操作符\"><a href=\"#加性操作符\" class=\"headerlink\" title=\"加性操作符\"></a>加性操作符</h3><h4 id=\"加法\"><a href=\"#加法\" class=\"headerlink\" title=\"加法\"></a>加法</h4><p>如果两个操作符都是数值，则执行常规的加法计算，然后根据下列规则返回结果：</p>\n<ul>\n<li>如果有一个操作数是 NaN，则结果是 NaN；</li>\n<li>如果是 Infinity 加 Infinity，则结果是 Infinity；</li>\n<li>如果是 -Infinity 加 -Infinity，则结果是 -Infinity；</li>\n<li>如果是 Infinity 加 -Infinity，则结果是 NaN；</li>\n<li>如果是 +0 加 +0 ，则结果是 +0；</li>\n<li>如果是 -0 加 -0 ，则结果是 -0；</li>\n<li>如果是 +0 加 -0 ，则结果是 +0；<br>如果有一个操作数是字符，则按照如下规则进行运算：</li>\n<li>如果两个操作数都是字符串，则将第二个操作数与第一个操作数拼接起来；</li>\n<li>如果只有一个操作数是字符串，则将另一个操作数转换为字符串，然后再将两个字符串拼接起来。<br>如果有一个操作数是对象、数值或者布尔值，则调用他们的 toString() 方法取得它们 相应的字符串，然后再根据前面的规则进行相加。对于 undefined 和 null 则分别调用 String() 并取得字符串 “undefined” 和 “null”。</li>\n</ul>\n<h4 id=\"减法\"><a href=\"#减法\" class=\"headerlink\" title=\"减法\"></a>减法</h4><p>加法的运算规则如下：</p>\n<ul>\n<li>若两个数都是数值，则执行常规的算术减法并返回结果数值；</li>\n<li>若有一个操作数是 NaN ，则返回 NaN ；</li>\n<li>若 Infinity - Infinity ，则返回 NaN ；</li>\n<li>若 Infinity - -Infinity ，则返回 NaN ；</li>\n<li>若 -Infinity - Infinity ，则返回 -Infinity ；</li>\n<li>若 +0 - +0 则返回 +0 ；</li>\n<li>若 +0 - -0 则返回 -0 ；</li>\n<li>若 -0 - -0 则返回 +0 ；</li>\n<li>若一个操作数是字符串、布尔值、Null、Undifined，则先在后台调用 Nmuber() 将其转换为数值，再执行减法运算;</li>\n<li>若有一个操作数是对象，则调用 valueOf() 将其转换为对象的数值，若没有 valueOf()，则调用 toString() 再继续减法运算。</li>\n</ul>\n<h3 id=\"关系操作符\"><a href=\"#关系操作符\" class=\"headerlink\" title=\"关系操作符\"></a>关系操作符</h3><p>关系操作符运算规则如下：</p>\n<ul>\n<li>若两操作数都是数值，则执行数值比较；</li>\n<li>若两个操作数都是字符串，则比较两个字符串相应的字符编码值；</li>\n<li>若一个操作数是数值，则将两一个操作数转换为数值；</li>\n<li>若一个操作数是对象，则调用这个对象的 valueOf() 方法，用得到的结果按照前面的规则进行比较，如果没有 valueOf() 方法，则调用 toString() 方法进行比较；</li>\n<li>若一个操作数是布尔值，则将其转换为数值，再进行比较。</li>\n</ul>\n<p>注意在进行字符串比较时，实际比较的是两个字符串中对应位置的每个字符的字符编码值。经过一番比较之后，再返回一个布尔值。记住大写字母的编码值全部小于小写字母的字符编码。</p>\n<pre><code>var result = &quot;Brick&quot; &lt; &quot;alphabet&quot;; //true\nvar result = &quot;Brick&quot;.toLowerCase() &lt; &quot;alphabet&quot;.toLowerCase(); //false\nvar result = &quot;23&quot; &lt; &quot;3&quot;; //true\nvar result = &quot;23&quot; &lt; 3://false\nvar reslut = &quot;a&quot; &lt; 3; //false &quot;a&quot;被转换为 NaN\nvar result = NaN &lt; 3; //false\nvar result = NaN &gt;= 3; //false\n</code></pre><h3 id=\"相等操作符\"><a href=\"#相等操作符\" class=\"headerlink\" title=\"相等操作符\"></a>相等操作符</h3><h4 id=\"相等操作符-1\"><a href=\"#相等操作符-1\" class=\"headerlink\" title=\"相等操作符\"></a>相等操作符</h4><p>这两个操作符都会先转换操作数（通常称为强制转型），然后再比较它们的相等性。</p>\n<p>在转换不同的数据类型时，相等和不相等操作符遵循下列基本规则：</p>\n<ul>\n<li>如果有一个操作数是布尔值，则在比较相等性先将其转换为数值——false 为0, true 为1；</li>\n<li>如果一个操作数是字符串，另一个操作数是数值，在比较相等性先将字符串转换为数值；</li>\n<li><p>若一个操作数是对象，另一个不是，则调用 valueOf() 用得到的基本类型值按照前面的规则进行比较。这两个操作符在进行比较时要遵循下列<br>规则：</p>\n<ul>\n<li>null 和 underfined 是相等的；</li>\n<li>要比较相等性之前，不能将 null 和 undefined 转换成其他任何值；</li>\n<li>若一操作数是 NaN ，相等操作符返回 false ,即使两个操作符都是 NaN ，相等操作符也是返回 false 的；</li>\n<li>若两个操作数都是对象， 则比较它们是不是同一对象，若两操作数都指向同一对象，则相等操作符返回 true。</li>\n</ul>\n<p>|表达式|值|<br>|—————–|—————|<br>|null == undefined|           true|<br>|”NaN” == NaN     |           false|<br>|NaN == NaN|          flase|<br>|5 == NaN         |           false|<br>|false == 0|           true|<br>|true == 1|           true|<br>|true == 2|           false|<br>|undefined == 0 |           false|<br>|null == 0 |           false|<br>|”5” == 5 |           true|</p>\n</li>\n</ul>\n<p>至于全等和不全等，相对于相等和不相等的区别就是未经类型转换判断相等与否</p>\n<pre><code>null == undefined //true\nnull === undefined //false\n</code></pre><p>由于相等和不相等操作符存在类型转换问题，而为了保持代码中数据类型的完整性，推荐使用全等和不全等操作符。</p>\n<h3 id=\"逗号操作符\"><a href=\"#逗号操作符\" class=\"headerlink\" title=\"逗号操作符\"></a>逗号操作符</h3><p>使用逗号操作符可以在一条语句中执行多个操作，初次之外也可以用于赋值。逗号操作符总会返回表达式中的最后一项。</p>\n<h3 id=\"for-in-语句\"><a href=\"#for-in-语句\" class=\"headerlink\" title=\"for-in 语句\"></a>for-in 语句</h3><p>for-in　语句是一种精确的迭代语句，可以用来枚举对象的属性。</p>\n<pre><code>for (property in expression) statement\n</code></pre><p>ECMAScript 对象的属性没有顺序。因此，通过 for-in 循环输出的属性名的顺序是不可预测的。具体来讲，所有属性都会被返回一次，但返回的先后次序可能会因浏览器而异。若表示要迭代的对象的变量值为 null 或者 undefined ，for-in 语句会抛出错误。ECMAScript5 更正此行为，对于此种情况不抛出错误而是不再执行循环体。所以建议使用 for-in 循环前，先检测确认对象是不是 null  或者 undefined。</p>\n<h3 id=\"break-和-continue\"><a href=\"#break-和-continue\" class=\"headerlink\" title=\"break 和 continue\"></a>break 和 continue</h3><p>break 和 continue 语句运行在循环中用于精确的控制代码的执行。 其中， break 语句会立即退出循环，强制继续执行循环后面的语句。而 continue 语句虽然也是立即退出循环，但退出循环后从循环的顶部继续执行。</p>\n<h3 id=\"switch-语句\"><a href=\"#switch-语句\" class=\"headerlink\" title=\"switch 语句\"></a>switch 语句</h3><p>switch 语句在比较值时，使用全等操作符，不会产生类型转换。</p>\n<h3 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h3><p>函数会在执行 return 语句之后停止并立即退出。return 语句也不可以不带有任何返回值，在这种情况下，函数在停止执行后将返回 underfined 值。这种用法一般用在需要提前停止函数执行而又不需要返回值的情况下。</p>\n<h3 id=\"理解参数\"><a href=\"#理解参数\" class=\"headerlink\" title=\"理解参数\"></a>理解参数</h3><p>ECMAScript 不介意传进函数的参数是多少个，也不在乎传进来的参数是什么数据类型。<br>ECMAScript 中的参数在内部时用一个数组来表示的额。函数接收的始终是这个数组，而不关心数组中包含哪些参数（如果有参数的额话）。实际上，函数体内通过arguments 对象来访问这个参数数组，从而获取传递给函数的每一个参数。通过访问 arguments 对象的 length 属性可以获知有多少个参数传递给了函数。没有传递至的命令参数将自动被赋予 undefined 值。 ECMAScript 中的所有参数传递的都是值，不可能通过引用传递参数。</p>\n<h3 id=\"没有重载\"><a href=\"#没有重载\" class=\"headerlink\" title=\"没有重载\"></a>没有重载</h3><p>如果在 ECMAScript 中定义了两个名字相同的函数，则该名字只属于后定义的函数。</p>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><ul>\n<li>ECMASript 中基本数据类型包括 Underfined Null Number String Boolean</li>\n<li>无需指定函数的返回值，因为任何 ECMAScript 函数都尅在任何时候返回任何值</li>\n<li>未指定返回值的函数返回的是一个特殊的 undefined 值</li>\n<li>ECMAScript 中没有函数签名的概念，因为其函数参数是以一个包含零或多个值的数组的形式传递的，</li>\n<li>可以想ECMAScript 函数传递任意数量的参数，并且可以通过 arguments 对象来访问这些参数</li>\n<li>由于不存在函数签名的特性，ECMAScript 函数不能重载。</li>\n</ul>\n"},{"title":"JavaScript高级程序设计学习笔记(2)","url":"http://padding.me/blog/2014/09/03/Professional-JavaScript-for-Web-Developers-learning-notes-2/","content":"<h2 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h2><p>###标识符</p>\n<p>所谓标识符，就是指变量、函数、属性的名字，或者函数的参数。标识符可以是按照下列格式规则组合起来的一个或多个字符：</p>\n<ul>\n<li>第一个字符必须是一个字母、下划线、或者一个美元符号；</li>\n<li>其他字符可以是字母、下划线、美元符号或者数字。</li>\n</ul>\n<h3 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h3><p>ECMAScript 的变量是松散的，所谓松散类型就是可以用来保存任何类型的数据，亦即每个变量仅仅是一个用于保存值的占位符而已。</p>\n<h3 id=\"数据类型-1\"><a href=\"#数据类型-1\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h3><p>ECMAScript 中有五种简单数据类型：<strong>Undefined</strong>、 <strong>Null</strong>、 <strong>Number</strong>、 <strong>String</strong>、 <strong>Boolean</strong>。<br>还有一种复杂数据类型：<strong>Obejct</strong>。</p>\n<h4 id=\"typeof\"><a href=\"#typeof\" class=\"headerlink\" title=\"typeof\"></a>typeof</h4><p><code>typeof</code> 用来检测给定变量的数据类型,对一个值使用<code>typeof</code>操作符可能返回如下字符串：</p>\n<ul>\n<li>“undefined”——值未定义；</li>\n<li>“boolean”——布尔值；</li>\n<li>“string”——字符串；</li>\n<li>“number”——数字；</li>\n<li>“object”——对象或者null(空指针)；</li>\n<li>“function”——函数。</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">console.log(typeof null);//&quot;object&quot;</span><br></pre></td></tr></table></figure>\n<p>特殊值<code>null</code>被认为是一个空的对象引用。Safari 以及之前版本、Chrome 7以及之前版本对正则表达式跳动 <code>typeof</code> 返回 “function”，而其他浏览器返回 “object”。</p>\n<h4 id=\"Undefined\"><a href=\"#Undefined\" class=\"headerlink\" title=\"Undefined\"></a>Undefined</h4><p>对于尚未声明过的变量，只能执行一项操作，即是对其使用<code>typeof</code>操作符检验器数据类型。</p>\n<p>对未初始化过的变量执行<code>typeof</code> 返回”undefied”；而对未声明过的变量执行也返回”undefined”.</p>\n<h4 id=\"Null\"><a href=\"#Null\" class=\"headerlink\" title=\"Null\"></a>Null</h4><p>如果定义的变量准备在将来用于保存对象，那么最好将该变量初始化为<code>null</code>。</p>\n<h4 id=\"Boolean\"><a href=\"#Boolean\" class=\"headerlink\" title=\"Boolean\"></a>Boolean</h4><table>\n<thead>\n<tr>\n<th>数据类型</th>\n<th>转换为true 的值</th>\n<th>转换为false 的值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Boolean</td>\n<td>true</td>\n<td>false</td>\n</tr>\n<tr>\n<td>String</td>\n<td>任何非空字符串</td>\n<td>“”(空字符串)</td>\n</tr>\n<tr>\n<td>Number</td>\n<td>任何非零数字包含无穷大</td>\n<td>0和NaN</td>\n</tr>\n<tr>\n<td>Object</td>\n<td>任何对象</td>\n<td>null</td>\n</tr>\n<tr>\n<td>Undefined</td>\n<td></td>\n<td>undefined</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"Number\"><a href=\"#Number\" class=\"headerlink\" title=\"Number\"></a>Number</h4><ol>\n<li><p>浮点数</p>\n<p> 所谓浮点数，是指该数值中必须包含一个小数点，且小数点后面必须至少有一位数字。如果浮点数本身就是一个整数（如1.0）,那么该值将被转换为整数。</p>\n<p> 浮点数值的最高精度是17位小数，但在进行算术计算时其精确度远远不如整数，例如0.1+0.2结果不是0.3而是0.30000000000000004，如果这两个数是0.15+0.15或者0.25+0.05则没有问题。</p>\n</li>\n<li><p>数值范围</p>\n<p> 数值范围为Infinity 和 -Infinity，可使用 isFinite() 函数检测。</p>\n</li>\n<li><p>NaN</p>\n<p> 任何值除以0都会返回 NaN(not a number) ，任何涉及NaN 的操作都返回 NaN，其次 NaN 与任何值都不相等， 包括 NaN 本身。 isNaN()函数进行检测，在接收一个数值之后会尝试进行转换为数值，某些不是数值的值会被转换为数值，如”10”或布尔值，任何不能被转换为数值的值则返回true。</p>\n<p> isNaN 也适用于对象，在基于对象调用 isNaN() 函数时， 会首先调用对象的 valueOf() 方法， 然后确定该方法返回的值是否可以转换为数值，如果不能，则基于这个返回值再调用 toString() 方法，再测试返回值。</p>\n</li>\n<li><p>数值转换</p>\n<p> 有三个函数可以把非数值转换为数值： Number()、 parsetInt()、 parseFloat()。<br> Number() 可以用于任何数据类型，而另外两个专门用于字符串转换成数值。</p>\n<p> Number() 转换规则：</p>\n<ul>\n<li>如是 Boolean， 转换为0或1；</li>\n<li>若是数字值，转换为数字值；</li>\n<li>若是null, 返回0；</li>\n<li>若是undefined, 返回 NaN;</li>\n<li>若是字符串，则：<ul>\n<li>若字符串只包含数字（包含带正号或负号的情况），则将其转换为十进制数值。</li>\n<li>若字符串包含有效的浮点数，转换为相应的浮点数。</li>\n<li>若包含有效的十六进制数，转换为相同大小的十进制数。</li>\n<li>若为空字符串，转换为0。</li>\n<li>若字符串包含上述， 则格式之外的字符，转换为 NaN 。</li>\n</ul>\n</li>\n<li><p>若是对象，则调用 valueOf()方法，然后按照前面的方法返回值，若转换结果为 NaN,则调用对象的 toString() 方法，然后在依照前面的规则返回相应的字符串值。</p>\n<p>parseInt() 函数在转换字符串时，会忽略字符串前面的空格， 直至找到第一个非空字符。如果第一个字符不是数字字符或者符号，则返回NaN,亦即<code>parseInt(&quot;&quot;)</code>返回NaN,若第一个字符是数字则继续解析第二个，知道解析玩所有后续字符或者遇到非数字字符。parseInt()后还可以跟一个参数，转换时使用的基数（2,8,10,16）。</p>\n<p>parseFloat() 始终忽略前导的零。十六进制的始终会被转换为0,只解析十进制。</p>\n</li>\n</ul>\n</li>\n</ol>\n<h4 id=\"String\"><a href=\"#String\" class=\"headerlink\" title=\"String\"></a>String</h4><p>任何字符串的长度都可以通过访问它的length 属性取得。</p>\n<p>字符串一段创建，他们的值就不可以改变。要改变某个变量保存的字符串，首先要销毁原来的字符串，然后再用另一个包含新值的字符串填充该变量。</p>\n<p>转换为字符串：每个值都有一个 toString()方法，但null 和undefined 没有。也可以传参数改变原来的值；还可以使用String()方法，其转换规则为：</p>\n<ul>\n<li>若值有toString()方法，则调用该方法返回值；</li>\n<li>若值为null,返回”null”;</li>\n<li>若值为undefined,返回”undefined”。</li>\n</ul>\n"},{"title":"JavaScript高级程序设计学习笔记(1)","url":"http://padding.me/blog/2014/09/02/Professional-Javascript-for-Web-Deveopers-learning-notes-1/","content":"<h3 id=\"JavaScript-简介\"><a href=\"#JavaScript-简介\" class=\"headerlink\" title=\"JavaScript 简介\"></a>JavaScript 简介</h3><p>JavaScript 的兴起，主要目的是处理以前由服务器端语言负责的一些输入验证操作，如今，JavaScript 已不再局限于简单的数据验证，而是具备了与浏览器窗口及其内容等几乎所有方面交互的能力。今天JavaScript 已经成为一门功能全面的编程语言，能够处理复杂的计算和交互，拥有了 <strong>闭包</strong>、<strong>匿名函数</strong>、甚至 <strong>元编程</strong>等特性。</p>\n<p>一个完整的JavaScript 实现通常有三部分组成：</p>\n<ul>\n<li>核心(ECMAScript)，由ECMA-262 定义，提供核心语言功能；</li>\n<li>文档浏览器模型(DOM)，提供访问和操作网页内容的方法和接口；</li>\n<li>浏览器对象模型(BOM)，提供与浏览器交互的方法和接口。<br>我们常见的Web 浏览器只是ECMAScript实现可能的 <em>宿主环境</em>之一。而Web 浏览器对DOM的支持，对于IE来说，IE5.5 支持DOM1 级。在随后的IE6、IE7中没有引入新的DOM 功能，知道IE8 才对以前DOM实现中的bug 进行修复。</li>\n</ul>\n<h3 id=\"在HTML-中使用JavaScript\"><a href=\"#在HTML-中使用JavaScript\" class=\"headerlink\" title=\"在HTML 中使用JavaScript\"></a>在HTML 中使用JavaScript</h3><p>HTML4.01为<code>&lt;script&gt;</code>定义了6个属性(废弃的这里不再给出)：</p>\n<ul>\n<li>async: 可选，表示应该立即下载脚本，但不应妨碍页面中得去他操作；</li>\n<li>defer: 可选，表示脚本可以延迟到文档完全被解析和显示之后再执行，只对外部脚本有效；</li>\n<li>src: 可选，外部脚本文件；</li>\n<li>type: 可选，表示编写代码使用的脚本语言的内容类型（MIME），通常为 text/javascript ,默认也为 text/javascript。</li>\n</ul>\n<p>使用<code>&lt;javascript&gt;</code>元素有两种方式:</p>\n<ul>\n<li>直接在页面嵌入 JavaScript 代码；</li>\n<li>包含外部 JavaScript 文件。</li>\n</ul>\n<p>包含在<code>&lt;script&gt;</code>元素内部的JavaScript 代码将从上至下依次解释。在解释器 <code>&lt;script&gt;</code> 元素内部的所有的代码求值完毕以前，页面中的其余内容将不会被浏览器加载或显示。</p>\n<p>在使用<code>&lt;script&gt;</code>嵌入 Javascript 代码时，记住不要再代码的任何地方出现 <code>&quot;&lt;/script&gt;&quot;</code>字符串，浏览器会认为这是结束的<code>&lt;/script&gt;</code>标签。</p>\n<p>无论如何包含代码，只要不存在<code>defer</code>或者<code>async</code>属性，浏览器都会按照<code>&lt;script&gt;</code>元素所在页面中出现的先后顺序对它们依次进行解析。</p>\n<p><code>defer</code>属性只适用于外部脚本文件，现实中，延迟脚本并不一定会按照顺序进行(第一个延迟脚本先于第二个延迟脚本执行)，也不一定会在 DOMContentLoaded 事件触发前执行，因为最好只包含一个延迟脚本。</p>\n<p>异步脚本同样只适用于外部脚本文件，并告诉浏览器立即下载文件，异步脚本并不保证按照它们的先后顺序执行。 异步脚本一定会在页面的load 事件前执行，但可能会在 DOMContentLoaded 事件触发之前或之后执行。</p>\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;zh-cn&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;title&gt;Document&lt;/title&gt;\n    &lt;script type=&quot;text/javascript&quot; defer=&quot;defer&quot; src=&quot;example.js&quot;&gt;&lt;/script&gt;\n    &lt;script type=&quot;text/javascript&quot; async src=&quot;example.js&quot;&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;noscript&gt;\n     &lt;p&gt;本页面需要浏览器支持 JavaScript!&lt;/p&gt;\n    &lt;/noscript&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p>适用外部脚本文件通常会有如下优点：</p>\n<ul>\n<li>易于维护</li>\n<li>可缓存</li>\n<li>适应未来(不需要hack)</li>\n</ul>\n"},{"title":"HTML head 头标签","url":"http://padding.me/blog/2014/08/26/html-head-tags/","content":"<p>HTML head 头部分的标签、元素有很多，涉及到浏览器对网页的渲染，SEO 等等，而各个浏览器内核以及各个国内浏览器厂商都有些自己的标签元素,这就造成了很多差异性。移动互联网时代，head 头部结构，移动端的 meta 元素，显得更为重要。了解每个标签的意义，写出满足自己需求的 head  头标签，是本文的目的。本篇以<a href=\"https://github.com/yisibl/blog/issues/1\" target=\"_blank\" rel=\"external\">一丝的文章</a>为基础，进行扩展总结介绍常用的 head 中各个标签、元素的意义以及使用场景。</p>\n<h3 id=\"DOCTYPE\"><a href=\"#DOCTYPE\" class=\"headerlink\" title=\"DOCTYPE\"></a>DOCTYPE</h3><p>DOCTYPE(Document Type)，该声明位于文档中最前面的位置，处于 <code>html</code> 标签之前，此标签告知浏览器文档使用哪种 HTML 或者 XHTML 规范。</p>\n<p>DTD(Document Type Definition) 声明以 <code>&lt;!DOCTYPE&gt;</code> 开始，不区分大小写，前面没有任何内容，如果有其他内容(空格除外)会使浏览器在 IE 下开启怪异模式(quirks mode)渲染网页。公共 DTD，名称格式为<code>注册//组织//类型 标签//语言</code>,<code>注册</code>指组织是否由国际标准化组织(ISO)注册，<code>+</code>表示是，<code>-</code>表示不是。<code>组织</code>即组织名称，如：W3C。<code>类型</code>一般是 DTD。<code>标签</code>是指定公开文本描述，即对所引用的公开文本的唯一描述性名称，后面可附带版本号。最后<code>语言</code>是 DTD 语言的 ISO 639 语言标识符，如：EN 表示英文，ZH 表示中文。XHTML 1.0 可声明三种 DTD 类型。分别表示严格版本，过渡版本，以及基于框架的 HTML 文档。</p>\n<ul>\n<li><p>HTML 4.01 strict</p>\n<pre><code>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01//EN&quot; &quot;http://www.w3.org/TR/html4/strict.dtd&quot;&gt;\n</code></pre></li>\n<li><p>HTML 4.01 Transitional</p>\n<pre><code>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;\n</code></pre></li>\n<li><p>HTML 4.01 Frameset</p>\n<pre><code>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Frameset//EN&quot; &quot;http://www.w3.org/TR/html4/frameset.dtd&quot;&gt;\n</code></pre></li>\n<li><p>最新 HTML5 推出更加简洁的书写，它向前向后兼容，推荐使用。</p>\n<pre><code>&lt;!doctype html&gt;\n</code></pre></li>\n</ul>\n<p>在 HTML中 <code>doctype</code> 有两个主要目的。</p>\n<ul>\n<li><p>对文档进行有效性验证。</p>\n<p> 它告诉用户代理和校验器这个文档是按照什么 DTD 写的。这个动作是被动的，每次页面加载时，浏览器并不会下载 DTD 并检查合法性，只有当手动校验页面时才启用。</p>\n</li>\n<li><p>决定浏览器的呈现模式</p>\n<p>  对于实际操作，通知浏览器读取文档时用哪种解析算法。如果没有写，则浏览器则根据自身的规则对代码进行解析，可能会严重影响 html 排版布局。浏览器有三种方式解析 HTML 文档。</p>\n<ul>\n<li>非怪异（标准）模式</li>\n<li>怪异模式</li>\n<li>部分怪异（近乎标准）模式<br>关于IE浏览器的文档模式，浏览器模式，严格模式，怪异模式，DOCTYPE 标签，可详细阅读<a href=\"http://padding.me/blog/2014/07/04/mode-or-standard/\">模式？标准！</a>的内容。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"charset\"><a href=\"#charset\" class=\"headerlink\" title=\"charset\"></a>charset</h3><p>声明文档使用的字符编码，</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"utf-8\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>html5 之前网页中会这样写：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Content-Type\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"text/html; charset=utf-8\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>这两个是等效的，具体可移步阅读：<a href=\"http://stackoverflow.com/questions/4696499/meta-charset-utf-8-vs-meta-http-equiv-content-type\" target=\"_blank\" rel=\"external\"><code>&lt;meta charset=&#39;utf-8&#39;&gt;</code> vs <code>&lt;meta http-equiv=&#39;Content-Type&#39;&gt;</code></a>，所以建议使用较短的，易于记忆。</p>\n<h3 id=\"lang属性\"><a href=\"#lang属性\" class=\"headerlink\" title=\"lang属性\"></a>lang属性</h3><p>简体中文</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"zh-cmn-Hans\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>繁体中文</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"zh-cmn-Hant\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>为什么 <code>lang=&quot;zh-cmn-Hans&quot;</code> 而不是我们通常写的 <code>lang=&quot;zh-CN&quot;</code> 呢，请移步阅读: <a href=\"http://zhi.hu/XyIa\" target=\"_blank\" rel=\"external\">页头部的声明应该是用 lang=”zh” 还是 lang=”zh-cn”</a>。</p>\n<h3 id=\"优先使用-IE-最新版本和-Chrome\"><a href=\"#优先使用-IE-最新版本和-Chrome\" class=\"headerlink\" title=\"优先使用 IE 最新版本和 Chrome\"></a>优先使用 IE 最新版本和 Chrome</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"IE=edge,chrome=1\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"360-使用Google-Chrome-Frame\"><a href=\"#360-使用Google-Chrome-Frame\" class=\"headerlink\" title=\"360 使用Google Chrome Frame\"></a>360 使用Google Chrome Frame</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"renderer\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"webkit\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>360 浏览器就会在读取到这个标签后，立即切换对应的极速核。<br>另外为了保险起见再加入</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"IE=Edge,chrome=1\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>这样写可以达到的效果是如果安装了 Google Chrome Frame，则使用 GCF 来渲染页面，如果没有安装 GCF，则使用最高版本的 IE 内核进行渲染。</p>\n<p>相关链接：<a href=\"http://se.360.cn/v6/help/meta.html\" target=\"_blank\" rel=\"external\">浏览器内核控制 Meta 标签说明文档</a></p>\n<h3 id=\"百度禁止转码\"><a href=\"#百度禁止转码\" class=\"headerlink\" title=\"百度禁止转码\"></a>百度禁止转码</h3><p>通过百度手机打开网页时，百度可能会对你的网页进行转码，脱下你的衣服，往你的身上贴狗皮膏药的广告，为此可在 head 内添加</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Cache-Control\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"no-siteapp\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n<p>相关链接：<a href=\"http://m.baidu.com/pub/help.php?pn=22&amp;ssid=0&amp;from=844b&amp;bd_page_type=1\" target=\"_blank\" rel=\"external\">SiteApp 转码声明</a></p>\n<h3 id=\"SEO-优化部分\"><a href=\"#SEO-优化部分\" class=\"headerlink\" title=\"SEO 优化部分\"></a>SEO 优化部分</h3><ul>\n<li><p>页面标题<code>&lt;title&gt;</code>标签(head 头部必须)</p>\n<pre><code>&lt;title&gt;your title&lt;/title&gt;\n</code></pre></li>\n<li><p>页面关键词 keywords</p>\n<pre><code>&lt;meta name=&quot;keywords&quot; content=&quot;your keywords&quot;&gt;\n</code></pre></li>\n<li><p>页面描述内容 description</p>\n<pre><code>&lt;meta name=&quot;description&quot; content=&quot;your description&quot;&gt;\n</code></pre></li>\n<li><p>定义网页作者 author</p>\n<pre><code>&lt;meta name=&quot;author&quot; content=&quot;author,email address&quot;&gt;\n</code></pre></li>\n<li><p>定义网页搜索引擎索引方式，robotterms 是一组使用英文逗号「,」分割的值，通常有如下几种取值：none，noindex，nofollow，all，index和follow。</p>\n<pre><code>&lt;meta name=&quot;robots&quot; content=&quot;index,follow&quot;&gt;\n</code></pre></li>\n</ul>\n<p>相关链接：<a href=\"http://msdn.microsoft.com/zh-cn/library/ff724037\\(v=expression.40\\\" target=\"_blank\" rel=\"external\">WEB1038 - <meta name=\"robots\"> 标记包含无效的值</a>.aspx)</p>\n<h3 id=\"viewport\"><a href=\"#viewport\" class=\"headerlink\" title=\"viewport\"></a>viewport</h3><p><code>viewport</code> 可以让布局在移动浏览器上显示的更好。<br>通常会写</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><code>width=device-width</code> 会导致 iPhone 5 添加到主屏后以 WebApp 全屏模式打开页面时出现黑边(<a href=\"http://bigc.at/ios-webapp-viewport-meta.orz\" target=\"_blank\" rel=\"external\">http://bigc.at/ios-webapp-viewport-meta.orz</a>)</p>\n<p>content 参数：</p>\n<ul>\n<li>width viewport 宽度(数值/device-width)</li>\n<li>height viewport 高度(数值/device-height)</li>\n<li>initial-scale 初始缩放比例</li>\n<li>maximum-scale 最大缩放比例</li>\n<li>minimum-scale 最小缩放比例</li>\n<li>user-scalable 是否允许用户缩放(yes/no)</li>\n<li><p>minimal-ui iOS 7.1 beta 2 中新增属性，可以在页面加载时最小化上下状态栏。这是一个布尔值，可以直接这样写：</p>\n<pre><code>&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1, minimal-ui&quot;&gt;\n</code></pre></li>\n</ul>\n<p>而如果你的网站不是响应式的，请不要使用 initial-scale 或者禁用缩放。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width,user-scalable=yes\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>相关链接：<a href=\"http://www.qianduan.net/non-responsive-design-viewport.html\" target=\"_blank\" rel=\"external\">非响应式设计的viewport</a></p>\n<p>适配 iPhone 6 和 iPhone 6plus 则需要写：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=375\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=414\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>大部分 4.7~5 寸的安卓设备的 viewport 宽设为 360px，iPhone 6 上却是 375px，大部分 5.5 寸安卓机器（比如说三星 Note）的 viewport 宽为 400，iPhone 6 plus 上是 414px。</p>\n<h3 id=\"ios-设备\"><a href=\"#ios-设备\" class=\"headerlink\" title=\"ios 设备\"></a>ios 设备</h3><p>添加到主屏后的标题（iOS 6 新增）</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"apple-mobile-web-app-title\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"标题\"</span>&gt;</span> <span class=\"comment\">&lt;!-- 添加到主屏后的标题（iOS 6 新增） --&gt;</span></span><br></pre></td></tr></table></figure>\n<p>是否启用 WebApp 全屏模式</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"apple-mobile-web-app-capable\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"yes\"</span> /&gt;</span> <span class=\"comment\">&lt;!-- 是否启用 WebApp 全屏模式 --&gt;</span></span><br></pre></td></tr></table></figure>\n<p>设置状态栏的背景颜色</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"apple-mobile-web-app-status-bar-style\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"black-translucent\"</span> /&gt;</span> <span class=\"comment\">&lt;!-- 设置状态栏的背景颜色，只有在 `\"apple-mobile-web-app-capable\" content=\"yes\"` 时生效 --&gt;</span></span><br></pre></td></tr></table></figure>\n<p>只有在 “apple-mobile-web-app-capable” content=”yes” 时生效</p>\n<p>content 参数：</p>\n<ul>\n<li>default 默认值。</li>\n<li>black 状态栏背景是黑色。</li>\n<li>black-translucent 状态栏背景是黑色半透明。<br>如果设置为 default 或 black ,网页内容从状态栏底部开始。<br>如果设置为 black-translucent ,网页内容充满整个屏幕，顶部会被状态栏遮挡。</li>\n</ul>\n<p>禁止数字识自动别为电话号码</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"format-detection\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"telephone=no\"</span> /&gt;</span> <span class=\"comment\">&lt;!-- 禁止数字识自动别为电话号码 --&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"iOS-图标\"><a href=\"#iOS-图标\" class=\"headerlink\" title=\"iOS 图标\"></a>iOS 图标</h3><p>rel 参数：<br>apple-touch-icon 图片自动处理成圆角和高光等效果。<br>apple-touch-icon-precomposed 禁止系统自动添加效果，直接显示设计原图。<br>iPhone 和 iTouch，默认 57x57 像素，必须有</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"apple-touch-icon-precomposed\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/apple-touch-icon-57x57-precomposed.png\"</span> /&gt;</span> <span class=\"comment\">&lt;!-- iPhone 和 iTouch，默认 57x57 像素，必须有 --&gt;</span></span><br></pre></td></tr></table></figure>\n<p>iPad，72x72 像素，可以没有，但推荐有</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"apple-touch-icon-precomposed\"</span> <span class=\"attr\">sizes</span>=<span class=\"string\">\"72x72\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/apple-touch-icon-72x72-precomposed.png\"</span> /&gt;</span> <span class=\"comment\">&lt;!-- iPad，72x72 像素，可以没有，但推荐有 --&gt;</span></span><br></pre></td></tr></table></figure>\n<p>Retina iPhone 和 Retina iTouch，114x114 像素，可以没有，但推荐有</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"apple-touch-icon-precomposed\"</span> <span class=\"attr\">sizes</span>=<span class=\"string\">\"114x114\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/apple-touch-icon-114x114-precomposed.png\"</span> /&gt;</span> <span class=\"comment\">&lt;!-- Retina iPhone 和 Retina iTouch，114x114 像素，可以没有，但推荐有 --&gt;</span></span><br></pre></td></tr></table></figure>\n<p>Retina iPad，144x144 像素，可以没有，但推荐有</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"apple-touch-icon-precomposed\"</span> <span class=\"attr\">sizes</span>=<span class=\"string\">\"144x144\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/apple-touch-icon-144x144-precomposed.png\"</span> /&gt;</span> <span class=\"comment\">&lt;!-- Retina iPad，144x144 像素，可以没有，但推荐有 --&gt;</span></span><br></pre></td></tr></table></figure>\n<p>IOS 图标大小在iPhone 6 plus上是180×180，iPhone 6 是120x120。<br>适配iPhone 6 plus，则需要在<head>中加上这段</head></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"apple-touch-icon-precomposed\"</span> <span class=\"attr\">sizes</span>=<span class=\"string\">\"180x180\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"retinahd_icon.png\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>###iOS 启动画面</p>\n<p>官方文档：<a href=\"https://developer.apple.com/library/ios/qa/qa1686/_index.html\" target=\"_blank\" rel=\"external\">https://developer.apple.com/library/ios/qa/qa1686/_index.html</a><br>参考文章：<a href=\"http://wxd.ctrip.com/blog/2013/09/ios7-hig-24/\" target=\"_blank\" rel=\"external\">http://wxd.ctrip.com/blog/2013/09/ios7-hig-24/</a></p>\n<p>iPad 的启动画面是不包括状态栏区域的。</p>\n<p>iPad 竖屏 768 x 1004（标准分辨率）</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"apple-touch-startup-image\"</span> <span class=\"attr\">sizes</span>=<span class=\"string\">\"768x1004\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/splash-screen-768x1004.png\"</span> /&gt;</span> <span class=\"comment\">&lt;!-- iPad 竖屏 768 x 1004（标准分辨率） --&gt;</span></span><br></pre></td></tr></table></figure>\n<p>iPad 竖屏 1536x2008（Retina）</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"apple-touch-startup-image\"</span> <span class=\"attr\">sizes</span>=<span class=\"string\">\"1536x2008\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/splash-screen-1536x2008.png\"</span> /&gt;</span> <span class=\"comment\">&lt;!-- iPad 竖屏 1536x2008（Retina） --&gt;</span></span><br></pre></td></tr></table></figure>\n<p>iPad 横屏 1024x748（标准分辨率）</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"apple-touch-startup-image\"</span> <span class=\"attr\">sizes</span>=<span class=\"string\">\"1024x748\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/Default-Portrait-1024x748.png\"</span> /&gt;</span> <span class=\"comment\">&lt;!-- iPad 横屏 1024x748（标准分辨率） --&gt;</span></span><br></pre></td></tr></table></figure>\n<p>iPad 横屏 2048x1496（Retina）</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"apple-touch-startup-image\"</span> <span class=\"attr\">sizes</span>=<span class=\"string\">\"2048x1496\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/splash-screen-2048x1496.png\"</span> /&gt;</span> <span class=\"comment\">&lt;!-- iPad 横屏 2048x1496（Retina） --&gt;</span></span><br></pre></td></tr></table></figure>\n<p>iPhone 和 iPod touch 的启动画面是包含状态栏区域的。</p>\n<p>iPhone/iPod Touch 竖屏 320x480 (标准分辨率)</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"apple-touch-startup-image\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/splash-screen-320x480.png\"</span> /&gt;</span> <span class=\"comment\">&lt;!-- iPhone/iPod Touch 竖屏 320x480 (标准分辨率) --&gt;</span></span><br></pre></td></tr></table></figure>\n<p>iPhone/iPod Touch 竖屏 640x960 (Retina)</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"apple-touch-startup-image\"</span> <span class=\"attr\">sizes</span>=<span class=\"string\">\"640x960\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/splash-screen-640x960.png\"</span> /&gt;</span> <span class=\"comment\">&lt;!-- iPhone/iPod Touch 竖屏 640x960 (Retina) --&gt;</span></span><br></pre></td></tr></table></figure>\n<p>iPhone 5/iPod Touch 5 竖屏 640x1136 (Retina)</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"apple-touch-startup-image\"</span> <span class=\"attr\">sizes</span>=<span class=\"string\">\"640x1136\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/splash-screen-640x1136.png\"</span> /&gt;</span> <span class=\"comment\">&lt;!-- iPhone 5/iPod Touch 5 竖屏 640x1136 (Retina) --&gt;</span></span><br></pre></td></tr></table></figure>\n<p>添加智能 App 广告条 Smart App Banner（iOS 6+ Safari）</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"apple-itunes-app\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"app-id=myAppStoreID, affiliate-data=myAffiliateData, app-argument=myURL\"</span>&gt;</span> <span class=\"comment\">&lt;!-- 添加智能 App 广告条 Smart App Banner（iOS 6+ Safari） --&gt;</span></span><br></pre></td></tr></table></figure>\n<p>iPhone 6对应的图片大小是750×1294，iPhone 6 Plus 对应的是1242×2148 。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"apple-touch-startup-image\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"launch6.png\"</span> <span class=\"attr\">media</span>=<span class=\"string\">\"(device-width: 375px)\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"apple-touch-startup-image\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"launch6plus.png\"</span> <span class=\"attr\">media</span>=<span class=\"string\">\"(device-width: 414px)\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Windows-8\"><a href=\"#Windows-8\" class=\"headerlink\" title=\"Windows 8\"></a>Windows 8</h3><p>Windows 8 磁贴颜色</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"msapplication-TileColor\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"#000\"</span>/&gt;</span> <span class=\"comment\">&lt;!-- Windows 8 磁贴颜色 --&gt;</span></span><br></pre></td></tr></table></figure>\n<p>Windows 8 磁贴图标</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"msapplication-TileImage\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"icon.png\"</span>/&gt;</span> <span class=\"comment\">&lt;!-- Windows 8 磁贴图标 --&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"rss订阅\"><a href=\"#rss订阅\" class=\"headerlink\" title=\"rss订阅\"></a>rss订阅</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"alternate\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"application/rss+xml\"</span> <span class=\"attr\">title</span>=<span class=\"string\">\"RSS\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/rss.xml\"</span> /&gt;</span> <span class=\"comment\">&lt;!-- 添加 RSS 订阅 --&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"favicon-icon\"><a href=\"#favicon-icon\" class=\"headerlink\" title=\"favicon icon\"></a>favicon icon</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"shortcut icon\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"image/ico\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/favicon.ico\"</span> /&gt;</span> <span class=\"comment\">&lt;!-- 添加 favicon icon --&gt;</span></span><br></pre></td></tr></table></figure>\n<p>比较详细的 favicon 介绍可参考<a href=\"https://github.com/audreyr/favicon-cheat-sheet\" target=\"_blank\" rel=\"external\">https://github.com/audreyr/favicon-cheat-sheet</a></p>\n<h3 id=\"移动端的meta\"><a href=\"#移动端的meta\" class=\"headerlink\" title=\"移动端的meta\"></a>移动端的meta</h3><pre><code>&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1, user-scalable=no&quot; /&gt;\n&lt;meta name=&quot;apple-mobile-web-app-capable&quot; content=&quot;yes&quot; /&gt;\n&lt;meta name=&quot;apple-mobile-web-app-status-bar-style&quot; content=&quot;black&quot; /&gt;\n&lt;meta name=&quot;format-detection&quot;content=&quot;telephone=no, email=no&quot; /&gt;\n&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1, user-scalable=no&quot; /&gt;\n&lt;meta name=&quot;apple-mobile-web-app-capable&quot; content=&quot;yes&quot; /&gt;&lt;!-- 删除苹果默认的工具栏和菜单栏 --&gt;\n&lt;meta name=&quot;apple-mobile-web-app-status-bar-style&quot; content=&quot;black&quot; /&gt;&lt;!-- 设置苹果工具栏颜色 --&gt;\n&lt;meta name=&quot;format-detection&quot; content=&quot;telphone=no, email=no&quot; /&gt;&lt;!-- 忽略页面中的数字识别为电话，忽略email识别 --&gt;\n&lt;!-- 启用360浏览器的极速模式(webkit) --&gt;\n&lt;meta name=&quot;renderer&quot; content=&quot;webkit&quot;&gt;\n&lt;!-- 避免IE使用兼容模式 --&gt;\n&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;\n&lt;!-- 针对手持设备优化，主要是针对一些老的不识别viewport的浏览器，比如黑莓 --&gt;\n&lt;meta name=&quot;HandheldFriendly&quot; content=&quot;true&quot;&gt;\n&lt;!-- 微软的老式浏览器 --&gt;\n&lt;meta name=&quot;MobileOptimized&quot; content=&quot;320&quot;&gt;\n&lt;!-- uc强制竖屏 --&gt;\n&lt;meta name=&quot;screen-orientation&quot; content=&quot;portrait&quot;&gt;\n&lt;!-- QQ强制竖屏 --&gt;\n&lt;meta name=&quot;x5-orientation&quot; content=&quot;portrait&quot;&gt;\n&lt;!-- UC强制全屏 --&gt;\n&lt;meta name=&quot;full-screen&quot; content=&quot;yes&quot;&gt;\n&lt;!-- QQ强制全屏 --&gt;\n&lt;meta name=&quot;x5-fullscreen&quot; content=&quot;true&quot;&gt;\n&lt;!-- UC应用模式 --&gt;\n&lt;meta name=&quot;browsermode&quot; content=&quot;application&quot;&gt;\n&lt;!-- QQ应用模式 --&gt;\n&lt;meta name=&quot;x5-page-mode&quot; content=&quot;app&quot;&gt;\n&lt;!-- windows phone 点击无高光 --&gt;\n&lt;meta name=&quot;msapplication-tap-highlight&quot; content=&quot;no&quot;&gt;\n&lt;!-- 适应移动端end --&gt;\n</code></pre><p>这是来自 <a href=\"http://weibo.com/toooobug\" target=\"_blank\" rel=\"external\">toobug</a> 的分享总结。</p>\n<p>更多的 meta 标签参考</p>\n<ul>\n<li><a href=\"http://code.lancepollard.com/complete-list-of-html-meta-tags/\" target=\"_blank\" rel=\"external\">COMPLETE LIST OF HTML META TAGS</a></li>\n<li><a href=\"http://www.iacquire.com/blog/18-meta-tags-every-webpage-should-have-in-2013\" target=\"_blank\" rel=\"external\">18 Meta Tags Every Webpage Should Have in 2013</a></li>\n</ul>\n<p>参考文章：</p>\n<ul>\n<li><a href=\"https://github.com/yisibl/blog/issues/1\" target=\"_blank\" rel=\"external\">常用的 HTML 头部标签</a></li>\n<li><a href=\"https://gist.github.com/paddingme/6182708733917ae36331\" target=\"_blank\" rel=\"external\">html5_header</a></li>\n<li><a href=\"http://amazeui.org/css/\" target=\"_blank\" rel=\"external\">amazeui css</a></li>\n<li><a href=\"http://www.douban.com/note/170560091/\" target=\"_blank\" rel=\"external\">DOCTYPE</a></li>\n<li><a href=\"http://www.uisdc.com/ios8-ten-new-feature\" target=\"_blank\" rel=\"external\">WEB 工程师和设计师必学的 10 个 IOS 8 新鲜改变</a></li>\n</ul>\n"},{"title":"模式？标准！","url":"http://padding.me/blog/2014/07/04/mode-or-standard/","content":"<figure><img src=\"http://paddingme.qiniudn.com/taskbar.jpg\" alt=\"电脑桌面任务栏\"><figcaption>高(菜)端(鸟)front-end程序员的电脑桌面任务栏</figcaption></figure>\n\n\n<p>最近在工作中经常遇到浏览器兼容性的问题，让我焦头烂额，这里总结下浏览器的严格模式和怪异模式以及IE浏览下的文档模式和浏览器模式等内容。</p>\n<h3 id=\"严格模式和怪异模式\"><a href=\"#严格模式和怪异模式\" class=\"headerlink\" title=\"严格模式和怪异模式\"></a>严格模式和怪异模式</h3><p>现代浏览器一般具有多种渲染模式：</p>\n<p> 在“标准模式”(standards mode) 页面按照 HTML 与 CSS 的定义渲染，而在“怪异模式(quirks mode) 模式”中则尝试模拟更旧的浏览器的行为。 一些浏览器（例如，那些基于 Mozilla 的 Gecko 渲染引擎的，或者 Internet Explorer 8 在 strict mode 下）也使用一种尝试于这两者之间妥协的“近乎标准”(almost standards) 模式，实施了一种表单元格尺寸的怪异行为，除此之外符合标准定义。</p>\n<p>通常，浏览器基于页面中文件类型描述的存在以决定采用哪种渲染模式；如果存在一个完整的 DOCTYPE 则浏览器将会采用标准模式，而如果它缺失则浏览器将会采用怪异模式。<br>例如，一个以如下 DOCTYPE 开始的网页将会触发标准模式：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01//EN\"\"http://www.w3.org/TR/html4/strict.dtd\"&gt;</span></span><br></pre></td></tr></table></figure>\n<p>如下 DOCTYPE 语法上是无效的，因为它包含公共标识符关键字 PUBLIC 却没有公共标识符（指示所用 HTML 版本的名称），也没有 HTML 文档类型定义的系统标识符 URL。这将会触发怪异模式：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html PUBLIC&gt;</span><br></pre></td></tr></table></figure>\n<p>此外，一个不含任何 DOCTYPE 的网页将会以 quirks 模式渲染。<br>对此一个值得一提的例外是微软的 Internet Explorer 6 浏览器，如果 DOCTYPE 之前有一个 XML 声明，不管是否指定完整的 DOCTYPE，它就会以 quirks 模式渲染一个页面。因此以如下代码开始的 XHTML 页面会被 IE 6 渲染为 quirks 模式：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Strict//EN&quot;&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&quot;&gt;</span><br></pre></td></tr></table></figure>\n<p>在一定程度上，上述代码是有用的，然而它仅仅会对 IE 6 触发怪异模式。如果 DOCTYPE 之前有任何语句，quirks 模式在任何版本的 IE 中（截至 IE 9）同样会被触发。<br>例如，如果一个超文本文件在 DOCTYPE 前包含一个注释或者任何标签，IE (截至 9) 会使用 quirks 模式：</p>\n<h3 id=\"IE的文档模式和浏览器模式\"><a href=\"#IE的文档模式和浏览器模式\" class=\"headerlink\" title=\"IE的文档模式和浏览器模式\"></a>IE的文档模式和浏览器模式</h3><p>IE从IE8引入了文档兼容性开始有了浏览器模式和文档模式(按F12可见)</p>\n<blockquote>\n<p>“浏览器模式”:用于切换IE针对该网页的默认文档模式、对不同版本浏览器的条件备注解析、发送给网站服务器的用户代理（User-Agent）字符串的值。网站可以根据浏览器返回的不同用户代理字符串判断浏览器的版本和安装的功能，这样就可以向不同的浏览器返回不同的页面内容。</p>\n</blockquote>\n<figure><img src=\"http://paddingme.qiniudn.com/ie9-2ge-moshi.png\" alt=\"IE8的浏览器模式\"><figcaption>IE8的浏览器模式</figcaption></figure>\n\n<blockquote>\n<p>“文档模式”用于指定IE的页面排版引擎（Trident）以哪个版本的方式来解析并渲染网页代码。切换文档模式会导致网页被刷新，但不会更改用户代理字符串中的版本号，也不会从服务器重新下载网页。切换浏览器模式的同时，浏览器也会自动切换到相应的文档模式。</p>\n</blockquote>\n<figure><img src=\"http://paddingme.qiniudn.com/ie9-2ge-moshi.png\" alt=\"IE下的文档模式\"><figcaption>IE9下的文档模式</figcaption></figure>\n\n<p>我的理解就是浏览器模式是指IE浏览器 向服务器发送请求时，告诉服务器自己是哪个浏览器哪个版本，这里是指告诉服务器我是IE7还是IE8或者9,然后浏览器根据收到的用户代理字段返回IE7或者IE8或者IE9的页面内容。</p>\n<p>而文档模式则是指浏览器将服务器端发送过来的内容按照某种特定的浏览器（IE7，IE8，IE9等）来渲染页面。</p>\n<p>这里还涉及到怪异模式（Quirks Mode），IE旧的怪异模式现在被称为IE5怪异模式,一般不予考虑。</p>\n<h3 id=\"DOCTYPE\"><a href=\"#DOCTYPE\" class=\"headerlink\" title=\"DOCTYPE\"></a>DOCTYPE</h3><p>为什么要研究这些呢，是为了强调按照标准写html语言的重要性，近来在工作中遇到的各种诡异的IEbug，花费了巨大精力调试，最后都是因为没有按照标准来写，没有doctyle头，标签没有闭合，导致各浏览器渲染不同诡异。</p>\n<p>DOCTYPE是document type(文档类型)的简写，用来说明你用的XHTML或者HTML是什么版本。<br>其中的DTD(document type definition)叫文档类型定义，里面包含了文档的规则，浏览器就根据你定义的DTD来解释你页面的标识，并展现出来。<br>要建立符合标准的网页，DOCTYPE声明是必不可少的关键组成部分；除非你的XHTML确定了一个正确的DOCTYPE，否则你的标识和CSS都不会生效。</p>\n<p>HTML5 (向后兼容，推荐使用):</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br></pre></td></tr></table></figure>\n<p>HTML 4.01 Strict</p>\n<p>This DTD contains all HTML elements and attributes, but does NOT INCLUDE presentational or deprecated elements (like font). Framesets are not allowed.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01//EN&quot; &quot;http://www.w3.org/TR/html4/strict.dtd&quot;&gt;</span><br></pre></td></tr></table></figure>\n<p>HTML 4.01 Transitional</p>\n<p>This DTD contains all HTML elements and attributes, INCLUDING presentational and deprecated elements (like font). Framesets are not allowed.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;</span><br></pre></td></tr></table></figure>\n<p>HTML 4.01 Frameset</p>\n<p>This DTD is equal to HTML 4.01 Transitional, but allows the use of frameset content.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Frameset//EN&quot; &quot;http://www.w3.org/TR/html4/frameset.dtd&quot;&gt;</span><br></pre></td></tr></table></figure>\n<p>XHTML 1.0 Strict</p>\n<p>This DTD contains all HTML elements and attributes, but does NOT INCLUDE presentational or deprecated elements (like font). Framesets are not allowed. The markup must also be written as well-formed XML.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Strict//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&quot;&gt;</span><br></pre></td></tr></table></figure>\n<p>XHTML 1.0 Transitional</p>\n<p>This DTD contains all HTML elements and attributes, INCLUDING presentational and deprecated elements (like font). Framesets are not allowed. The markup must also be written as well-formed XML.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;</span><br></pre></td></tr></table></figure>\n<p>XHTML 1.0 Frameset</p>\n<p>This DTD is equal to XHTML 1.0 Transitional, but allows the use of frameset content.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Frameset//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd&quot;&gt;</span><br></pre></td></tr></table></figure>\n<p>XHTML 1.1</p>\n<p>This DTD is equal to XHTML 1.0 Strict, but allows you to add modules (for example to provide ruby support for East-Asian languages).</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.1//EN&quot; &quot;http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd&quot;&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"IE兼容模式\"><a href=\"#IE兼容模式\" class=\"headerlink\" title=\"IE兼容模式\"></a>IE兼容模式</h3><p>IE 支持通过特定的 <meta> 标签来确定绘制当前页面所应该采用的 IE 版本。除非有强烈的特殊需求，否则最好是设置为 edge mode，从而通知 IE 采用其所支持的最新的模式。</p>\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\">\n\n<h3 id=\"内核控制Meta标签：让360浏览器默认使用极速模式打开网页\"><a href=\"#内核控制Meta标签：让360浏览器默认使用极速模式打开网页\" class=\"headerlink\" title=\"内核控制Meta标签：让360浏览器默认使用极速模式打开网页\"></a>内核控制Meta标签：让360浏览器默认使用极速模式打开网页</h3><p>进来调试一个网页在IE、Chrome、Firefox下均表现正常，但是在360浏览器兼容模式下表现诡异。（国产的各种shell，我就呵呵了。）查查了内核控制Meta标签：让360浏览器默认使用极速模式打开网页，方法如下：</p>\n<ol>\n<li>网页头部加入</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;meta name=&quot;renderer&quot; content=&quot;webkit&quot;&gt;</span><br></pre></td></tr></table></figure>\n<p>360浏览器就会在读取到这个标签后，立即切换对应的极速核。</p>\n<ol>\n<li>另外为了保险起见再加入</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=Edge,chrome=1&quot;&gt;</span><br></pre></td></tr></table></figure>\n<p>这样写可以达到的效果是如果安装了Google chrome frame，则使用GCF来渲染页面，如果没有安装GCF，则使用最高版本的IE内核进行渲染。</p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>作为前端，浏览器各种状况频发，诡异之处无所不在。最重要的是按照标准来规范自己的代码，另一方面了解各浏览器的特性，好规避bug,再者，不断debug，从坑里爬起来。</p>\n<h3 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h3><ol>\n<li><a href=\"http://codeguide.bootcss.com/\" target=\"_blank\" rel=\"external\">编码规范 by @mdo（墙裂推荐）</a></li>\n<li><a href=\"https://www.imququ.com/post/browser-mode-and-document-mode-in-ie.html\" target=\"_blank\" rel=\"external\">关于浏览器模式和文本模式的困惑</a></li>\n<li><a href=\"https://www.imququ.com/post/browser-mode-and-document-mode-in-ie-2.html\" target=\"_blank\" rel=\"external\">IE 的浏览器模式和文本模式（二）</a></li>\n<li><a href=\"http://msdn.microsoft.com/zh-cn/library/cc288325\\(v=vs.85\\\" target=\"_blank\" rel=\"external\">定义文档兼容性</a>.aspx)</li>\n<li><a href=\"http://zh.wikipedia.org/wiki/%E6%80%AA%E5%BC%82%E6%A8%A1%E5%BC%8F\" target=\"_blank\" rel=\"external\">怪异模式</a></li>\n<li><a href=\"http://www.iefans.net/shanchu-ie9-wenjianjia/\" target=\"_blank\" rel=\"external\">IE “浏览器模式”和“文档模式”的区别（IEfans）</a></li>\n<li><a href=\"http://se.360.cn/v6/help/meta.html\" target=\"_blank\" rel=\"external\">浏览器内核控制Meta标签说明文档浏览器内核控制Meta标签说明文档</a></li>\n</ol>\n"},{"title":"在北京","url":"http://padding.me/blog/2014/06/29/I-am-in-Beijing/","content":"<p>2014年6月22日晚拖着行李箱上了T18，公寓门口，和J告别，J很难过，他回头看我一眼，说明年再见。</p>\n<p>转眼在这一边已经一周了，新公司的同事都很nice。反射弧特别长，慵懒的我，迟钝的我。每一天对帝都的憎恶有增无减，每一天都苟延残喘着想逃离。这些是胡话，哈。</p>\n<p>看见体检单上的年龄清晰的写着：24。我松了口气。一直以为自己是26，这让我很不轻松，生活的压力，对于一无所有，且什么都不会的我，北京的雾霾，让我倍感呼吸局促。</p>\n<p>父亲给我电话，各种教育。我很累，有点卡顿。我知道该怎么做，我只是想重启一下大脑。</p>\n<p>我仿佛听到HR对我说，你并不适合这份工作。</p>\n<p>眼前愈是艰难，我愈是兴奋。我知道，我可以。</p>\n<p>我依然可以骄傲的对自己说，我还年轻，可以从头再来。</p>\n<p>h今天生日，生日快乐。</p>\n<p>挥手一段时光，重新出发，在帝都战个痛快。</p>\n<p><strong>生活才刚刚开始。</strong></p>\n<blockquote>\n<p>001</p>\n<p>他已经成功地把她的脸忘掉了。<br>他已经成功地把她的生日忘掉了。</p>\n<p>他已经成功地把她的电话号码忘掉了。<br>他已经成功地把她的家庭住址忘掉了。</p>\n<p>他已经成功地把她喜欢喝什么牌子的啤酒忘掉了。</p>\n<p>他已经成功地把她在床上的样子忘掉了。</p>\n<p>他已经成功地把她哭着说过的话忘掉了。</p>\n<p>只差那么一点点，</p>\n<p>他就连自己还爱着她也忘掉了。</p>\n<p>002</p>\n<p>所有的马戏团都经营不善，<br>做了半辈子小丑的小丑改行了。</p>\n<p>新工作很体面，<br>是在快餐店里卖汉堡。</p>\n<p>没有人鼓掌，没有人笑，<br>没有人需要他翻跟头，摔跤，<br>或是做鬼脸。</p>\n<p>小丑后来写了一封信，<br>寄给当年还在马戏团的自己。</p>\n<p>他在信封上写着——<br>马戏团 小丑 收”。</p>\n<p>他在信里写着——<br>我一切都好。只是想你。”</p>\n<p>003</p>\n<p>敢挑战的自己，<br>死在5岁时的幼儿园阿姨面前。</p>\n<p>诚实的自己，<br>死在9岁时的那次罚站后。</p>\n<p>勇敢的自己，<br>死在16岁时的地铁上。</p>\n<p>想当艺术家的自己，<br>死在18岁时爸爸的责骂里。</p>\n<p>相信爱情的自己，<br>死在19岁时学校附近的小旅馆床上。</p>\n<p>觉得还有公平的自己，<br>死在21岁时的面试中。</p>\n<p>骗自己说世上还有好男人的自己，<br>死在23岁时老板的汽车里。</p>\n<p>27岁的许小姐真不知道，<br>还会有多少个自己，死在这一生的路上。</p>\n<p>by 东东枪《不知道多少个自己，死在这一生的路上》</p>\n</blockquote>\n<figure><img src=\"http://paddingme.qiniudn.com/gift_by_begemott.jpg\" alt=\"gift\"><figcaption>gift by begemott</figcaption></figure>"},{"title":"你的“成长快乐”","url":"http://padding.me/blog/2014/06/01/her-story-in-the-past/","content":"<p>今天六一儿童节，和这个节日有关系还是十几年前。<strong>长大很久了</strong>。</p>\n<p>偶尔联系的朋友，也会说，原来这几年发生了这么多事。</p>\n<p>心不跳动，过去丢弃，唯独时间推着你向前走，选择遗忘会让自己轻松上阵。</p>\n<p>说的当然不是自己，我这么眼光和开朗，怀旧念头刚起，我早就快刀斩乱麻趴倒在酒桌上了。</p>\n<p>很长时间不会去翻别人的东西了，觉得不礼貌，更觉得别人的和自己无关。</p>\n<p>我的过去我也很少会想起，有太多需要整理的情绪我都不愿意收拾，我很懒。</p>\n<p>还是看了，一页页翻过去，累，难受，心赌得发慌。</p>\n<p>谁不是漫不经心、多愁善感、对未来无限向往，直到被现实重重打趴，而后风月无情，缄默值守。</p>\n<p>到最后随缘自适，还是漫不经心，保留一点童真，用自黑来给世界一个鬼脸。</p>\n<p>你走远了吗？我想问你？</p>\n<p>你快乐吗？ 我想问你？</p>\n<p>要一起玩耍吗？我想问你。</p>\n<blockquote>\n<p> An elephant never forgets.</p>\n</blockquote>\n"},{"title":"我为什么写博客","url":"http://padding.me/blog/2014/05/16/why-i-write/","content":"<p>这个题目是问自己的，我为什么写博客呢?转眼间，<a href=\"http://padding.me\">padding.me</a>已经建站整整一个月了。最初也在微博、空间、微信上宣传了下，自然得到了一点虚荣的满足感。<a href=\"http://padding.me\">padding.me</a>还在持续优化中，现在这个样子比最开始网站界面要好看一点。当然，对于这个网站，目前我还是一个搬运工，把一些我喜欢的样式、字体、插件、类库搬过来,自己改改然后集合在一起，呈现出这副样子。</p>\n<p>一直都是这个状态，和朋友们也常说，本科四年我就学会一件事——<code>如何把别人的东西变成自己的</code>。什么时候才会有自己的东西输出呢，我不知道，但对于我这个前端小白，恐怕没有任何更好的方法了，用别人的东西，研究如何实现，增长经验，积累最后产出属于自己的东西，厚积方能薄发吧。</p>\n<p>目前来看写了不少博客，但都是对别人文章的总结和笔记，没有自己新的思考，没办法，我还是一个前端菜鸟，没有足够多的积累，如何产出呢？所以对自己想学的太多东西都放下来了，学好CSS、JS这些基础才是最重要的。</p>\n<p>以前也经常在空间里写写那些少年不知愁滋味，伤春悲秋的文字，自然会有很多人来看，看着阅读次数和评价次数一直增长，虚荣感也一点点得到满足。很多时候都会有这种感觉，写什么东西，说什么话，总是很有针对性，我要面对的是谁，谁会听到，谁会来看？顾忌得太多，身心俱疲，总是很隐蔽的暗示或者寻找情感出口。</p>\n<p>而现在我有了自己的博客，我为什么写博客呢，是为了得到更多的注视吗？更直接的说，很少会有人在浏览器窗口，输入<code>http://padding.me</code>,来看看我在做什么，想什么。人是群居动物，没错，不能离群居所。但，人，更应该学会如何自己相处。无意中浏览到<a href=\"http://guojing.me\" target=\"_blank\" rel=\"external\">GuoJing’s Blog</a>,看了他的<a href=\"http://guojing.me/blog/2013/08/23/goodbye-comments/\" target=\"_blank\" rel=\"external\">《再见评论》</a>,更觉得是这样，我说关注你的人自然会关注你，不需要有『要写给别人看』的感觉。很多时候，需要交待的只是自己。有人注视的时候，自己总会表现不一样，为什么呢？<strong>每一个人都在表演，而我天生不是演员。</strong>也许是渐渐成熟长大，越来越不想去解释什么了，也不奢求有人能懂。</p>\n<blockquote>\n<p>所有的生活都是合理的，我们没必要互相理解。</p>\n</blockquote>\n<p>博客于我而言就是一种记录，记录自己的成长，尽可能少些碎碎念，多一点对自己的坦诚，其次是前端技术上的提高，<br>我想把我得到的知识或收获分享给别人。 <a href=\"http://weibo.com/leapoahead?topnav=1&amp;wvr=5&amp;topsug=1\" target=\"_blank\" rel=\"external\">伯周</a>在微博上说:</p>\n<blockquote>\n<p>大部分人所谓写技术文章纯粹是给自己写的笔记。寥寥几行字，一大片代码……我以前高中做信息学竞赛还有大学做ACM的时候，发现的这样的“技术文章”更多。说好听点，务实主义太浓，反倒不务实了。说难听点，懒。</p>\n</blockquote>\n<p>我想做的是让其他同学通过 搜索引擎找到<a href=\"http://padding.me\">padding.me</a>,<a href=\"http://padding.me\">padding.me</a>可以提供一个至少详细不敷衍的解决方法或者是新的认识。希望写出的博客文章都能正确描述问题，自己的认识，提供解决的途径。不要写笔记式、贴代码的文章。<br>起码这是对自己思考的总结，越来越发现能把一件事情说清楚，并不是那么简单，即使自己已经掌握了。<code>予人玫瑰，手有余香</code>。至于那些流言碎语，自言自语，留给未来的自己看。</p>\n<p>当我问自己这个问题的时候，我也google了下大家给的答案。给了我很多新的感受和想法，摘抄一下，仅供参考。</p>\n<ol>\n<li>来Major Hayden 在<a href=\"http://www.rackspace.com/blog/why-technical-people-should-blog-but-dont/\" target=\"_blank\" rel=\"external\">Why Technical People Should Blog (But Don’t)</a>，中文翻译名为<a href=\"http://blog.jobbole.com/18251/\" target=\"_blank\" rel=\"external\">《开发者拒绝写技术博客的常见理由》</a> 里说：<blockquote>\n<p>Let’s conclude and wrap up. Keep these things in mind if you feel discouraged about writing:</p>\n<p> Write about what interests you whether you’re an expert on it or not;</p>\n<p> Don’t be afraid to fail;</p>\n<p> Be responsive to your readers;</p>\n<p> Even if you think nobody will read your post, write it;</p>\n<p> Always ensure your voice shines through in your writing — this is what makes it special and appealing.</p>\n</blockquote>\n</li>\n<li><a href=\"http://www.verypig.com/?p=58\" target=\"_blank\" rel=\"external\">王信博</a>说:——<code>为了写而写，写就是最终目的。</code></li>\n<li>刘未鹏在《<a href=\"http://mindhacks.cn/2009/02/15/why-you-should-start-blogging-now/\" target=\"_blank\" rel=\"external\">为什么你应该（从现在开始就）写博客》</a>(大刘的博客真是让我有相见恨晚的感觉！)中说：<br>&gt;<blockquote>\n<p>写博客，不是生活杂记、不是流水账、不是牢骚、不是抱怨、不是碎碎念、不是心情琐记……；</p>\n<p>有目的地写，要务实，追求质量；</p>\n<p>承认真实的自己，不要吹嘘，不要装逼，无需讨好读者；</p>\n<p>记录自己学习、思考、总结的过程；</p>\n<p>分享你的故事、所得、感想、经验</p>\n</blockquote>\n</li>\n<li><a href=\"http://www.raychase.net/416\" target=\"_blank\" rel=\"external\">《四火的唠叨》</a> 也站在自己的角度说了一些写博客的好处：<br>&gt;<blockquote>\n<p>写博客可以保持思考的习惯</p>\n<p>写博客可以帮助其他的程序员。</p>\n<p>写博客可以记录自己的故事</p>\n<p>写博客可以保持前沿技术敏感性，督促自己不断学习。</p>\n<p>写博客可以认识一些让我尊敬的人。</p>\n</blockquote>\n</li>\n</ol>\n<p>既然<strong>写一个博客有很多好处，却没有任何明显的坏处。</strong>我们还是迅速结束这篇文章文章吧：</p>\n<p>The End: The reason why  i write a blog is:</p>\n<blockquote>\n<p>我认真可不是为了赢，我就是认真。</p>\n</blockquote>\n<p>ps:写于05月16日，在锤子相声之前，可不是捧老罗的哏。:smile:</p>\n"},{"title":"如何实现“回到顶部”的按钮效果","url":"http://padding.me/blog/2014/05/12/scroll-to-top/","content":"<p>很多页面太长，需要通过拖动滚动条才能回到顶部，这个用户体验并不好，所以很多网站会在窗口右下角出现一个回到<strong>回到顶部</strong>的按钮，点击它便会回到顶部。怎么制作回到顶部这个效果呢，可以通过两种方法。</p>\n<ul>\n<li>使用<strong>锚连接</strong>，使用<code>&lt;a href=&quot;#&quot;&gt;&lt;/a&gt;</code>标签默认返回顶部。这种使用锚链接回到顶部效果:<ul>\n<li>优点：简单快速，没有任何兼容性问题;</li>\n<li>缺点：视觉上不够直观（会突然快速回到页面顶部），用户体验不好。</li>\n</ul>\n</li>\n<li>用JavaScript来实现</li>\n</ul>\n<p>我们主要来学习如何使用JavaScript实现。如何实现呢，我们在脑海里演绎这个场景：当我们打开一个页面，鼠标向下滚动到一定程度，会出现“回到顶部”这个按钮，我们点击按钮，页面会由快到慢滚动到顶部，最后停留在顶部。这里涉及到的知识点有：</p>\n<ul>\n<li>DOM操作：<ul>\n<li><code>document.getElementById</code>  根据ID获取标签元素</li>\n<li><code>document.documentElement.scrollTop</code> 滚动条的数值，可读写</li>\n</ul>\n</li>\n<li>事件运用：<ul>\n<li><code>window.onload</code> 页面加载完毕后触发</li>\n<li><code>onclick</code> 鼠标点击后触发</li>\n<li><code>window.onscroll</code> 滚动条滚动触发</li>\n</ul>\n</li>\n<li>定时器<ul>\n<li><code>setInterval()</code> 设置定时器，需传2个参数</li>\n<li><code>clearInterval()</code> 关闭定时器，需传一个参数</li>\n</ul>\n</li>\n</ul>\n<p>好了，根据以上知识点，首先在html中增加按钮</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"javascript:;\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"btn\"</span> <span class=\"attr\">title</span>=<span class=\"string\">\"回到顶部\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>然后在层叠样式表里添加</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#btn</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>:<span class=\"number\">38px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">38px</span>;<span class=\"comment\">/*按钮大片大小*/</span></span><br><span class=\"line\">  <span class=\"attribute\">display</span>: none;</span><br><span class=\"line\">  <span class=\"comment\">/*在一个屏幕的可见范围内没必要显示“回到顶部”按钮，所以默认不显示*/</span></span><br><span class=\"line\">  <span class=\"comment\">/*再通过当滚动条滚动超过一个屏幕时再用JavaScript显示按钮*/</span></span><br><span class=\"line\">  <span class=\"attribute\">position</span>: fixed;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>:<span class=\"number\">50%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">bottom</span>:<span class=\"number\">30px</span>;<span class=\"comment\">/*固定定位，相对于屏幕的可见范围位置*/</span></span><br><span class=\"line\">  <span class=\"attribute\">background</span>:<span class=\"built_in\">url</span>(http://paddingme.qiniudn.com/top.png) no-repeat;<span class=\"attribute\">margin-left</span>: <span class=\"number\">25%</span>;</span><br><span class=\"line\">  <span class=\"comment\">/*按钮背景图片，这里我用的是bootstrap官网的scrolltop图片*/</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>好了重点是JavaScript可以这样写：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.onload=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> obtn=<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"btn\"</span>); <span class=\"comment\">//取得标签元素</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> clientHeight=<span class=\"built_in\">document</span>.documentElement.clientHeight;</span><br><span class=\"line\">\t<span class=\"comment\">//获得一个屏幕的高度即可视区域高度</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> timer=<span class=\"literal\">null</span>;<span class=\"comment\">//设置计时器</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> isTop=<span class=\"literal\">true</span>;<span class=\"comment\">//见最后注释</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">window</span>.onscroll=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;<span class=\"comment\">//滚动条滚动时触发</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> osTop=<span class=\"built_in\">document</span>.documentElement.scrollTop||<span class=\"built_in\">document</span>.body.scrollTop;</span><br><span class=\"line\">\t\t<span class=\"comment\">//获得滚动条到顶部的高度，document.documentElement.scrollTop取得IE高度，</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//document.body.scrollTop取得chrome高度</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(osTop&gt;=clientHeight)&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//滚动条到顶部的高度大于等于一个屏幕高度时，显示“回到顶部”按钮</span></span><br><span class=\"line\">\t\t\tobtn.style.display=<span class=\"string\">\"block\"</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t\tobtn.style.display=<span class=\"string\">\"none\"</span>;<span class=\"comment\">//否则隐藏按钮</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">//下面为了实现当回到顶部的时候，用户想要停下来观看页面，</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//滚动滚动条可以停下来中断回到顶部的效果。</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!isTop) clearInterval(timer);</span><br><span class=\"line\">\t\t<span class=\"comment\">//如果没有到顶部，滚动条滚动，则关闭计时器，见最后注释</span></span><br><span class=\"line\">\t\t\tisTop=<span class=\"literal\">false</span>; <span class=\"comment\">//置未到顶部，见最后注释</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tobtn.onclick= <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t\ttimer = setInterval(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;<span class=\"comment\">//setInterval，30ms执行一次函数</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> osTop=<span class=\"built_in\">document</span>.documentElement.scrollTop||<span class=\"built_in\">document</span>.body.scrollTop;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//获得滚动条到顶部的高度</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> ispeed=<span class=\"built_in\">Math</span>.floor(-osTop/<span class=\"number\">5</span>);<span class=\"comment\">//速度</span></span><br><span class=\"line\">\t\t\t<span class=\"built_in\">document</span>.documentElement.scrollTop=<span class=\"built_in\">document</span>.body.scrollTop=osTop+ispeed;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//越来越小，写滚动条到顶部的高度，实现回到顶部由快到慢的效果。</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tisTop=<span class=\"literal\">true</span>;<span class=\"comment\">//见最后注释</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(osTop==<span class=\"number\">0</span>)<span class=\"comment\">//到达顶部关闭计时器</span></span><br><span class=\"line\">\t\t\t\tclearInterval(timer);</span><br><span class=\"line\">\t\t&#125;,<span class=\"number\">30</span>)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//如何实现当回到顶部时候，想突然中断呢？首先设置全局变量var isTop=true;</span></span><br><span class=\"line\"><span class=\"comment\">//则obtn.onclick事件中置isTop为true,</span></span><br><span class=\"line\"><span class=\"comment\">//当点击按钮，则滚动条开始想顶部滚动，触发window.onscroll事件，</span></span><br><span class=\"line\"><span class=\"comment\">//这里!istop为false不执行clearInterval(timer);</span></span><br><span class=\"line\"><span class=\"comment\">//但是下面的isTop=false;再将isTop置为false。</span></span><br><span class=\"line\"><span class=\"comment\">//这时候你人为滚动鼠标，则再次触发window.onscroll 事件，</span></span><br><span class=\"line\"><span class=\"comment\">//此时！istop为true 执行clearInterval(timer);则滚动条停下来。</span></span><br></pre></td></tr></table></figure>\n<p>看看效果，请轻轻点击本文旁边的“回到顶部”按钮，啧啧啧，用户体验灰常到位，想停就停，不想停则由快到慢回到顶部，让用户有一个适应的心理预期，还可能看到想看的风景停下来驻足欣赏。</p>\n<p>更详细的教程，请见<a href=\"http://www.imooc.com/learn/65\" target=\"_blank\" rel=\"external\">慕课网</a>。</p>\n"},{"title":"Wireshare软件安装以及对ICMP、TCP协议的分析","url":"http://padding.me/blog/2014/05/11/install-wireshark-and-analyse-icmp-tcp-protocol/","content":"<h2 id=\"1-Wireshark-Ethereal-软件安装以及配置步骤\"><a href=\"#1-Wireshark-Ethereal-软件安装以及配置步骤\" class=\"headerlink\" title=\"1. Wireshark (Ethereal)软件安装以及配置步骤\"></a>1. Wireshark (Ethereal)软件安装以及配置步骤</h2><p>Wireshark是一个网络数据包分析软件。网络数据包分析软件的功能是截取网络数据包，并尽可能显示出最为详细的网络数据包数据，安装以下步骤安装：</p>\n<ol>\n<li>在<a href=\"http://www.wireshark.org/download.html\" target=\"_blank\" rel=\"external\">wireshark官网</a>上根据自己的系统下载安装文件，这里我的系统是window32位，选择下载windows Installer(32-bit)；<figure><img src=\"http://paddingme.qiniudn.com/0.png\" alt=\"下载\"></figure></li>\n<li>下载点击安装，点击next进入下一步；<figure><img src=\"http://paddingme.qiniudn.com/1.png\" alt=\"点击next下一步\"></figure></li>\n<li>选择同意协议；<figure><img src=\"http://paddingme.qiniudn.com/2.png\" alt=\"点击同意协议\"></figure></li>\n<li>选择要安装的组件，这里默认全选，继续点击“Next”；<figure><img src=\"http://paddingme.qiniudn.com/3.png\" alt=\"选择安装组件点击next\"></figure></li>\n<li>这里选择附加任务是否将wireshark添加到菜单以及任务栏，选择默认设置，继续点击“Next”进行下一步安装；<figure><img src=\"http://paddingme.qiniudn.com/4.png\" alt=\"默认设置点击next\"></figure></li>\n<li>选择安装目录，继续点击“Next”下一步；<figure><img src=\"http://paddingme.qiniudn.com/5.png\" alt=\"选择安装目录\"></figure></li>\n<li>Wireshark需要安装WinPcap，WinPcap是用于网络封包抓取的一套工具，是Wireshark必要的组件，这里我已经安装过了，如果没有安装请选择Install WinPcap 4.1.3，这里我重新安装次WinPcap，点击“Install”； <figure><img src=\"http://paddingme.qiniudn.com/6.png\" alt=\"安装WinPcap\"></figure> </li>\n<li>点击“Next”继续WinPcap安装；<figure><img src=\"http://paddingme.qiniudn.com/7.png\" alt=\"点击Next继续安装WinPcap\"></figure> </li>\n<li>点击“I agree”同意许可协议；<figure><img src=\"http://paddingme.qiniudn.com/8.png\" alt=\"同意协议\"></figure></li>\n<li>选择启动时默认开启WinPcap，点击“Next”继续WinPcap安装；<figure><img src=\"http://paddingme.qiniudn.com/9.png\" alt=\"选择启动默认开启WinPcap\"></figure> </li>\n<li>点击“Finish”,WinPcap安装成功；<figure><img src=\"http://paddingme.qiniudn.com/10.png\" alt=\"点击Finish，WinPcap安装成功\"></figure></li>\n<li>继续安装Wireshark，点击“Next”；<figure><img src=\"http://paddingme.qiniudn.com/11.png\" alt=\"继续安装Wireshark\"></figure></li>\n<li>点击“Finish”,WireShark安装成功；<figure><img src=\"http://paddingme.qiniudn.com/12.png\" alt=\"wireshark软件安装成功\"></figure>\n\n</li>\n</ol>\n<h2 id=\"2-ICMP协议\"><a href=\"#2-ICMP协议\" class=\"headerlink\" title=\"2. ICMP协议\"></a>2. ICMP协议</h2><p>ICMP协议，是TCP/IP协议栈中的网络层协议之一。ICMP全称是“Internet Control Message Protocol（网间消息控制协议、Internet控制报文协议）”。ICMP协议一般被用来检查网络是否连通，路由是否可用，主机是否可达等，而这些检查的方法，就是通过在IP网络设备之间传递ICMP消息，并且在传递的消息中通过“type（类型）”和“code（代码）”这两个字段来检查和回应。我们一般使用ping命令来检查网络设备之间是否连通，就是调用的ICMP协议。所以这里我们用“ping”命令来分析ICMP协议。<br>现在我的电脑处于一个无线局域网内，如下图所示：</p>\n<figure><img src=\"http://paddingme.qiniudn.com/13.png\" alt=\"wireshark软件安装成功\"></figure>\n\n<ol>\n<li>打开wireshark 软件，如下图选择接口列表，选中无线网络连接，点击“Start”开始抓包；<figure><img src=\"http://paddingme.qiniudn.com/14.png\" alt=\"wireshark软件安装成功\"></figure> </li>\n<li>打开电脑命令行，进行ping 测试：ping 192.168.1.101发现无法ping通，说明局域网内没有分配该IP给局域网内的主机。同学的电脑和我处于一个局域网查看到他的IP是192.168.1.112我们来ping这个IP<figure><img src=\"http://paddingme.qiniudn.com/15.png\" alt=\"wireshark软件安装成功\"></figure></li>\n<li>在filter里填入ICMP，过滤掉其它的协议产生的数据包，得到下图 <figure><img src=\"http://paddingme.qiniudn.com/16.png\" alt=\"wireshark软件安装成功\"></figure><br>如命令行显示，我们ping 192.168.1.112时，连续收到4个ping 回复，每次ICMP通讯的过程都是一个ICMP request和一个ICMP reply，4次通讯的话，一共有8个数据包。点击第一条数据，这一条是本机IP:192.168.106向目标主机IP为:192.168.1.106发送请求查看详细信息得到如下：<br><figure><img src=\"http://paddingme.qiniudn.com/17.png\" alt=\"wireshark软件安装成功\"></figure><br>再点击第二条数据，这里是目标主机:192.168.1.112向本机发回的应答数据，如下图所示：<br><figure><img src=\"http://paddingme.qiniudn.com/18.png\" alt=\"wireshark软件安装成功\"></figure>\n\n</li>\n</ol>\n<p>ICMP Request和ICMP Reply数据包的详细内容主要包括:</p>\n<ul>\n<li>Type：类型字段，8代表ICMP的请求，0代表ICMP的回应</li>\n<li>Code：代码字段，0代表ICMP的请求</li>\n<li>Checksum：对ICMP头部的校验值</li>\n<li>Identifier：进程ID标识，从哪个进程产生的ICMP数据包</li>\n<li>Sequence Number：序列号，同一个进程中，会产生很多个ICMP数据包，用来描述当前这个数据包是是哪一个，每一对ICMP Request和ICMP Reply这个字段应该要一样</li>\n<li>Data：ICMP中的数据<br>至此利用WireShark软件分析ICMP协议实验完成。</li>\n</ul>\n<h2 id=\"3-分析TCP协议\"><a href=\"#3-分析TCP协议\" class=\"headerlink\" title=\"3. 分析TCP协议\"></a>3. 分析TCP协议</h2><p>TCP协议重要的是理解“TCP三次握手”和“TCP四次握手”，我们使用WireShark抓包并分析TCP如何通过三次握手建立TCP连接。</p>\n<ol>\n<li><p>TCP用<code>三次握手(three-way handshake)</code>建立连接，可详细参考下图：<br><figure><img src=\"http://paddingme.qiniudn.com/21.gif\" alt=\"tcp三次握手\"></figure><br>在建立TCP连接的时候，TCP需要三次握手才能建立连接，这里使用我的博客网站<a href=\"http://padding.me\">paddingme</a>,ip地址为203.245.222.133作为测试，如下图所示这里在filter里填写过滤规则为：ip.addr==203.245.222.133 表示只保留IP地址为203.245.222.133有关的数据包。<br><figure><img src=\"http://paddingme.qiniudn.com/19.png\" alt=\"wireshark软件安装成功\"></figure><br>如上图所示：序号5,6,7,8,9的数据包一直在发送请求，我们忽略它，从第10条数据包开始跟，本机IP：192.168.1.106向目标地址IP：103.245.222.133发送请求，此时SYN=1，Seq=0；<br>第14条数据包表示，目标地址收到请求，此时ACK=1，SYN=1,Seq=0;第15条数据表示，本地IP收到这条确认消息，并发送对这条确认消息的确认消息给目标地址,此时ACK=1，Seq=1。此时TCP成功建立，从第16条数据开始发送HTTP请求。</p>\n</li>\n<li><p>TCP关闭连接时候需要<code>四次握手</code>，整个过程如下图所示:<br><figure><img src=\"http://paddingme.qiniudn.com/22.gif\" alt=\"tcp四次握手\"></figure><br>当浏览器离开<a href=\"http://padding.me\">padding.me</a>时，目标IP：103.245.222.133会发送关闭连接，如下图所示：<br><figure><img src=\"http://paddingme.qiniudn.com/20.png\" alt=\"wireshark软件安装成功\"></figure><br>第424条数据包显示:目标IP：103.245.222.133向本地IP：192.168.1.106发送FIN=1，ACK=1，此时Seq=607;第425条数据包表明，本地IP接收到424条数据，对这条数据发送确认，此时，ACK=608，Seq=1077；第455条和456条数据包表示本地IP发送关闭连接给目标IP，此时ACK=1，FIN=1，Seq=1077；第458条数据表示目标地址：103.245.222.133收到数据包的确认，此时ACK=1078,Seq=608；至此完成四次挥手关闭TCP连接，看上图下面红色部分表示已经无法连接。</p>\n</li>\n</ol>\n<p>参考文章：</p>\n<ul>\n<li><a href=\"http://zh.wikipedia.org/zh/%E4%BA%92%E8%81%94%E7%BD%91%E6%8E%A7%E5%88%B6%E6%B6%88%E6%81%AF%E5%8D%8F%E8%AE%AE\" target=\"_blank\" rel=\"external\">互联网控制消息协议</a></li>\n<li><a href=\"http://zh.wikipedia.org/wiki/%E4%BC%A0%E8%BE%93%E6%8E%A7%E5%88%B6%E5%8D%8F%E8%AE%AE\" target=\"_blank\" rel=\"external\">传输控制协议</a></li>\n<li><a href=\"http://www.ctowhy.com/201.html\" target=\"_blank\" rel=\"external\">详解“TCP三次握手”建立TCP连接的全过程</a></li>\n<li><a href=\"http://www.ctowhy.com/363.html\" target=\"_blank\" rel=\"external\">ICMP数据包解码</a></li>\n<li><a href=\"http://blog.csdn.net/whuslei/article/details/6667471\" target=\"_blank\" rel=\"external\">TCP协议中的三次握手和四次挥手</a></li>\n</ul>\n"},{"title":"近期要get的新技能","url":"http://padding.me/blog/2014/05/11/to-do-list-in-may/","content":"<h2 id=\"1-http-padding-me-网站优化\"><a href=\"#1-http-padding-me-网站优化\" class=\"headerlink\" title=\"1. http://padding.me 网站优化\"></a>1. <a href=\"http://padding.me\">http://padding.me</a> 网站优化</h2><ul>\n<li><del>修改字体，文字行间距等等，有一个好的阅读体验；</del></li>\n<li><del>增加“返回顶部”的按钮；</del></li>\n<li>修改博客代码高亮</li>\n<li>考虑是否要更改多说评论为Disque；</li>\n<li>考虑是否更改google analytics 为baidu analytics；</li>\n<li>增加每篇文章分享到新浪微博和推特的按钮；</li>\n<li>修改为响应式，考虑em与px，在手机上有很好的表现；</li>\n<li>增加side bar导航，可以添加更多的页面例如说我看的书，我常去的网站，以及目录，tag查询等（看jekyll文档等），添加更多的tag,工具，问题解决，网站建设等等;</li>\n<li>html 语义化；</li>\n<li>重写css  js 使之符合规范（<a href=\"http://codeguide.bootcss.com/\" target=\"_blank\" rel=\"external\">编码规范</a>）；</li>\n<li>padding.me 性能优化，以及利用google analytics 提升网站访问速度。</li>\n</ul>\n<h2 id=\"2-http-lucadema-cn-网站优化\"><a href=\"#2-http-lucadema-cn-网站优化\" class=\"headerlink\" title=\"2. http://lucadema.cn 网站优化\"></a>2. <a href=\"http://lucadema.cn\" target=\"_blank\" rel=\"external\">http://lucadema.cn</a> 网站优化</h2><ul>\n<li><del>修改使轮播图片自适应屏幕大小，高度和宽度；</del></li>\n<li>修改 兼容性使其兼容大部分主流浏览器；</li>\n<li>语义化；</li>\n<li>性能优化；</li>\n<li>符合规范；</li>\n</ul>\n<h2 id=\"3-http-padding-me-logistics-html-优化\"><a href=\"#3-http-padding-me-logistics-html-优化\" class=\"headerlink\" title=\"3. http://padding.me/logistics.html 优化\"></a>3. <a href=\"http://padding.me/logistics.html\">http://padding.me/logistics.html</a> 优化</h2><ul>\n<li>语义化、性能优化、响应式、符合规范；</li>\n</ul>\n<h2 id=\"4-要写的博客，仔细检查总结。\"><a href=\"#4-要写的博客，仔细检查总结。\" class=\"headerlink\" title=\"4.要写的博客，仔细检查总结。\"></a>4.要写的博客，仔细检查总结。</h2><ul>\n<li><a href=\"http://padding.me/blog/2014/05/03/value-unit-font-and-text-attribute-in-the-css/\">CSS中的值和单位、字体以及文本属性</a>  增加文本属性以及web安全色；</li>\n<li>setinterveal()函数；</li>\n<li>JavaScript对象的总结；</li>\n<li>JavaScript数组的总结；</li>\n<li>JavaScript函数的总结；</li>\n<li>github page -Jekyll 搭建教程（熟悉github-jekyll-markdown 常用命令等等）；</li>\n<li>github 使用简单的命令以及指南总结( 熟悉github) (可参考github不完全装逼指南，bootcss github 等等简易的指南)；</li>\n<li>sublime 快捷键以及常用命令(熟悉sublime)；</li>\n<li>阿里云搭建tomcat+mysql 服务器以及如何建站；</li>\n<li>网站优化、语义化方面的总结；</li>\n</ul>\n<h2 id=\"5-要看的书和学习的新技能\"><a href=\"#5-要看的书和学习的新技能\" class=\"headerlink\" title=\"5. 要看的书和学习的新技能\"></a>5. 要看的书和学习的新技能</h2><ul>\n<li>学习性能优化的知识（<a href=\"https://github.com/fouber/blog/issues/3\" target=\"_blank\" rel=\"external\">https://github.com/fouber/blog/issues/3</a>    ）(<a href=\"http://blog.segmentfault.com/skyinlayer\" target=\"_blank\" rel=\"external\">http://blog.segmentfault.com/skyinlayer</a>),以及看<a href=\"http://book.douban.com/subject/3132277/\" target=\"_blank\" rel=\"external\">《高性能网站建设指南》</a>，图书馆还有本进阶指南。</li>\n<li>学习web语义化方面的知识；</li>\n<li>JavaScript :<a href=\"http://www.amazon.cn/O-Reilly%E7%B2%BE%E5%93%81%E5%9B%BE%E4%B9%A6%E7%B3%BB%E5%88%97-JavaScript%E6%9D%83%E5%A8%81%E6%8C%87%E5%8D%97-%E5%BC%97%E5%85%B0%E7%BA%B3%E6%A0%B9/dp/B007VISQ1Y/ref=sr_1_1?ie=UTF8&amp;qid=1399880183&amp;sr=8-1&amp;keywords=javascript-%E6%9D%83%E5%A8%81%E6%8C%87%E5%8D%97\" target=\"_blank\" rel=\"external\">《JavaScript权威指南》</a>数组、函数等等；</li>\n<li>CSS:<a href=\"http://www.amazon.cn/CSS%E6%9D%83%E5%A8%81%E6%8C%87%E5%8D%97-%E8%BF%88%E8%80%B6/dp/B0011F5SIC/ref=sr_1_1?ie=UTF8&amp;qid=1399879981&amp;sr=8-1&amp;keywords=css-%E6%9D%83%E5%A8%81%E6%8C%87%E5%8D%97\" target=\"_blank\" rel=\"external\">《CSS权威指南》</a>，<a href=\"http://www.amazon.cn/CSS%E7%A6%85%E6%84%8F%E8%8A%B1%E5%9B%AD-%E8%B0%A2%E4%BC%8A/dp/B008HN791U/ref=sr_1_1?ie=UTF8&amp;qid=1399879999&amp;sr=8-1&amp;keywords=css-%E7%A6%85%E6%84%8F%E8%8A%B1%E5%9B%AD\" target=\"_blank\" rel=\"external\">《CSS禅意花园》</a>；</li>\n<li>http:fiddler的使用，<a href=\"http://www.amazon.cn/HTTP%E6%9D%83%E5%A8%81%E6%8C%87%E5%8D%97-%E5%90%89%E5%B0%94%E5%88%A9/dp/B008XFDQ14/ref=sr_1_1?ie=UTF8&amp;qid=1399880017&amp;sr=8-1&amp;keywords=http%E6%9D%83%E5%A8%81%E6%8C%87%E5%8D%97\" target=\"_blank\" rel=\"external\">《HTTP权威指南》</a>（也考参考<a href=\"http://blog.segmentfault.com/mikej/1190000000476876\" target=\"_blank\" rel=\"external\">http://blog.segmentfault.com/mikej/1190000000476876</a>）；</li>\n<li>ECMAJavaScript6  <a href=\"http://es6.ruanyifeng.com/#docs/intro\" target=\"_blank\" rel=\"external\">http://es6.ruanyifeng.com/#docs/intro</a>；</li>\n<li><a href=\"http://bonsaiden.github.io/JavaScript-Garden/zh/\" target=\"_blank\" rel=\"external\">JavaScript 禅意花园</a>；</li>\n</ul>\n<h2 id=\"6-还要完成的事\"><a href=\"#6-还要完成的事\" class=\"headerlink\" title=\"6. 还要完成的事\"></a>6. 还要完成的事</h2><ul>\n<li><a href=\"http://h.us\" target=\"_blank\" rel=\"external\">http://h.us</a> 设计实现，deadline：2014年6月23日；</li>\n<li><a href=\"http://supertable.me\" target=\"_blank\" rel=\"external\">http://supertable.me</a> 数据库设计，以及网站原型等等。</li>\n<li>看<a href=\"http://imooc.com\" target=\"_blank\" rel=\"external\">慕课网</a>视频，学习新技能。</li>\n</ul>\n<p>详情请见<a href=\"https://github.com/paddingme/paddingme.github.io/issues/1\" target=\"_blank\" rel=\"external\">https://github.com/paddingme/paddingme.github.io/issues/1</a></p>\n<blockquote>\n<p>但行好事，莫问前程。</p>\n</blockquote>\n"},{"title":"CSS中的值和单位、字体以及文本属性","url":"http://padding.me/blog/2014/05/03/value-unit-font-and-text-attribute-in-the-css/","content":"<p>这几天在学习<a href=\"http://www.amazon.cn/CSS%E6%9D%83%E5%A8%81%E6%8C%87%E5%8D%97-%E8%BF%88%E8%80%B6/dp/B0011F5SIC/ref=sr_1_1?ie=UTF8&amp;qid=1399054787&amp;sr=8-1&amp;keywords=css+%E6%9D%83%E5%A8%81%E6%8C%87%E5%8D%97\" target=\"_blank\" rel=\"external\">CSS权威指南</a>,学习了CSS中的值和单位、字体以及文本属性，这里做一个相关总结，主要总结我认为重要的知识点。</p>\n<p>##1. 值和单位##<br>CSS里的值和单位，主要分为绝对长度单位：<code>in</code>(英寸)、<code>cm</code>(厘米)<code>mm</code>(毫米)、<code>pt</code>(点，标准印刷度量单位)、<code>pc</code>(派卡，印刷术语),以及相对长度单位：<code>em</code>,<code>ex</code>,<code>px</code>。</p>\n<p>我们主要使用<code>em</code>和<code>px</code>，<code>ex</code>指所用字体中小写x的高度,我们无情得忽视它。“相对”相对“绝对”的好处我们已然了解，例如url链接，我们不用关注外部url地址如何变化，相对路径没问题，我们便可以各种超链接。这里的相对长度单位也是同样的道理。<code>em</code>相对于给定字体的font-size值。现代浏览器字体默认大小为16个像素。如果一个元素的font-size为14px,那么对于该元素，1em=14px。这个值可能会随元素的不同而不同，另在设置字体的大小的时，em的值会相对于父元素的字体大小改变。总得来说，就是<strong>em依赖于最近的字体大小</strong>(不要惯性的以为依赖于原先body设定的或者浏览器默认的值。)</p>\n<p>而<code>px</code>就是像素，对于显示器屏幕分辨率而言。当然<code>%</code>同<code>em</code>。（注意理解:<code>%</code>这个值可以是任意的：可能是同一个元素另一个属性的值，也可以是从父元素继承的一个值，或者是祖先元素的一个值。）</p>\n<p>至于要用<code>px</code>还是<code>em</code>，老版本的IE浏览器不支持像素的缩放，所以用<code>px</code>取代<code>em</code>，另使用em可以省去很多冗余的工作，例如设置了body里的字体大小，后面的元素内的字体大小全部设置为em大小，这样改动的话只需要改动body里的字体大小，而不用每个元素改动px大小，再次提醒<strong>em依赖于最近的字体大小</strong>。将行距(line-height)，和纵向高度的单位都用em。保证缩放时候的整体性。px常使用在图片大小上。</p>\n<p><a href=\"http://blog.alphatr.com/em-and-px-in-css.html\" target=\"_blank\" rel=\"external\">这篇文章</a>也有一定参考意义，可以一看。</p>\n<p>##2. 颜色##<br>CSS中颜色取值主要由以下几种方法：</p>\n<ul>\n<li>CSS命名颜色。在CSS2.1中，CSS规范定义了17个颜色名。</li>\n<li><p>用RGB指定颜色。可以使用0~255取值或者0%~100%。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">h1 &#123;color:rgb(100%,50%,50%);&#125;</span><br><span class=\"line\">h2 &#123;color:rgb(255,132,123);&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>十六进制的RGB颜色。将三个介于00-FF的十六进制数连起来，就可以设置一种颜色。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">h1 &#123;</span><br><span class=\"line\">\tcolor:#FF0000;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">```可以简写为</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>h1{<br>    color:#F00;<br>}<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* RGBA颜色表示。在RGB的基础上加了一个Alpha通道.它规定了对象的不透明度。lpha 参数是介于 0.0（完全透明）与 1.0（完全不透明）的数字。浏览器支持：IE9+、Firefox 3+、Chrome、Safari 以及 Opera 10+。</span><br></pre></td></tr></table></figure></p>\n<p>p {<br> background-color:rgba(255,0,0,0.5);<br>}<br>```</p>\n<ul>\n<li>HSL颜色和HSLA不做赘述。</li>\n</ul>\n<p>##3. 字体##<br>CSS通常使用<code>font-family</code>定义使用什么字体，<code>font-size</code>定义字体大小，<code>font-style</code>定义斜体字，<br><code>font-variant</code>定义小型的大写字体，<code>font-weight</code>定义字体的粗细，<code>font</code>统一定义字体的所有属性。</p>\n<p>####font-family####<br>   font-family取值: <code>[[ &lt;family-name&gt; | &lt;generic-family&gt; ] [, &lt;family-name&gt;| &lt;generic-family&gt;]* ] | inherit</code></p>\n<p> family-name:指一系列字体名称<br> 而generic-family是指一般性字体名称即以下五种通用字体系列。<br>CSS定义了五种通用字体系列（font-family）：</p>\n<ul>\n<li>Serif字体——这些字体成比例，而且有上下短线,Sefit字体包括Times、Georigia和New Century Schoolbook等。</li>\n<li>Sans-serif字体——字体成比例，但是没有上下短线。Sans-sefit字体包括Geneva,Verdana,Arial和Univers等。</li>\n<li>Monospace字体——不成比例（模拟打印设备打出的文本），每个字符的<strong>宽度</strong>完全相同,上下短线可能有可能无。monospace字体包括Courier、Courier New、Andale Mono 等。</li>\n<li>Cusrive字体——模仿人的手写体。包括Zapf Chancery、Anthou、Comic Sana等。</li>\n<li>Fantasy字体——在上述四种字体之外的，不能用任何特征来定义的字体包括：Wesrern、Woodblock和Kinggong等。</li>\n</ul>\n<p>说明：</p>\n<ul>\n<li>想要显示的字体一定要是你计算机中有的,否则不会按照你期望的显示.上面的第三个示例说明如果有宋体就显示宋体否则显示Arial字体</li>\n<li>[字体名1 , 字体名2 , *],其中的星号*,表示可以继续增加字体名.如果用户计算机没有安装,你定义的字体名1,系统会自动使用字体名2,如果没有字体名2,系统就再查找字体名3,如果都没有,将使用系统的默认字体</li>\n<li>family-name代表系列性字体的名称,比如可以使用逗号分开,的方式取一系列的值(“Times”,”Arial”,”Courier”等)</li>\n<li>generic-family代表一般性字体名称,每个名称都可以代表一系列的字体,比如”serif”, “sans-serif”, “cursive”, “fantasy”, “monospace”</li>\n<li>用逗号来分隔每一个值,最好在最后有一个基本字体(generic-family)</li>\n<li>使用中文字体或者英文名称超过一个单词的字体时要使用”(冒号)扩起来,比如”Times News Roman”,”宋体”</li>\n<li>现代浏览器字体默认的设置为“宋体/simsun字体 16像素”</li>\n</ul>\n<p>(留坑：<a href=\"http://padding.me\">paddingme</a>博客字体默认设置为small,而<a href=\"http://www.zaibc.com/\" target=\"_blank\" rel=\"external\">http://www.zaibc.com/</a>的字体设置为<br><code>body {\nfont: 13px Tahoma, Helvetica, Arial, &quot;\\5b8b\\4f53&quot;, sans-serif;\n}</code>) 很奇怪在我电脑上(windows7,chrome33.0.1750.146 )显示正常，而在同学的电脑上(mac，chrome版本未知）我博客的字体竟然比zaibc的字体小)理论上，small为13px，为什么不一样大呢？难道是浏览器渲染的问题？等我入手大MAC再做详细对比研究。当然HTML的big,small标签已经被w3c抛弃)</p>\n<p>另关于默认字体可以查阅<a href=\"http://saibeixuer.blog.163.com/blog/static/74770377201075111628356/\" target=\"_blank\" rel=\"external\">女施主的博文中</a>详细解析了淘宝的字体，可以围观，做深入了解。还有这位<a href=\"http://www.iyunlu.com/view/css-xhtml/default-web-font-style-1.html\" target=\"_blank\" rel=\"external\">男施主的博文</a>和<a href=\"http://iyunlu.com/view/css-xhtml/default-web-font-style-2html.html\" target=\"_blank\" rel=\"external\">这一篇博文</a>,玉伯的文章找不到了很遗憾。张鑫旭的<a href=\"http://www.zhangxinxu.com/wordpress/?p=874\" target=\"_blank\" rel=\"external\">这篇博客</a>也相当有趣，建议观看，提供一个新的视角关于字体设置。还强烈推荐<a href=\"http://lepture.com/zh/2014/chinese-fonts-and-yue-css\" target=\"_blank\" rel=\"external\">这篇博客</a>，博主对中文字体确有研究，所以他的网站<a href=\"http://yuehu.io\" target=\"_blank\" rel=\"external\">阅乎</a>阅读体验非常好。<strong>字体真是一门大学问!</strong></p>\n<p>##4. 文本属性##</p>\n<p><br></p>\n<p>参考文章：</p>\n<ul>\n<li><a href=\"http://www.1z1b.com/one-blog-a-week/px-em-pt/#comment-17058\" target=\"_blank\" rel=\"external\">http://www.1z1b.com/one-blog-a-week/px-em-pt/#comment-17058</a></li>\n<li><a href=\"http://www.dreamdu.com/css/css_colors/\" target=\"_blank\" rel=\"external\">http://www.dreamdu.com/css/css_colors/</a></li>\n<li><a href=\"http://www.w3school.com.cn/cssref/css_colors_legal.asp\" target=\"_blank\" rel=\"external\">http://www.w3school.com.cn/cssref/css_colors_legal.asp</a></li>\n</ul>\n"},{"title":"typeof 和 instanceOf的区别","url":"http://padding.me/blog/2014/04/28/differents-between-typeof-and-instanceof-in-javascript/","content":"<p>##关于typeof##<br><code>typeof</code>一元运算符，用来返回操作数类型的<strong>字符串</strong>。</p>\n<p><code>typeof</code>几乎不可能得到它们想要的结果。<code>typeof</code>只有一个实际应用场景，就是<strong>用来检测一个对象是否已经定义或者是否已经赋值</strong>。而这个应用却不是来检查对象的类型。</p>\n<table>\n<thead>\n<tr>\n<th>Value</th>\n<th>Class</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>“foo”</td>\n<td>String</td>\n<td>string</td>\n</tr>\n<tr>\n<td>new String(“foo”)</td>\n<td>String</td>\n<td>object</td>\n</tr>\n<tr>\n<td>1.2</td>\n<td>Number</td>\n<td>number</td>\n</tr>\n<tr>\n<td>new Number(1.2)</td>\n<td>Number</td>\n<td>object</td>\n</tr>\n<tr>\n<td>true</td>\n<td>Boolean</td>\n<td>boolean</td>\n</tr>\n<tr>\n<td>new Boolean(true)</td>\n<td>Boolean</td>\n<td>object</td>\n</tr>\n<tr>\n<td>new Date()</td>\n<td>Date</td>\n<td>object</td>\n</tr>\n<tr>\n<td>new Error()</td>\n<td>Error</td>\n<td>object</td>\n</tr>\n<tr>\n<td>[1,2,3]</td>\n<td>Array</td>\n<td>object</td>\n</tr>\n<tr>\n<td>new Array(1, 2, 3)</td>\n<td>Array</td>\n<td>object</td>\n</tr>\n<tr>\n<td>new Function(“”)</td>\n<td>Function</td>\n<td>function</td>\n</tr>\n<tr>\n<td>/abc/g</td>\n<td>RegExp</td>\n<td>object (function in Nitro/V8)</td>\n</tr>\n<tr>\n<td>new RegExp(“meow”)</td>\n<td>RegExp</td>\n<td>object (function in Nitro/V8)</td>\n</tr>\n<tr>\n<td>{}</td>\n<td>Object</td>\n<td>object</td>\n</tr>\n<tr>\n<td>new Object()</td>\n<td>Object</td>\n<td>object</td>\n</tr>\n</tbody>\n</table>\n<p>上面表格中，Type 一列表示 typeof 操作符的运算结果。可以看到，这个值在大多数情况下都返回 “object”。</p>\n<p>Class 一列表示对象的内部属性 [[Class]] 的值。</p>\n<p>JavaScript 标准文档中定义: [[Class]] 的值只可能是下面字符串中的一个： Arguments, Array, Boolean, Date, Error, Function, JSON, Math, Number, Object, RegExp, String.<br>为了获取对象的 [[Class]]，我们需要使用定义在 Object.prototype 上的方法 toString。</p>\n<p>对象的类定义</p>\n<p>JavaScript 标准文档只给出了一种获取 [[Class]] 值的方法，那就是使用 Object.prototype.toString。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function is(type, obj) &#123;</span><br><span class=\"line\">    var clas = Object.prototype.toString.call(obj).slice(8, -1);</span><br><span class=\"line\">    return obj !== undefined &amp;&amp; obj !== null &amp;&amp; clas === type;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">is(&apos;String&apos;, &apos;test&apos;); // true</span><br><span class=\"line\">is(&apos;String&apos;, new String(&apos;test&apos;)); // true</span><br></pre></td></tr></table></figure>\n<p>上面例子中，Object.prototype.toString 方法被调用，this 被设置为了需要获取 [[Class]] 值的对象。</p>\n<p>译者注：Object.prototype.toString 返回一种标准格式字符串，所以上例可以通过 slice 截取指定位置的字符串，如下所示：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Object.prototype.toString.call([])    // &quot;[object Array]&quot;</span><br><span class=\"line\">Object.prototype.toString.call(&#123;&#125;)    // &quot;[object Object]&quot;</span><br><span class=\"line\">Object.prototype.toString.call(2)    // &quot;[object Number]&quot;</span><br></pre></td></tr></table></figure>\n<p>译者注：这种变化可以从 IE8 和 Firefox 4 中看出区别，如下所示：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// IE8</span><br><span class=\"line\">Object.prototype.toString.call(null)    // &quot;[object Object]&quot;</span><br><span class=\"line\">Object.prototype.toString.call(undefined)    // &quot;[object Object]&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">// Firefox 4</span><br><span class=\"line\">Object.prototype.toString.call(null)    // &quot;[object Null]&quot;</span><br><span class=\"line\">Object.prototype.toString.call(undefined)    // &quot;[object Undefined]&quot;</span><br></pre></td></tr></table></figure>\n<p>测试为定义变量</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">typeof foo !== &apos;undefined&apos;</span><br></pre></td></tr></table></figure>\n<p>上面代码会检测 foo 是否已经定义；如果没有定义而直接使用会导致 ReferenceError 的异常。 这是 typeof 唯一有用的地方。</p>\n<p>结论</p>\n<p>为了检测一个对象的类型，强烈推荐使用 Object.prototype.toString 方法； 因为这是唯一一个可依赖的方式。正如上面表格所示，typeof 的一些返回值在标准文档中并未定义， 因此不同的引擎实现可能不同。</p>\n<p>除非为了检测一个变量是否已经定义，我们应尽量避免使用 typeof 操作符。</p>\n<table>\n<thead>\n<tr>\n<th>x</th>\n<th>typeof x</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>undefined</td>\n<td>“undefined”</td>\n</tr>\n<tr>\n<td>true 或false</td>\n<td>“boolean”</td>\n</tr>\n<tr>\n<td>任意数字或者NaN</td>\n<td>“number”</td>\n</tr>\n<tr>\n<td>任意字符串</td>\n<td>“string”</td>\n</tr>\n<tr>\n<td>函数对象(在ECMA-262术语中,指的是实现了[[Call]] 的对象)</td>\n<td>“function”</td>\n</tr>\n<tr>\n<td>任意内置对象（非函数）</td>\n<td>“object”  </td>\n</tr>\n<tr>\n<td>数组</td>\n<td>“obeject”</td>\n</tr>\n<tr>\n<td>null</td>\n<td>“object” </td>\n</tr>\n<tr>\n<td>宿主对象(JS引擎内置对象,而不是DOM或者其他提供的)</td>\n<td>由编译器各自实现的字符串，但不是”undefined”,”number”,”boolean”,”number”,”string”。 </td>\n</tr>\n<tr>\n<td>正则表达式</td>\n<td>各浏览器表现不一</td>\n</tr>\n</tbody>\n</table>\n<p>如果想将null和对象区分开，则必须针对特殊值显式检测。如：<code>my_value===null</code>。对于宿主对象来说，typeof有可能并不返回‘object’,而返回字符串。但实际上客户端js中的大多数宿主对象都是‘object’类型。对于所有内置可执行对象进行typeof运算都将返回“function”。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// Numbers</span><br><span class=\"line\">typeof 37 === &apos;number&apos;;</span><br><span class=\"line\">typeof 3.14 === &apos;number&apos;;</span><br><span class=\"line\">typeof Math.LN2 === &apos;number&apos;;</span><br><span class=\"line\">typeof Infinity === &apos;number&apos;;</span><br><span class=\"line\">typeof NaN === &apos;number&apos;; // 尽管NaN是&quot;Not-A-Number&quot;的缩写,意思是&quot;不是一个数字&quot;</span><br><span class=\"line\">typeof Number(1) === &apos;number&apos;; // 不要这样使用!</span><br><span class=\"line\"></span><br><span class=\"line\">// Strings</span><br><span class=\"line\">typeof &quot;&quot; === &apos;string&apos;;</span><br><span class=\"line\">typeof &quot;bla&quot; === &apos;string&apos;;</span><br><span class=\"line\">typeof (typeof 1) === &apos;string&apos;; // typeof返回的肯定是一个字符串</span><br><span class=\"line\">typeof String(&quot;abc&quot;) === &apos;string&apos;; // 不要这样使用!</span><br><span class=\"line\"></span><br><span class=\"line\">// Booleans</span><br><span class=\"line\">typeof true === &apos;boolean&apos;;</span><br><span class=\"line\">typeof false === &apos;boolean&apos;;</span><br><span class=\"line\">typeof Boolean(true) === &apos;boolean&apos;; // 不要这样使用!</span><br><span class=\"line\"></span><br><span class=\"line\">// Undefined</span><br><span class=\"line\">typeof undefined === &apos;undefined&apos;;</span><br><span class=\"line\">typeof blabla === &apos;undefined&apos;; // 一个未定义的变量,或者一个定义了却未赋初值的变量</span><br><span class=\"line\"></span><br><span class=\"line\">// Objects</span><br><span class=\"line\">typeof &#123;a:1&#125; === &apos;object&apos;;</span><br><span class=\"line\">typeof [1, 2, 4] === &apos;object&apos;; </span><br><span class=\"line\">// 使用Array.isArray或者Object.prototype.toString.call方法</span><br><span class=\"line\">//可以分辨出一个数组和真实的对象</span><br><span class=\"line\">typeof new Date() === &apos;object&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\">typeof new Boolean(true) === &apos;object&apos; // 令人困惑.不要这样使用</span><br><span class=\"line\">typeof new Number(1) === &apos;object&apos; // 令人困惑.不要这样使用</span><br><span class=\"line\">typeof new String(&quot;abc&quot;) === &apos;object&apos;;  // 令人困惑.不要这样使用</span><br><span class=\"line\">// Functions</span><br><span class=\"line\">typeof function()&#123;&#125; === &apos;function&apos;;</span><br><span class=\"line\">typeof Math.sin === &apos;function&apos;;</span><br></pre></td></tr></table></figure>\n<p><br><br><br><br><br></p>\n<p>##关于instanceof##</p>\n<p>instanceof 左操作数是一个类，右操作数是标识对象的类。如果左侧的对象是右侧类的实例，则返回true.而js中对象的类是通过初始化它们的构造函数来定义的。即instanceof的右操作数应当是一个函数。所有的对象都是object的实例。如果左操作数不是对象，则返回false,如果右操作数不是函数，则抛出typeError。 </p>\n<p>instanceof 运算符是用来测试一个对象是否在其原型链原型构造函数的属性。其语法是<code>object instanceof constructor</code></p>\n<p>instanceof 操作符用来比较两个操作数的构造函数。只有在比较自定义的对象时才有意义。 如果用来比较内置类型，将会和 typeof 操作符 一样用处不大。</p>\n<p>比较自定义对象</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function Foo() &#123;&#125;</span><br><span class=\"line\">function Bar() &#123;&#125;</span><br><span class=\"line\">Bar.prototype = new Foo();</span><br><span class=\"line\"></span><br><span class=\"line\">new Bar() instanceof Bar; // true</span><br><span class=\"line\">new Bar() instanceof Foo; // true</span><br><span class=\"line\"></span><br><span class=\"line\">// 如果仅仅设置 Bar.prototype 为函数 Foo 本身，而不是 Foo 构造函数的一个实例</span><br><span class=\"line\">Bar.prototype = Foo;</span><br><span class=\"line\">new Bar() instanceof Foo; // false</span><br></pre></td></tr></table></figure>\n<p>instanceof 比较内置类型</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">new String(&apos;foo&apos;) instanceof String; // true</span><br><span class=\"line\">new String(&apos;foo&apos;) instanceof Object; // true</span><br><span class=\"line\"></span><br><span class=\"line\">&apos;foo&apos; instanceof String; // false</span><br><span class=\"line\">&apos;foo&apos; instanceof Object; // false</span><br></pre></td></tr></table></figure>\n<p>有一点需要注意，instanceof 用来比较属于不同 JavaScript 上下文的对象（比如，浏览器中不同的文档结构）时将会出错， 因为它们的构造函数不会是同一个对象。</p>\n<p>结论:instanceof 操作符应该仅仅用来比较来自同一个 JavaScript 上下文的自定义对象。 正如 typeof 操作符一样，任何其它的用法都应该是避免的。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function C()&#123;&#125; // defining a constructor</span><br><span class=\"line\">function D()&#123;&#125; // defining another constructor</span><br><span class=\"line\"></span><br><span class=\"line\">var o = new C();</span><br><span class=\"line\">o instanceof C; // true, because: Object.getPrototypeOf(o) === C.prototype</span><br><span class=\"line\">o instanceof D; // false, because D.prototype is nowhere in o&apos;s prototype chain</span><br><span class=\"line\">o instanceof Object; // true, because:</span><br><span class=\"line\">C.prototype instanceof Object // true</span><br><span class=\"line\"></span><br><span class=\"line\">C.prototype = &#123;&#125;;</span><br><span class=\"line\">var o2 = new C();</span><br><span class=\"line\">o2 instanceof C; // true</span><br><span class=\"line\">o instanceof C; // false, because C.prototype is nowhere in o&apos;s prototype chain anymore</span><br><span class=\"line\"></span><br><span class=\"line\">D.prototype = new C(); // use inheritance</span><br><span class=\"line\">var o3 = new D();</span><br><span class=\"line\">o3 instanceof D; // true</span><br><span class=\"line\">o3 instanceof C; // true</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var myString = new String();</span><br><span class=\"line\">var myDate = new Date();</span><br><span class=\"line\"></span><br><span class=\"line\">myString instanceof String; // returns true</span><br><span class=\"line\">myString instanceof Object; // returns true</span><br><span class=\"line\">myString instanceof Date;   // returns false</span><br><span class=\"line\"></span><br><span class=\"line\">myDate instanceof Date;     // returns true</span><br><span class=\"line\">myDate instanceof Object;   // returns true</span><br><span class=\"line\">myDate instanceof String;   // returns false</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function Car(make, model, year) &#123;</span><br><span class=\"line\">  this.make = make;</span><br><span class=\"line\">  this.model = model;</span><br><span class=\"line\">  this.year = year;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">var mycar = new Car(&quot;Honda&quot;, &quot;Accord&quot;, 1998);</span><br><span class=\"line\">var a = mycar instanceof Car;    // returns true</span><br><span class=\"line\">var b = mycar instanceof Object; // returns true</span><br></pre></td></tr></table></figure>\n<hr>\n<p>引用资料：</p>\n<ol>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/instanceof\" target=\"_blank\" rel=\"external\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/instanceof</a></li>\n<li><a href=\"http://bonsaiden.github.io/JavaScript-Garden/zh/#types.instanceof\" target=\"_blank\" rel=\"external\">http://bonsaiden.github.io/JavaScript-Garden/zh/#types.instanceof</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/JavaScript/Reference/Operators/typeof\" target=\"_blank\" rel=\"external\">https://developer.mozilla.org/zh-CN/docs/JavaScript/Reference/Operators/typeof</a></li>\n</ol>\n"},{"title":"","url":"http://padding.me/blog/2014/04/20/learn-css-layout/","content":"<hr>\n<p>title: 学习CSS布局<br>layout: post<br>tags:</p>\n<h2 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"- CSS \"></a>- CSS </h2><p>这是偶尔看到的一篇学习CSS布局的文章，对于我这个菜鸟来说真是受益匪浅，对CSS布局一下子拨云见雾的感觉。你可以到<a href=\"http://zh.learnlayout.com/\" target=\"_blank\" rel=\"external\">这里</a>仔细研究阅读，相信你会和我一样兴奋和豁然开朗。而下面是我在此基础上总结的内容，以便后来查阅使用。</p>\n<ul>\n<li><p><strong>“display”属性</strong></p>\n<p>每个元素都有默认的display属性，一般是block或者inline,block表示块级元素，而inline表示行内元素。block元素（如<code>div</code>、<code>table</code>、<code>p</code>、<code>form</code>等）会新开始一行并尽可能撑满容器。而inline元素（如<code>span</code>、<code>a</code>等）即行内元素不会打破包裹它的容器的布局。另一个常用的display值为<code>none</code>，<code>display:none</code>通常是被JavaScript用来在不删除元素的情况下隐藏或显示该元素。<br>其他的display值还有list-item和table等，详情可以参见<a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/display\" target=\"_blank\" rel=\"external\">这里</a>,你可以随时随地人工改变一个元素的display值。常见的是：把<code>li</code>改为<code>display:inline</code>制作水平菜单。</p>\n</li>\n<li><p><strong>marigin:auto</strong></p>\n<p>如何使一个元素居中，并且不用担心小屏幕会显示出滚动条：(max-width 支持IE7+)<br><code><pre><br>  #main{<br>  max-width:600px;<br>  margin:0 auto;<br>}</pre></code></p>\n</li>\n<li><p><strong>盒模型</strong></p>\n<p>盒模型的宽度高度我们知道要通过计算（真正的宽度=width+2<em>padding+2</em>border）我们使用<code>box-sizing</code>来改进它，当设置一个元素为<code>box-sizing:border-box</code>时，此元素的内边距和边框不会增加该元素的宽度。支持IE8+，如果要在所有浏览器中使用该属性，则可以利用下面的代码：<br><code><pre><br>  *{<br>  -webkit-box-sizing:border-box;<br>  -moz-box-sizing:border-box;</pre></code></p>\n<pre><code>box-sizing:border-box;\n</code></pre><p>}<br></p>\n</li>\n<li><p><strong>position</strong></p>\n<p><code>position</code>主要由static、absolute、relative、fixed等值。 </p>\n<blockquote>\n<ol>\n<li>static 是默认值，表示没有被定位。</li>\n<li>relative 相对定位，相对于它在正常文档流中，通过top、right、bottom、left作用值产生偏移。而其他元素不会调整位置来弥补它偏离后剩下的间隙。</li>\n<li>fixed 固定定位，相对于浏览器窗口，意味着即使页面滚动，它还是会停留在相同的位置。（移动浏览器对fixed支持很差，解决方案参考[这里]（<a href=\"http://bradfrostweb.com/blog/mobile/fixed-position/）。\" target=\"_blank\" rel=\"external\">http://bradfrostweb.com/blog/mobile/fixed-position/）。</a></li>\n<li>absolute 是相对于最近的被定位的祖先元素产生的偏移，如果没有，它是相对文档的body元素，并且它会随着页面滚动而移动。</li>\n</ol>\n</blockquote>\n</li>\n</ul>\n<ul>\n<li><p><strong>float</strong></p>\n<p>如前篇所述，最开始产生float的作用就是使文字环绕图片，其本质就是包裹和破坏，它脱离了正常的文档流，可能会导致溢出，所以要clearfix hack（清除浮动），清除浮动的方法有很多种，可以参考<a href=\"http://padding.me/blog/2014/04/19/float-label-in-css/\">上篇文章</a>张鑫旭写的，<a href=\"http://stackoverflow.com/questions/211383/which-method-of-clearfix-is-best\" target=\"_blank\" rel=\"external\">这里</a>有更多的讨论</p>\n</li>\n</ul>\n<ul>\n<li><p><strong>媒体查询</strong></p>\n<p>针对响应式设计，，让网站针对不同浏览器和设备相应。</p>\n<p><code><pre><br>@media screen and (min-width:600px) {<br>nav {<br>  float: left;<br>  width: 25%;<br>}<br>section {<br>  margin-left: 25%;<br>}<br>}<br>@media screen and (max-width:599px) {<br>nav li {<br>  display: inline;<br>}<br>}<br></pre></code></p>\n</li>\n</ul>\n<p>在<a href=\"https://developer.mozilla.org/en-US/docs/CSS/Media_queries\" target=\"_blank\" rel=\"external\">MDN文档</a>中有更多关于媒体查询的知识。使用 <a href=\"http://dev.opera.com/articles/view/an-introduction-to-meta-viewport-and-viewport/\" target=\"_blank\" rel=\"external\">meta viewport</a> 之后可以让你的布局在移动浏览器上显示的更好。</p>\n<ul>\n<li><p><strong>inline-block</strong></p>\n<p>使用行内联。IE6和IE7支持看<a href=\"http://blog.mozilla.org/webdev/2009/02/20/cross-browser-inline-block/\" target=\"_blank\" rel=\"external\">这里</a><br>使用inline-box要注意以下：</p>\n<ul>\n<li>vertical-align 属性会影响到 inline-block 元素，你可能会把它的值设置为 top </li>\n<li>需要设置每一列的宽度</li>\n<li>如果HTML源代码中元素之间有空格，那么列与列之间会产生空隙</li>\n</ul>\n</li>\n<li><p><strong>column</strong><br><code><pre><br>.three-column {<br>padding: 1em;<br>-moz-column-count: 3;<br>-moz-column-gap: 1em;<br>-webkit-column-count: 3;<br>-webkit-column-gap: 1em;<br>column-count: 3;<br>column-gap: 1em;<br>}<br></pre></code><br>CSS columns是很新的标准，所以你需要使用前缀，并且它不被IE9及以下和Opera Mini支持。还有许多和 cloumn 相关的属性，点击<a href=\"http://quirksmode.org/css/columns/\" target=\"_blank\" rel=\"external\">这里</a>了解更多</p>\n</li>\n<li><p><strong>flexbox</strong></p>\n</li>\n</ul>\n<p>新的 flexbox 布局模式被用来重新定义CSS中的布局方式。很遗憾的是最近规范变动过多，导致各个浏览器对它的实现也有所不同。具体例子可以参考<a href=\"http://zh.learnlayout.com/flexbox.html\" target=\"_blank\" rel=\"external\">这里</a></p>\n<ul>\n<li><p><strong>其他框架</strong></p>\n<p>例如bootstrap的12格流式布局等等。</p>\n</li>\n</ul>\n"},{"title":"","url":"http://padding.me/blog/2014/04/19/float-label-in-css/","content":"<hr>\n<p>title: CSS 中的float标签<br>layout: post<br>tags:</p>\n<h2 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"- CSS \"></a>- CSS </h2><p>CSS中允许浮动任何元素，浮动是指元素浮动在左边或者右边，而使其他的内容“围绕”这个元素。</p>\n<blockquote>\n<p>##float<br>值：left|right|none|inherit</p>\n</blockquote>\n<p>例如把一个图像浮动到左边，<br><code>&lt;img src=&quot;b4.gif&quot; style=&quot;float:left;&quot; alt=&quot;b4&quot;&gt;</code></p>\n<p>对于浮动元素有几点要记住：</p>\n<ol>\n<li>会以某种方式将浮动元素从文档的正常流中删除，但是一个元素浮动，其他内容会”围绕“该元素。</li>\n<li><strong>浮动元素的外边距不会合并！</strong></li>\n</ol>\n<p>浮动元素的包含块是其最近的块级祖先元素。此外，<strong>浮动元素会生成一个块级框，而不论这个元素本身是什么。</strong></p>\n<p>有一系列规则控制着浮动元素的摆放：</p>\n<ol>\n<li>浮动元素的左（或右）外边界不能超出其包含块的左（或右）内边界。</li>\n<li>浮动元素的左（或右）外边界必须是源文档中之前出现的左浮动（或右浮动）元素的右（左）外边界，除非后出现浮动元素的顶端在先出现浮动元素的低端下面。（不必担心一个浮动元素与另一个浮动元素重叠）。</li>\n<li>左浮动元素的右外边界不会在其右边右浮动元素的左外边界的右边。（防止浮动元素相互重叠）。</li>\n<li>一个浮动元素的顶端不能比其父元素的内顶端更高。如果一个浮动元素在两个合并外边距之间，放置这个浮动元素时就好像在两个元素之间有一个块级父元素。</li>\n<li>浮动元素的顶端不能<strong>比之前所有浮动元素或块级元素的顶端</strong>更高。</li>\n<li>如果源文档中一个浮动元素之前出现另一个元素，浮动元素的顶端不能比包含该元素所生成框的任何行框的顶端更高。</li>\n<li>左（或右）浮动元素的左边（或右边）有另一个浮动元素，前者的右外边界不能在其包含的右（左）边界的右边（左边）。（如果没有足够的空间，浮动元素会被挤到一个新的”行“上）。</li>\n<li>浮动元素必须尽可能高地放置。</li>\n<li>左浮动元素必须向左尽可能远，右浮动元素必须向右尽可能远。位置越高，就会向右或向左浮动得越远。</li>\n</ol>\n<p>如上这些浮动规则只处理了浮动元素和其父元素的左、右和上边界，而未涉及下边界。CSS2.1规定，浮动元素会延伸，从而包含其所有后代浮动元素。故通过将父元素设置为浮动元素，就可以把浮动元素包含在其父元素内。</p>\n<p>负外边距可能导致浮动元素移到其父元素的外面。还有一种方法，让浮动元素比其父元素更宽。</p>\n<p>若一个浮动元素与正常流中的内容发生重叠：</p>\n<ol>\n<li>行内框与一个浮动元素重叠时，其边框、背景和内容都在该浮动元素”之上“显示。</li>\n<li>块框与一个浮动元素重叠时，其边框和背景在该浮动元素”之下“显示，而内容在浮动元素”之上“显示。</li>\n</ol>\n<p>##清除浮动##</p>\n<blockquote>\n<p>##clear<br>值：left|right|both|none|inherit<br>应用于块级元素</p>\n</blockquote>\n<p>在google查询float标签相关文章发现下面两篇文章特别有意思：<br><a href=\"http://www.zhangxinxu.com/wordpress/?p=583\" target=\"_blank\" rel=\"external\">CSS float浮动的深入研究、详解及拓展(一)</a>，<a href=\"http://www.zhangxinxu.com/wordpress/?p=594\" target=\"_blank\" rel=\"external\">CSS float浮动的深入研究、详解及拓展(二)</a>。</p>\n<p>总结下有如下可以学习的知识点。</p>\n<ol>\n<li>浮动的出现的意义：<strong>文字环绕图片</strong>。</li>\n<li><p>浮动的本质：”包裹和破坏“。</p>\n<ul>\n<li>”包裹“——浮动就是个<strong>带有方位的<code>display；inline-block</code>属性</strong>。<code>display:inline-block</code> 具有包裹的作用，元素被包裹之后其宽度自适应元素本身大小;<code>float:left</code>或者<code>float:right</code>某种程度上等价于<code>display:inline-block</code>，其唯一区别在于：<code>float</code>具有方向性,<code>display:inline-block</code>仅仅有一个水平方向排列，而<code>float</code>可以从左到右排列，还可以从右到左排列（很少用到，没有多大意义）。</li>\n<li>”破坏性“，如上所述，浮动的意义是<strong>让文字环绕图片</strong>，而这时由于<code>float</code><strong>破坏了正常的line boxes</strong>。</li>\n</ul>\n<p>例如在<code>&lt;q&gt;这只是一个普通的标签，这里有一个&lt;cite&gt;cite&lt;/cite&gt;标签&lt;/q&gt;</code>中有四种boxes<br>containing box-&gt;line boxes-&gt;inline boxes(包括匿名的，不会成块显示，而是排成一行)-&gt;content area<br>如图所示：<br><img alt=\"line boxes示意\" src=\"http://paddingme.qiniudn.com/float.png\"></p>\n</li>\n</ol>\n<p>CSS中关于高度,<a href=\"http://www.zhangxinxu.com/wordpress/?p=583\" target=\"_blank\" rel=\"external\">文中</a>也给出了很好的介意：</p>\n<blockquote>\n<p>在目前的CSS的世界中，所有的高度都是有两个CSS模型产生的，一个是box盒状模型，对应CSS为”height+padding+margin”，另外一个是line box模型，对应样式为”line-height”。前者的height属性分为明显的height值和隐藏的height值，所谓隐藏的height值是指图片的高度，一旦载入一张图片，其内在的height值就会起作用，即使您看不到”height”这个词。而后者针对于文字等这类inline boxes的元素（图片也属于inline boxes，但其height比line-height作用更凶猛，故其inline boxes高度等于其自身高度，对line-height无反应），inline boxes的高度直接受line-height控制（改变line-height文字拉开或重叠就是这个原因），而真正的高度表现则是由每行众多的inline boxes组成的line boxes（等于内部最高的inline box的高度），而这些line boxes的高度垂直堆叠形成了containing box的高度，也就是我们见到的div或是p标签之类的高度了。</p>\n</blockquote>\n<p>浮动破坏了图片的inline-box，导致文字和图片无法同行显示，脱离了原来的line-box链，也没有了高度（无inline-box高度-&gt;无line-box高度-无高度）而这些结果导致了文字环绕图片显示。<br><a href=\"http://image.zhangxinxu.com/flash/blog/201001/css_float_by_zhangxinxu.swf\" target=\"_blank\" rel=\"external\">http://image.zhangxinxu.com/flash/blog/201001/css_float_by_zhangxinxu.swf</a> 中有很容易理解的动画显示。</p>\n<p>“包裹与破坏”！包裹是让标签占据的空间水平收缩，破坏是破坏的inline box。inline boxes是高度形成的基础，浮动破坏了inline boxes也就没有高度可言了。真是由于浮动元素没有了inline boxes，没有了inline boxes高度，才能让其他inline boxes元素重新整合，环绕浮动元素排列。</p>\n<p>浮动定位于绝对定位的区别：绝对定位元素也具有包裹性，绝对定位的元素脱离了文档流而浮动元素仍然在文档流中，这造成的差异是：同处于文档流中的 文字不会与浮动元素造成重叠，而会与绝对定位元素重叠</p>\n<p>浮动使高度塌陷-&gt;清楚浮动！<br>塌陷原因：元素含有浮动属性-&gt;破坏inline-box高度-&gt;破坏line-box高度-&gt;无高度</p>\n<p>清除浮动：</p>\n<ol>\n<li><code>&lt;div style=&quot;clear:both;&quot;&gt;&lt;/div&gt;</code>:浪费一个div标签</li>\n<li><code>.fix{voerflow:hidden;zoom:1}</code>:overflow:hidden;如果里面的元素要是想来个margin负值定位或是负的绝对定位，则会直接被裁掉了，所以此方法有局限性的。</li>\n<li><code>.fix{zoom:1;}.fix:after{display:block; content:&#39;clear&#39;; clear:both; line-height:0; visibility:hidden;}</code></li>\n</ol>\n<p>以上皆来自张鑫旭-鑫空间-鑫生活<a href=\"http://www.zhangxinxu.com\" target=\"_blank\" rel=\"external\">http://www.zhangxinxu.com</a></p>\n"},{"title":"有点乱，停下来想想","url":"http://padding.me/blog/2014/04/18/stop-to-think-a-new-start/","content":"<p>当我把<a href=\"http://padding.me/blog/2014/04/13/say-goodbye-to-2013/\">&lt;&lt;挥手2013&gt;&gt;</a>贴到博客里的时候，再回头看已经过了三分之一的2014年，的确收获了很多。</p>\n<ol>\n<li>做了自己的博客;</li>\n<li>实习也敲定了;</li>\n<li>一只脚总算踏入前端了;</li>\n<li>收获了新的友情.</li>\n</ol>\n<p>伴之而来的总是些不太好的情绪和闹心的事情。</p>\n<ul>\n<li>姐姐离开了我们，看见姐姐QQ再也亮不起来了，打开手机看见熟悉的号码，还是很难过。<ul>\n<li>一直很忙，忙着实习，忙着考试，丢了掉一些旧友情，我并不知道它有没有变质，但我希望它还一直在，谢谢你陪我在我最艰难的时候作为我最好的朋友陪在我身边。也许大家都忙起来了，也许因为理念的原因分道扬镳，但你曾是我最好的朋友，真诚祝福你前途似锦。</li>\n<li>越来越混乱，要看的书越来越多，想做的事情越来越多。想得太多，做得太少。</li>\n</ul>\n</li>\n</ul>\n<p>晚上打开sublime，想整理一下最近学到的一些东西，想写一篇如何使用github、jekyll搭建博客，打开了很多网页，可是不知道该怎么下笔。就像今天百度电话面试，很多问题我只是知道和了解，多追问几句，我便无从知晓。这糟糕的状态——<strong>如何把自己掌握的知识表达清楚</strong>，我还得用很长时间去锻炼这方面的能力。一方面自己掌握的的确不扎实，不扎实导致模棱两可，逻辑不清。另一方面，没有养成将所得所学及时总结。尝试去和别人分享，去教会别人一些东西，会使自己掌握得更牢靠。</p>\n<p>于是我停下来，好好想一想接下来实习之前要做的事情。</p>\n<ol>\n<li>看书，《CSS权威指南》、《JavaScript设计模式》、《JavaScript语言精粹》、《JavaScript权威指南》等等，多看些有趣的书。</li>\n<li>刷题，github上fork了一些前端试题，认真做每一道题，掌握它们。</li>\n<li>supertable，在实习之前一定要把这个项目拿下，J说他没时间做了，那就自己一个人坚持下去，学习NodeJS,让这个产品变为现实。</li>\n<li>整理，整理好各种各样的信息，不要迷失。前端要学的太多，目前对我而言，掌握最基础的才是最重要，不用贪多，不用跟风。</li>\n<li>思考，多问自己为什么，多上stackoverflow问问题，尝试着去帮别人解决一些问题。不要固步自封，把自己困在原地。</li>\n<li>到九月份的时候，自己可以拿出一份漂亮的简历，有着扎实的基础去参加BAT的校招。</li>\n</ol>\n<p>留给自己的时间并不多，每一个人的运气有限，机会是给予有准备的人，而我还在起跑线上，这次不想再输的太难堪，有人说，<code>越努力，越幸运</code>，可能把，<code>志存高远，脚踏实地</code>。</p>\n"},{"title":"无为而至","url":"http://padding.me/blog/2014/04/15/he-gives-a-shit/","content":"<p>很多时候我都不够勇敢与果断，</p>\n<p>我知道我所有的好与坏。</p>\n<p>遗憾和失望接踵而至，</p>\n<p>终于又是跌倒了再来的节奏。</p>\n<p>总是很忙，</p>\n<p>消弭的时间，</p>\n<p>和自己欲罢不能。</p>\n<p>丢掉的遗弃的放下的，</p>\n<p>不是都过去了。</p>\n<p>说了很多荒唐话，</p>\n<p>做了很多不能让自己原谅的事情。</p>\n<p>――傻逼如我，磕破头，敲骨吸髓。</p>\n<p>寻找，追逐意义以及信仰。</p>\n<p>用一大堆大道理去诓骗。</p>\n<p>倒床就睡，睁眼能醒。</p>\n<p>我要和自己的孤独决一死战。</p>\n<p>好在一切还不坏，一切终于结束。</p>\n<p>最深的忏悔在心底升腾，煮沸。</p>\n<p>加上悲痛欲绝的伤痛和揪心，</p>\n<p>一起喝下。</p>\n<p>这世界很无聊很无趣很嗜血，</p>\n<p>吃一块人肉，</p>\n<p>喝一口兄弟的血，</p>\n<p>嘬一口肚皮面，</p>\n<p>饮一碗孟婆汤。</p>\n<p>夜好长，</p>\n<p>让人掉头发，</p>\n<p>每一个面孔从我脑海里飘过，</p>\n<p>我都要长跪不起。</p>\n<p>让你们担心了。</p>\n<p>我特么要买两辆悍马！</p>\n<p><em>写于2013年03年26日</em></p>\n"},{"title":"JavaScript语言精粹之第四章 函数（下）","url":"http://padding.me/blog/2014/04/07/JavaScript-language-of-the-essence-study-notes-JavaScript-language-essence-fourth-chapter-function-below/","content":"<p>##上章回顾##<br>上节介绍了函数中的参数（arguments），返回，异常，给类型增加方法，递归，以及作用域，这里不展开回忆，可见上一节讨论（上一节其实也没展开讨论，只是给个概念化描述=。=）。</p>\n<hr>\n<p>##第四章函数（下）##</p>\n<p>###4.10 闭包（Closure）###<br>好的，重点来了。上节说了JavaScript没有块作用域，只有函数作用域，作用域的好处是内部函数可以访问定义它们的外部函数的参数和变量（除了this和arguments）。更有趣的是，内部函数会拥有比其外部函数更长的生命周期:)。</p>\n<pre><code>\nvar myObeject = function () {\n    var value = 0;\n\n    return {\n        increment: function (inc) {\n            value += typeof inc === 'number' ? inc : 1;\n        },\n        getValue: function () {\n            return value;\n        }\n    }\n}();\n</code></pre>\n这里通过调用一个函数的形式来初始化myObject,该函数将返回一个对象字面量。此函数定义了一个value变量。该变量对increment和getValue可用，但函数的作用域使得它对其他的程序来说是不可见的。这里要注意的是我们并没有把一个函数赋给myObject而是把调用这个函数后返回的结果赋值给myObject了（注意最后一行的（））。该函数返回一个包含两个方法的对象，并且这些方法继续享有访问value变量的特权。\n<pre><code>\nvar quo = function (status) {\n    return {\n        get_status:function () {\n            return status;\n        }\n    };\n};\nvar myQuo = quo(\"amazed\"); //函数调用\ndocument.writeln(myQuo.get_status());\n</code></pre>\n\n<pre><code>\n//对比下之前的myQuo\nvar Quo = function (string) {\n    this.status = string; \n};\nQuo.prototype.get_status = function () {\n    return this.status;\n};\nvar myQuo = new Quo(\"confused\"); //构造器调用\ndocument.writeln(myQuo.get_status());\n</code></pre>\n前面的quo函数被设计成无需在前面加上new来使用（所以它的名字没有首字母大写）。当我们调用quo时，它返回包含get_status方法的一个新都想。该对象的一个引用保存在myQuo中，即使quo已经返回了，但get_value方法仍然享有访问quo对象的status属性的特权。get_status方法并不是访问该参数的一个拷贝，它访问的就是该参数本身。因为该函数可以访问它**被创建时的上下文环境**。this is closure.\n<pre><code>\nvar fade = function (node) {\n    var level = 1;\n    var step = function () {\n        var hex = level.toString(16);\n        node.style.backgroundColor = '#FFFF' + hex + hex;\n        if (level < 15) {\n            level += 1;\n            setTimeout(step,100);\n         }\n    };\n    setTimeout(step,100);\n};\nfade(document.body);\n</code></pre>\n分析下这段代码：我们调用fade,把document.body作为参数传递给它，fade函数设置level为1，它定义了一个step函数，接着它调用steTimeout,并传递step函数和一个时间（100毫秒）给它，然后它返回，fade函数结束。\n\n在100毫秒之后step函数被调用。它把fade函数的level变量初始化为16进制。接着，它修改fade函数得到的节点的背景颜色。然后查看level的大小，如果level尚未变为白色（F）那么他增大fade函数的level变量和用setTimeout预定让它自己再次运行。step函数很快被再次调用。但这次levle变量值为2，fade函数在之前已经返回了，但只要fade的内部函数需要，它的变量就会持续保留。\n\n再看一个糟糕的例子。\n<pre><code>\nvar add_the_handelers = function (nodes) {\n    var i;\n    for (var i = 0; i < nodes.length; i+=1) {\n        nodes[i].onclick = function (e) {\n            alert(e);\n        }\n    }\n};</code></pre>\nadd_the_handlers函数目的是给每个事件处理器一个唯一值（i）。它未能达到目的是因为时间处理器函数绑定了变量i,而不是函数在构造时的变量的i。（不是很懂，函数也未达到显示节点数目的效果~~=||=）\n<pre><code>\n//更好的例子\nvar add_the_handelers = function (nodes) {\n    var i;\n    for (var i = 0; i < nodes.length; i+=1) {\n        nodes[i].onclick = function (i) {\n            return function (e) {\n            alert(e);\n            };\n        }(i);\n    }\n};</code></pre>\n现在我们定义了一个函数并立即传递i进去执行，而不是把一个函数赋值onclick。那个函数将返回一个事件处理器函数，这个事件处理器函数绑定的是传递进去的i的值。而不是定义在add_the_handlers函数里的i的值。那个被返回的函数被复制给onclick。\n\n闭包是JS一个非常重要的特性，前端乱炖里也有很多非常好的文章，大家可以去看看。\n\n###4.11  回调###\n函数可以让不连续事件的处理变得更容易。例如：假定有这么一个序列，由用户交互开始向服务器发送请求，最终显示服务器的响应，最纯朴的方法可能会是这样写的。\n\n    request = prepare_the_request();\n    response = send_request_synchronously(request);\n    display(response);\n\n同步请求易会导致客户端进入假死状态，响应性降低。来尝试异步请求。提供一个当服务器的响应到达时将被调用的回调函数。异步的函数立即返回，这样客户端不会被阻塞。\n\n    request = prepare_the_request();\n    response = send_request_synchronously(request,function(response){\n        display(response);\n    });\n我们传递了一个函数作为参数给send_request_synchronously函数，它将在收到响应时被调用。\n####4.12   模块###\n模块是一个提供接口但隐藏状态与实现的函数或者对象。我们可以使用函数和闭包来构造模块。通过使用函数构造模块，我们就可以完全摒弃全局变量的使用。\n\n例如，我们要给String增加一个deentityify方法，其作用是寻找字符串中的HTML字符实体来替换为他们对应的字符。在一个对象中保存字符实体的名字和他们对应的字符是有意义的。我们在哪儿保存该对象呢。全局变量，oh,no,donnot give shit.我们可以把它定义在该函数本身，但是有运行时的小号，我们没执行一次函数该字面量就会被求值一次。理想的额方式是将其放入一个闭包中。而且也许还能提供一个增加更多字符实体的扩展方法。\n\n<pre><code>String.method('deentityify',function(){\n    //字符实体表，它映射字符实体的名字到对应的字符。\n    var entity = {\n        quot : '\"',\n        lt : '<', gt=\"\" :=\"\" '=\"\">',\n    };\n    //返回deetityify方法\n    return function () {\n        //这才是deetityify方法，它调用字符串的replace方法\n        //查找‘&’开头和‘;’结束的字符串。如果这些字符可以在字符实体表中找到\n        //那么久将该字符实体替换为映射表中的额值。\n\n        return this.replace(/&([^&;]+);/g,\n            function(a,b){\n                var r = entity[b];\n                return typeof r === 'string' ? r : a;\n            });\n    };\n}());\n//注意我们用（）运算法立即调用我们刚刚创建的函数。\n\ndocument.writeln('<\"'.deentityify()); no=\"\" method=\"\" 'method'=\"~~=</code\"></\"'.deentityify());></',></code></pre>\n模块模式利用了函数作用域和闭包来创建绑定对象与私有成员的关联。在该例中只有deentityify方法有权访问字符实体表这个数据对象。\n\n**模块模式的一般形式是：一个定义了私有变量和函数的函数；利用闭包创建可以访问私有变量和函数的特权函数；最后返回这个特权函数；或者把他们保存到一个可访问到的地方**\n\n模块模式也可以用来产生安全的对象。假定我们想要构造一个用来产生序列号的对象。\n<pre><code>\n//返回一个用来产生唯一字符串的对象\n//唯一字符串有两部分组成：前缀+序列号\n//该对象包含一个设置前缀的方法，一个设置序列号的方法\n//和一个产生唯一字符串的gensym方法\nvar serial_maker = function () {\n    var prefix = '';\n    var seq = 0;\n    return {\n        set_prefix: function (p) {\n            prefix = String(p);\n        },\n        set_seq: function (s) {\n            seq = s;\n        },\n        gensym: function () {\n            var result = prefix + seq;\n            seq += 1;\n            return result;\n        }\n    };\n};\n\nvar seqer =serial_maker();\nseqer.set_prefix('Q');\nseqer.set_seq(1000);\nvar unique = seqer.gensym();\n</code></pre>\n\n<p>###4.14   级联###<br>有一些方法没有返回值，例如一些设置或修改对象的某个状态却不返回任何值的方法就是典型例子。如果我们让这些方法返回this而不是undefined,就可以启用级联。在一个级联中，我们可以在单独一条的语句中一次调用同一个对象的很多方法。一个启用级联的Ajax类库允许我们以这样的形式去编码。</p>\n<p><pre><code><br>getElement(‘myBoxDiv’).<br>    move(350,150).<br>    width(100).<br>    height(100).<br>    color(‘red’).<br>    appendText(“Please donot give a shit!”);<br>    on(‘mousedown’,function(m){<br>        this.startDrag(m,this.getNinth(m));<br>    }).<br>    on(‘mousemove’,’drag’).<br>    later(2000,function(){<br>        this.<br>            color(‘yellow’).<br>            setHTML(‘What hath God wraught?’).<br>            slide(400,40,200,200)<br>        }).<br>    tip(‘this box is resizeable’);<br></code></pre><br>级联可以产生具备很强表现力的接口。它也能帮助控制那种构造试图一次做太多事情的接口的趋势。</p>\n<p>###4.14   套用###<br>函数也是值，我们可以去操作函数值。<strong>套用</strong>允许我们将函数与传递给它的参数相结合去产生出一个新的函数。</p>\n<pre><code>var add1 = add.curry(1);\n document.writeln(add1(6));//7\n</code></pre><p>//curry见书P43</p>\n<p>###4.15 记忆###<br>函数可以用对象去记住先前操作的结果-&gt;记忆。</p>\n<pre><code>var fibonacci = function (n) {\n   return n &lt; 2 ? n:fibonacci(n-1)+fibonacci(n-2);\n}\n\nfor (var i = 0; i&lt;=10; i++){ \ndocument.writeln(&apos;//&apos;+i+&apos;:&apos;+fibonacci(i));\n }\n //fibonacci函数被调用了453次。做了大量的重复工作\n //我们在一个名为memo的数组里保存我们的存储结果，存储结果隐藏在闭包中\n //当函数被调用时，这个函数首先看是否已经知道存储结果，若知道立即返回该存储结果。\n</code></pre><p><pre><code><br>var fibonacci =    function () {<br>    var memo = [0, 1];<br>    var fib = function (n) {<br>        var result = memo[n];<br>        if (typeof result !== ‘number’) {<br>            result =fib(n-1)+fib(n-2);<br>            memo[n] =result;<br>        }<br>        return result;<br>    };<br>    return fib;<br>}();</code></pre></p>\n<p>for (var i = 0; i&lt;=10; i++){<br>    document.writeln(‘//‘+i+’:’+fibonacci(i));<br>}<br>//该函数得到同样结果但却调用了29此。<br><br>我们可以把这种形式一般化，编写一个函数来帮助我们构造带记忆功能的函数。<br>memoizer函数将取得一个初级的memo数组和fundamental函数，它返回一个管理meno存储和在需要时调用fundamental函数的shell函数。我们传递这个shell函数和该函数的参数给fundamental函数。</p>\n<p><pre><code><br>var memoizer =  function (memo,fundamental) {<br>    var shell = function (n) {<br>        var result = memo[n];<br>        if(typeof result !== ‘number’) {<br>            result = fundamental(shell,n);<br>            meno[n]=result;<br>        }<br>        return result;<br>    };<br>    return shell;<br>};<br>//x现在我们可以用memoizer来定义fibonancci函数<br>var fibonacci = memoizer([0,1],function(shell,n){<br>return shell(n-1)+shell(n-2);});<br></code></pre><br>==================本章 完==========================</p>\n<p><em>――“你为什么要学JavaScript？”――“为了酷炫~！”</em></p>\n"},{"title":"JavaScript语言精粹之第四章 函数（中）","url":"http://padding.me/blog/2014/04/06/JavaScript-language-of-the-essence-study-notes-JavaScript-language-function-in-Chapter-fourth/","content":"<p>##上半章回顾##<br>上半章介绍了函数对象，函数的字面量定义，函数的四种调用模式。重点回顾下这四种调用模式。</p>\n<ul>\n<li>方法调用模式：当函数被保存为一个对象的属性时，此时调用即为方法调用（函数为对象属性，调用为方法调用）。这时this被绑定到该对象。如果一个调用表达式包含一个属性存取式，那么它被当做方法来调用（属性被调用，当做方法调用）；</li>\n<li>函数调用模式：当函数不是对象的属性时，为函数调用，此时this被绑定到全局对象，而非绑定到这个函数的外部函数的this变量。</li>\n<li>构造器调用（new）：this绑定到这个新new的对象。</li>\n<li>Apply调用：函数是对象，所以也有方法。apply方法让我们构件一个参数数组并用其调用函数，也允许我们选择this的值，apply方法接受2个参数第一个是赋给this的值，第二个是参数数组。</li>\n</ul>\n<hr>\n<p>##第四章 函数（中）##</p>\n<p>###4.4  参数###<br>当一个函数调用时，会得到一个arguments数组，通过arguments函数可访问它被调用时传递给它的参数列表，包括哪些未被分配给函数声明时定义的形参的多余参数。</p>\n<pre><code>var sum = function () {\n    var i, sum=0;\n    for (var i = 0; i &lt; arguments.length; i++) {\n         sum += arguments[i];\n    }\n    return sum;\n};\ndocument.writeln(sum(4,8,12,13));//37\n</code></pre><p>注意arguments只是一个array-like对象，其拥有一个length属性，但缺少所有的数组方法。</p>\n<p>###4.5  返回###<br>当一个函数被调用时，return语句被执行时函数立即返回而不再执行余下的部分。一个函数总是返回一个值，如果没指定则为undefined。如果函数以前加上new出来的，且返回值不是一个对象，则返回<br>this(该新对象)。</p>\n<p>###4.6 异常###<br>异常是干扰程序的正常流程的非正常（但并未完全出乎意料的）事故。当查出这样的事故时，程序抛出异常。</p>\n<pre><code>var add = function (a,b){\n    if (typeof a !== &apos;number&apos;||typeof b !== &apos;number&apos;){\n        throw {\n            name: &apos;TypeError&apos;,\n            message: &apos;add needs numbers&apos;\n         };\n     }\n     return a + b;\n  }\n</code></pre><p>throw语句中断函数执行，应该抛出一个exception对象，该对象包含可识别异常类型的name属性和一个描述性的message属性。也可添加其他属性。<br>该exception对象将被传递给一个try语句的catch语句。</p>\n<pre><code>var add = function (a,b) {\n    if (typeof a !== &apos;number&apos;||typeof b !== &apos;number&apos;){\n       throw {\n           name: &apos;TypeError&apos;,\n           message: &apos;add needs numbers&apos;\n       };\n   }\n   return a + b;\n }\nvar try_it = function () {\n    try {\n        add(&quot;seven&quot;);\n   } catch (e) {\n       document.writeln(e.name + &quot;:&quot; + e.message);\n   }\n}\ntry_it();\n</code></pre><p>###4.7  给类型增加方法###<br>JavaScript允许给语言的基本类型增加方法。如第三章，我们通过Object.prototype添加方法是的该方法对所有对象可用。这样的方法对函数、数组、字符串、数字和正则表达式和布尔值同样适用。</p>\n<p>例如我们可通过给Fundation.prototype增加方法使得所有函数都有这个方法。</p>\n<pre><code>Function.prototype.method = funtion (name,func) {\n    this.prototype[name] = func;\n    return this;\n }\n</code></pre><p>通过给Fundation.prototype增加一个method方法，我们就不必键入prototype这个属性名了。</p>\n<p>我们还可以用过给Number.prototype添加一个integer方法来重写JavaScript中的取整方法。它会根据数字的正负来判断使用Math.floor（向下取整）或者Math.ceiling（向上取整）。</p>\n<pre><code>Number.method(&apos;integer&apos;,function(){\n    return Math[this&lt;0?&apos;ceiling&apos;:&apos;floor&apos;](this);\n});\ndocument.writeln((-10/3).integer());//-3\n //报错 Number里无method方法 待查\n\n //移除字符串末端空白的方法\n String.method(&apos;trim&apos;,function() {\n     return this.replace(/^\\s+|\\s+$/g,&apos;&apos;);\n  });\n  document.writeln(&apos;&quot;&apos; + &quot;     neat   &quot;.trim() + &apos;&quot;&apos;);\n</code></pre><p>通过给基本类型增加方法，可大大提高语言表现力。基于JS原型继承的动态本质，新的方法立刻被赋予到所有的值（对象实例）上，哪怕值（对象实例）是在创建之前就创建好了。</p>\n<p>基本类型的原型是公共的机构，在类库混用时应小心。一个保险的做法是指在确定没有该方法时才添加他。</p>\n<pre><code>//有条件的增加一个方法\nFunction.prototype.method = function (name,fun) {\nif (!this.prototype[name]) {\n     this.prototupe[name] = func;\n     }\n };\n</code></pre><p>另外要注意for in语句在原型上表现很糟糕可参考第三章的解决办法。</p>\n<p>###4. 8 递归###<br>递归函数是一种会直接或间接的调用自身的函数。</p>\n<p>//Hanoi问题</p>\n<p>递归函数可以非常高效的操作树形结构，比如浏览器的DOM。每次递归调用时处理给定树的一小段。</p>\n<p><pre><code><br>//walk_the_DOM函数，它从某个给定结点开始，按HTML源码中顺序访问该树的每个节点。<br>//它会调用一个函数，并依此传递每个节点给它，walk_the_DOM调用自身去处理每一个子节点。<br>var walk_the_DOM = function walk(node,func){<br>    func(node);<br>    node=node.firstChild;<br>    while (node) {<br>        walk (node, func){<br>            node=node.nextSibling;<br>        }<br>    }<br>};</code></pre></p>\n<p>//getElementByAttribute取得属性名字符串和一个可选的匹配值<br>//他调用walk_the_DOM 传递一个用来查找节点属性名的函数<br>//匹配的节点会累积到一个结果数组。<br>var getElementByAttribute = function (att, value) {<br>    var results = [];<br>    walk_the_DOM(document.body, function (node) {<br>        var actual = node.nodeType === 1&amp;&amp; node.getAttribute(att);<br>        if(typeof actual === ‘string’ &amp;&amp; (actual === value || typeof value !== ‘string’)) {<br>            results.push(node);<br>        }<br>    });<br>    return results;<br>}<br>//太高深，蒙逼的节奏，后面回来再看。<br><br>尾递归优化，即如果一个函数返回自身递归调用的结果，那么调用的过程会被替换为一个循环。可惜JS不提供，深度递归的函数可能会因为返回堆栈溢出而运行失败。</p>\n<pre><code>var factorial = function factorial (i, a) {\n   a = a || 1;\n    if (i &lt;2) {\n        return a;\n    }\n    return factorial(i-1, a*i);\n}\n document.writeln(factorial(4));//24\n</code></pre><p>###4.9  作用域###<br><strong>JS并不是支持块作用域！</strong> JS具有函数作用域！因为缺乏快作用域，最好在函数体顶部声明所有需要用到的变量。（这里涉及到函数提升和变量提升。）</p>\n<p><hr><br>每天更新前回顾下昨天的文章，发现又get了很多新技能，而且对于前面的一些坑或者不懂的地方突然就明白了，这难道是传说中的 <code>温故而知新，可以为**湿**！</code></p>\n<p>近期考试所以更的慢.</p>\n<p>too tired to learn,未来无限可能。</p>\n"},{"title":"JavaScript语言精粹之第四章 函数（上）","url":"http://padding.me/blog/2014/04/05/JavaScript-language-of-the-essence-study-notes-JavaScript-language-essence-function-on-the-fourth-chapter/","content":"<p>##上一章回顾##<br>上一章主要介绍了对象的定义及相关属性：</p>\n<ol>\n<li>对象字面量的定义:包含在一对花括号中的零个或多个“名/值”对。</li>\n<li>检索对象中的值:通过在[]后缀加入字符串表达式的方式,用.表示法也可以（若字符串表达式是一个常数且是合法的JavaScript标识符）；检索并不存在的元素的值返回undefined；||可以用来填充<strong>默认的值</strong>；检索一个undefined的值会爆出类型错误；</li>\n<li>更新对象中的值。</li>\n<li>引用：对象通过引用来传递，永远不会被拷贝。</li>\n<li>原型：继承，<strong>委托</strong>。</li>\n<li>反射：typeof ，处理非独有的属性-hasOwnProperty方法。（反射机制指的是程序在运行时能够获取自身的信息。例如一个对象能够在运行时知道自己有哪些方法和属性。）</li>\n<li>枚举：for in；hasOwnProperty方法过滤属性，typeof 过滤函数，或创建数组以正确的顺序包含属性名再for循环。</li>\n<li>删除：可能会暴露来自原型链中的属性。</li>\n<li>Global Abatement：在应用中只创建为一个全局变量；闭包。</li>\n</ol>\n<hr>\n<p>##第四章  函数##<br>函数包含一组语句，他们是JavaScript的基础模块单元，用于代码复用、信息隐藏和组合调用。函数用于指定对象的行为。</p>\n<p>##4.1 函数对象##<br>如上章述，对象是”名/值”对的集合并拥有i个连到原型对象的隐藏链接，JavaScript中函数就是对象。<br><strong>对象字面量产生的对象连接到 Object.prototype,函数对象连接到Function.prototype（该原型对象本身连接到Object.prototype）</strong>。每个函数在创建时附有两个附加的隐藏属性：函数的上下文和实现函数行为的代码（JavaScript创建一个函数对象时会为该对象设置一个“调用”属性，当JS调用该函数时，可理解为JS调用此函数的“调用”属性）。</p>\n<p> 每个函数对象在创建时还附带prototype属性，其值为一个拥有constructor属性且值为该函数的对象（注意理解），这和隐藏的Function.prototype完全不同（下章分析）。</p>\n<p>##4.2  函数字面量##<br>函数对象可以通过函数字面量来创建：</p>\n<pre><code>//创建一个名字add的变量，并用来把两数字想家的函数赋值给它。\nvar add = function (a, b) {\n    return a + b;\n};\n</code></pre><p>函数有四部分构成：function保留字； 函数名，可省略（匿名函数），函数可以用它的名字来递归调用自己；（）中的参数；{}中的语句。</p>\n<p>函数字面量可出现在任何允许表达式出现的地方。函数可以被定义在其他函数中。一个内部函数自然可以访问自己的参数和变量。同时它也能方便地访问它被嵌套在其中的函数的参数与变量。通过函数字面量创建的函数对象包含一个连到外部上下文的连接,即<strong>闭包</strong>。</p>\n<h2 id=\"4-3-调用\"><a href=\"#4-3-调用\" class=\"headerlink\" title=\"4.3 调用\"></a>4.3 调用</h2><p>调用一个函数将暂停当前函数的执行，传递控制权和参数给新函数。除声明时定义的形参外，每个函数接收两个附加的参数：this和arguments。在oo中，this值取决于调用模式。JavaScript有四种调用模式：方法调用、函数调用、构造器调用、apply调用模式。这些模式在如何初始化关键参数this存在差异。<strong>调用运算符是跟在任何产生一个函数值的表达式之后的一对圆括号</strong>。圆括号内可包含零或多个用逗号隔开的表达式，每个表达式产生一个参数值。每个参数值被赋予函数声明时定义的形参名（就是实参传进函数）。当实参（arguments）与形参（parameters）个数不匹配时不会导致运行错误。若实参多了则多的忽略，若少了则少的传给形参的实参值定义为undefined。对参数不进行类型检查。</p>\n<p>#####方法调用模式#####<br>当一个函数被保存为对象的一个属性时，成为<strong>方法</strong>。当一个方法被调用时，this被绑定到该对象。如果一个调用表达式包含一个属性存取表达式（即一个点表达式或[subscript]下标表达式），那么它被当做一个方法来调用（很好理解）。</p>\n<pre><code>var myObject = {\n     value : 0,//注意这里是逗号，书上是分号\n  increment : function (inc) {\n    this.value += typeof inc === &apos;number&apos; ? inc : 1;\n  }\n};\nmyObject.increment();\ndocument.writeln(myObject.value); //1\nmyObject.increment(2);\ndocument.writeln(myObject.value); //3\n</code></pre><p>方法可使用this去访问对象，故其能从对象中取值或修改该对象。this到对象的绑定发生在调用时（very late binding），这使得函数可以对this高度复用。通过this可取的所属对象的上下文的方法称为公共方法。</p>\n<p>#####函数调用模式#####<br>当一个函数并非一个对象的属性时，它就当做一个函数来调用。<code>var sum = add(3, 4);//sum值为7</code><br>当函数以此模式调用时，this被绑定到全局对象（语言设计上的错误）。正确设计应为当内部函数被调用时，this应该仍然绑定到外部函数的this变量。导致方法不能利用内部函数来帮助它工作。因为内部函数的this被绑定了错误的值，所以不能共享该方法对对象的访问权限。解决方法，定义一个that变量并把它赋值给this,那么内部函数就可以通过that访问this了。</p>\n<pre><code>//给myObject 增加一个 double 方法\nmyObject.double = function () {\n    var that = this;//解决方法\n    var helper = function () {\n       that.value = add(that.value,that.value);\n    };\n    helper();//以函数的形式调用helper\n};\n//以方法的形式调用doule\nmyObject.double();\ndocument.writeln(myObject.getValue());//6\n</code></pre><p>#####构造器调用模式#####<br>JavaScript基于原型继承的语言，但是不自信，所以提供了基于类的语言类似的对象构建语法。</p>\n<p>如果在一个函数前加上 new 来调用，那么将创建一个隐藏链接到该函数的prototype成员的新对象，同时this将会绑定到这个新对象上。（new 也会改变 return 语句的行为）</p>\n<pre><code>//创建一个名为Quo的构造器函数，它创造一个带有status属性的值。\nvar Quo =function (string) {\n    this.status = string;\n};\n//给Quo的所有实例提供一个名为 get_status 的公共 方法。\nQuo.prototype.get_status = function () {\n        return this.status;\n }\n//构造一个Quo实例\nvar myQuo =new Quo(&quot;confused&quot;);\ndocument.writeln(myQuo.get_status()); //confused;\n</code></pre><p>不推荐这种方式。</p>\n<p>#####Apply调用模式#####<br>JavaScript是一门函数式的面向对象编程语言，所以函数可以用方法。<br>apply方法让我们构建一个参数数组并用其去调用函数，它也允许我们选择this的值。apply方法接收两个参数，第一个是将被绑定给this的值，第二个是一个参数数组。</p>\n<pre><code> //构建一个包含两个数字的数组，并且将他们想加\n\nvar array = [3, 4];\nvar sum = add.apply(null, array); //sum值为7\n\n//构造一个包含status成员对象\nvar statusObeject = {\n    status ：&apos;A-OK&apos;\n };\n\n //statusObeject并没有继承自 Quo.prototype,但我们可以在statusObeject上调用get_status方法。\n //尽管statusObeject并没有一个名为get_status的方法。\n\nvar status = Quo.prototype.get_status.apply(statusObeject);\n//status值为OK\n</code></pre><p><hr><br>今晚就到这里，明天继续。=。=</p>\n"},{"title":"","url":"http://padding.me/blog/2014/04/04/JavaScript-language-of-the-essence-study-notes-thrid-chapter-grammar/","content":"<hr>\n<p>title: JavaScript语言精粹之第三章 对象<br>layout: post<br>tags:</p>\n<h2 id=\"JavaScript\"><a href=\"#JavaScript\" class=\"headerlink\" title=\"- JavaScript \"></a>- JavaScript </h2><p>##上一章回顾以及一些废话##<br>首先谢谢芋头大大以及其他各位大大的鼓励。很多时候，在自己查找技术文章时，只是为了寻找一个答案，而答案之后的来由却从没有做过多考究，以至于我越来越觉得自己不会思考。这也是在这里开专栏的原因之一，认真去看一本书，写读书笔记，多问自己几个为什么。昨天的排版很烂，今天看了下markdown的语法和html5的一些语义化标签。所以弄到现在。好了，废话少说，温故知新先回顾下上一章语法的知识点。</p>\n<p>上一章主要说了JavaScript的语法,先列出觉得重要的地方：</p>\n<ul>\n<li>===(严格相等运算符)首先计算其操作数的值，再进行比较，比较过程中无任何类型转换，JS的对象比较是引用比较非值比较，对象只和对象本身相等，和任何其他对象不等；</li>\n<li>==（相等运算符）null和undefined相等，其他不同的操作数比较时，有number转为number,有boolean也转为number,有string的转string再进行比较，看是否相等。对象互相不等，NaN互相不相等；</li>\n<li>JS依赖于全局变量进行连接，所有编译单元的所有级别对象都被抛入全局对象的公共命名空间中。当var语句被用在函数的内部时，他定义了这个函数的私有变量；</li>\n<li>false,null,undefined,空字符串”,数字0,数字NaN都为假，其余皆为真；</li>\n<li>函数调用引发函数的执行，函数调用运算符是跟随在函数名后面的一对圆括号。</li>\n<li>type of 运算符产生的值有‘number’ ‘string’ ‘boolean’ ‘undefined’ ‘function’和’object’（注意都是小写）;而如果运算数是一个数组或null,结果是‘object’是不对的。</li>\n</ul>\n<p>第六条中typeof(null)或typeof(array)(array为一数组)为什么结果是’object’不对呢，查了查书，是因为:</p>\n<p>1.JavaScript本身对于数组和对象的区别很混乱，在区别数组和对象上没有一个很好的机制。typeof运算符报告数组的类型为‘object’没什么意义，可通过自定义is_array来判断是否为数组。<br>2.typeof(null)很糟糕返回的不是null，我们知道JavaScript中有六种数据类型，分别为String,Number,Boolean,Null,Undefined,Object,(另外有些人把Function也作为一种数据类型，这里存在争议，有兴趣的同学可以参考<a src=\"http://blog.csdn.net/aimingoo/article/details/6634977\">《再谈JavaScript的数据类型问题》</a>)进一步理解。更好的检测null的方式应为my_value===null. 那么typeof如何区分对象和null呢，因为null值为假，所有对象值为真，所以可以有：<br>              <pre><code>if(my_value&amp;&amp;typeof my_value===’object’){//my_value是一个对象或数组。}</code></pre></p>\n<p>好的，下面进入第三章对象的学习。</p>\n<hr>\n<h2 id=\"第三章-对象\"><a href=\"#第三章-对象\" class=\"headerlink\" title=\"第三章  对象\"></a>第三章  对象</h2><p>JavaScript中简单类型包括数字、字符串、布尔值、null值和undefined，其他所有的值都为对象（数组是对象，函数是对象，正则表达式是对象，对象当然也是对象）。String,Number,Boolean“貌似”对象，因为他们它们有自己的方法，但他们是不可变的。JavaScript中对象是可变的键控组合（keyed collections）（这句话如何理解？）。对象是属性的容器，其中每个属性都拥有名字和数值，属性的名字可是包括空字符串在内的任意字符串，而属性值可是除undefined值之外的任意值。JavaScript中的对象是无类别（class-free）的。即其对新属性的名字和值无约束。对象适合收集和管理数据。对象可以包含其他对象，所以他们可以容易地表示成树形或图形结构。JavaScript包括一个原型链特性，允许对象继承另一个对象的属性，正确的地使用它能减少对象初始化的时间和内存消耗。（后面讨论）</p>\n<p>###3.1  对象字变量###<br>对象字面量提供了一种非常方便地创建新对象值的表示法。一个对象字面量就是包围在一对花括号中的零或多个“名/值”.对象字面量可出现在任何允许表达式出现的地方。</p>\n<pre><code>var empty_object={};\n                  var stooge={\n                  \"first-name\"=\"Chouchou\",//(注意这里是逗号)\n                  \"last-name=\"Shouchouchou\"//(注意这里没符号！)\n                                  }</code></pre>\n属性名可以是包括空字符串在内的任何字符串。在对象字面量中，如果属性名是一个合法的JavaScript标识符且不是保留字，并不强制要求用引号括住属性名。所以用引号括住“fisrt-name”是必须的（因为含‘-’这个属性名不是合法的JS标识符，见上一章标识符定义“标示符有一个字母开头，其后可加一个或多个字母、数字或下划线，不允许使用保留字。”），而是否括住first_name才是可选的了。逗号用来分隔多个“名/值”对(原来JSON数据的渊源在这里)。\n\n属性的值可以从包括另一个对象字面量在内的任意表达式中获得。对象是可嵌套的。\n<pre><code>var flight={\n  airline=\"mh\",\n  number=370,\n  departure：{\n    IATA:\"KL\"，\n    time:\"2014-03-08 00:25\",\n    city:\"Kuala Lumpu\"\n  },\n  arrival:{\n    IATA:\"CN\"，\n    time:\"future\",\n    city:\"Beijing\"\n  }\n};\n</code></pre>\n\n<p>###3.2   检索###<br>要检索对象中包含的值，可以采用在[]后缀中括住一个字符串表达式的方式。若字符串是一个常数且他是一个合法的JavaScript标识符而非保留字,那么也可以用.表示法代替，优先使用.表示法，因为更紧凑可读性更好。</p>\n<pre><code>stooge[\"first-name\"] //Chouchou\nflight.departure.city //\"Kuala Lumpu\"\n</code></pre>\n若检索一个并不存在的成员元素的值，则返回undefined。\n\n\n||运算符可以用来填充默认值\n<pre><code>var status=flight.status||\"unkown\";\n</code></pre>\n\n<p>尝试检索一个undefined值将会导致TypeError异常。可通过&amp;&amp;避免错误。</p>\n<pre><code>flight.equipment//undefined\nflight.equipment.model//throw \"TypeError\"\nflight.equipment&&flight.equipment.model//undefined\n</code></pre>\n\n<p>###3.3   更新###<br>对象中的值可以通过复制语句来更新，若属性名已经存在于对象中，那么该属性的值被替换，如果对象之前并未拥有这个属性名，则该属性会被扩充到该对象中。</p>\n<p>###3.4   引用###<br>对象通过引用来传递。它们永远不会被拷贝。</p>\n<pre><code>var x=chouchou;\nx.nickname='huang';\nvar nick=chouchou.nickname;\n//因为x和chouchou是指向同一个对象的引用，所以nick也为'huang'\nvar a={},b={},c={};\n//a,b,c每个都引用不同的空对象。\na=b=c={};\n//a,b,c都引用同一个空对象。\n</code></pre>\n###3.5    原型（prototype）###\n每一个对象都连接到一个原型对象，并且它可以从中继承，所有通过对象字面量创建的对象都连接到Object.prototype这个JavaScript的标准对象。\n当创建一个新对象时，可选择某个对象作为它的原型。这个给Object增加一个beget方法，beget方法创建一个使用原对象作为其原型的新对象。(不是很明白，留坑)\n<pre><code>if(typeof Object.beget !== 'function') {\n    Object.beget =function (o) {\n            var F=function () {};\n            F.prototype=o;\n            return new F(); \n    }\n}\nvar another_chouchou=Object.beget(chouchou);\n</code></pre>\n\n<p>原型连接在更新是不起作用的，当我们对某个对象做出改变时，不会触及到该对象的原型。原型连接只有在检索值时才被用到，如果我们尝试去获取对象的某个属性值，且该对象没有此属性名，则JavaScript试着从原型对象中获取属性值。如果那个原型对象也没有该属性，则从它的原型中寻找，依次类推，直到终点Object.prototype。如果想要的属性完全不在原型链中则返回undefined。这个过程称为<strong>委托</strong></p>\n<p>原型关系是一种动态的关系。若我们添加一个新的属性到原型中，则该属性会立即对所有基于该原型创建的对象可见。</p>\n<pre><code>chouchou.profession=\"front-end develoer\";\nanother_chouchou.profession;//\"frond-end developer\"\n</code></pre>\n###3.6    反射###\n检查对象并确定有什么属性很容易，只要试着去检索该属性并验证所取得的值。可用typeof，但是原型链中的任何属性也会产生一个值，例如\n<pre><code>typeof flight.toString //'function'\ntypeof flight.constructor //'function'\n</code></pre>\n有两个方法去除这些不必要的属性。\n1.让你的程序检查并剔除函数值。一般来说，做反射的目标是数据。因此你应该意识到一些值可能会是函数。\n2.hasOwnProperty方法，如果对象拥有独立属性返回true，hasOwnProperty不会检查原型链。\n\n###3.7    枚举###\nfor in 语句可用来遍历一个对象中所有的属性名。该枚举过程将会列出所有的属性，包括函数和你可能不关心原型链中的属性。所以我们需要过滤，常用的过滤器是hasOwnProperty以及typeof来排除函数。属性名出现顺序不确定，要以确定的顺序应创建一个数组，在其中以正确的顺序包含属性名。\n<pre><code>var i;\nvar properties=['fistr-name','middle-name','last-name''profession'];\nfor(i = 0; i < properties.length;i +=1 ){\n  document.writeln(properties[i]+':'+another.chouchou[propertites[i]]);\n}\n</code></pre>\n###3.8    删除###\ndelete运算符可以用来删除对象的属性。它不会触及原型链中的任何对象。删除对象的属性可能让来自原型链中的属性浮现出来。\n<pre><code>another.chouchou.nickname //'me'\ndelete another.chouchou.nickname;\nanother.chouchou.nickname // 'huang'\n</code></pre>\n###3.9     减少全局变量污染###\nJavaScript可以很随意的定义哪些可保存所有应用资源的全局变量。但全局变量减弱了程序的灵活性，应予以避免。最小化使用全局变量的方法是在你的应用中只创建一个全局变量。\n<pre><code>var MYAPP={};</code></pre>\n该变量此时编程了你的应用的容器。\n<pre><code>MYAPP.chouchou={\"first-name\":\"Chouchou\",\"last-name\":\"Shouchouchou\"};\nMYAPP.flight={airline=\"mh\",number=370,\n    departure：{\n      IATA:\"KL\"，\n      time:\"2014-03-08 00:25\",\n      city:\"Kuala Lumpu\"\n    },\n    arrival:{\n      IATA:\"CN\"，\n      time:\"future\",\n      city:\"Beijing\"\n    }\n};\n</code></pre>\n\n<p>只有把多个全局变量都整理在一个名称空间下，你讲显著降低与其他应用程序，组件或类库之间产生糟糕的相互影响的可能性。下一章将介绍闭包来有效减少全局污染。</p><p></p>\n<hr>\n\n<p>今天学习了对象中的一些重要性质，如原型、反射、减少全局污染，留下这些坑明晚展开讨论。</p>\n<p>感谢阅读，如果文中有不对的地方欢迎指出，另文中一些我不懂的或者留下的坑也欢迎大家赐教=。= </p>\n"}]